{"ast":null,"code":"import Decimal from \"decimal.js\";\nimport rp from \"request-promise\";\nimport Web3 from 'web3';\nimport config from '../config/example.config';\nimport { CONFIGURE, ERROR, EXIT, GET_REWARDS, GET_REWARDS_RETURNED, GET_STAKE_APY_DETAIL, GET_STAKE_APY_DETAIL_DONE, STAKE, STAKE_RETURNED, UPDATE_APY_DETAIL, WITHDRAW, WITHDRAW_RETURNED } from \"../constants/constants-extension\";\nimport stakePools from \"../setting/stake\";\nimport store from \"./store\";\n\nconst Emitter = require('events').EventEmitter;\n\nconst emitter = new Emitter();\nexport const StoreExtension = (clazz, dispatcher) => {\n  const _stakeBalance = async (web3, asset, account) => {\n    const erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.address);\n    const balance = await erc20Contract.methods.balanceOf(account.address).call({\n      from: account.address\n    }); // console.log(balance, parseFloat(balance)/10**asset.decimals, new Decimal(balance).toFixed(12), \"_stakeBalance ==\");\n\n    return new Decimal(parseFloat(balance) / 10 ** asset.decimals).toFixed();\n  };\n\n  const _stakedBalance = async (web3, asset, account) => {\n    let erc20Contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n    let balance = await erc20Contract.methods.balanceOf(account.address).call({\n      from: account.address\n    }); // console.log(balance, parseFloat(balance)/10**asset.decimals, new Decimal(balance).toFixed(12), \"_stakedBalance ==\");\n\n    return new Decimal(parseFloat(balance) / 10 ** asset.decimals).toFixed();\n  };\n\n  const _stakeRewards = async (web3, asset, account) => {\n    let erc20Contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n    let balance = await erc20Contract.methods.earned(account.address).call({\n      from: account.address\n    }); // console.log(balance, parseFloat(balance)/10**asset.rewardDecimals, new Decimal(balance).toFixed(12), \"_stakeRewards ==\");\n\n    return new Decimal(parseFloat(balance) / 10 ** asset.rewardDecimals).toFixed();\n  }; // stake page details\n\n\n  clazz.store.stakePools = stakePools;\n\n  clazz.stakeAPYDetail = async () => {\n    // console.log(\"stakeAPYDetail ==\")\n    let timeoutObj;\n    let missionCount = 0;\n    const account = clazz.store.account;\n    const web3 = new Web3(clazz.store.web3context.library.provider);\n    const ariesAPYs = await clazz.getAriesAPYs(); // console.log(clazz.store.stakePools, \"newStakePools - start ==\");\n\n    clazz.store.stakePools.forEach(pool => {\n      pool.tokens.forEach(async token => {\n        // console.log(token, `${pool.name} pool - tokens - start ==`);\n        token.balance = await _stakeBalance(web3, token, account);\n        token.stakedBalance = await _stakedBalance(web3, token, account);\n        token.rewardsAvailable = await _stakeRewards(web3, token, account);\n        token.ariesAPY = await clazz.getAriesAPY(ariesAPYs, token);\n        missionCount++; // console.log(token, `${pool.name} pool - tokens - end ==`);\n      });\n    });\n    timeoutObj = setInterval(() => {\n      if (missionCount === 5) {\n        clearInterval(timeoutObj);\n        store.emitter.emit(GET_STAKE_APY_DETAIL_DONE); // console.log(clazz.store.stakePools, \"newStakePools - end ==\");\n      }\n    }, 1000);\n  };\n\n  clazz.updateStakeAPYDetail = async payload => {\n    // console.log(payload.content.asset, \"updateStakeAPYDetail - start ==\");\n    const web3 = new Web3(clazz.store.web3context.library.provider);\n    const account = clazz.store.account;\n    const asset = payload.content.asset;\n    const balance = await _stakeBalance(web3, asset, account);\n    const stakedBalance = await _stakedBalance(web3, asset, account);\n    const rewardsAvailable = await _stakeRewards(web3, asset, account);\n    asset.balance = balance;\n    asset.stakedBalance = stakedBalance;\n    asset.rewardsAvailable = rewardsAvailable; // console.log(payload.content, \"updateStakeAPYDetail - end ==\");\n    // console.log(clazz.store.stakePools);\n\n    setTimeout(() => {\n      // console.log(\"emit - GET_STAKE_APY_DETAIL_DONE ==\");\n      store.emitter.emit(GET_STAKE_APY_DETAIL_DONE);\n    }, 1000);\n  };\n\n  clazz.stake = payload => {\n    const account = clazz.store.account;\n    const {\n      asset,\n      amount\n    } = payload.content;\n\n    clazz._stakeCheckApproval(asset, account, amount, asset.rewardsAddress, err => {\n      if (err) return emitter.emit(ERROR, err);\n\n      clazz._stakeCallStake(asset, account, amount, payload, (err, res) => {\n        if (err) return emitter.emit(ERROR, err);\n        return emitter.emit(STAKE_RETURNED, res);\n      }).then(r => r);\n    }).then(r => r);\n  };\n\n  clazz._stakeCheckApproval = async (asset, account, amount, contract, callback) => {\n    // console.log(asset, account, amount, \"Stake - checkApproval - start==\");\n    try {\n      const web3 = new Web3(clazz.store.web3context.library.provider);\n      const erc20Contract = new web3.eth.Contract(asset.abi, asset.address);\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n        from: account.address\n      });\n      const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n      if (parseFloat(ethAllowance) < parseFloat(amount)) {\n        await erc20Contract.methods.approve(contract, web3.utils.toWei(\"999999999999999\", \"ether\")).send({\n          from: account.address,\n          gasPrice: web3.utils.toWei(await clazz._stakeGetGasPrice(), 'gwei')\n        });\n        callback();\n      } else {\n        callback();\n      }\n    } catch (error) {\n      // console.log(asset, account, amount, error, \"Stake - checkApproval - error==\");\n      if (error.message) {\n        return callback(error.message);\n      }\n\n      callback(error);\n    } // console.log(asset, account, amount, \"Stake - checkApproval - end==\");\n\n  };\n\n  clazz._stakeCallStake = async (asset, account, amount, payload, callback) => {\n    // console.log(asset, account, amount, \"Stake - callStake - start==\");\n    const web3 = new Web3(clazz.store.web3context.library.provider);\n    const rewardContract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n    let amountToSend = web3.utils.toWei(amount, \"ether\");\n\n    if (asset.decimals !== 18) {\n      amountToSend = (amount * 10 ** asset.decimals).toFixed(0);\n    }\n\n    rewardContract.methods.stake(amountToSend).send({\n      from: account.address,\n      gasPrice: web3.utils.toWei(await clazz._stakeGetGasPrice(), 'gwei')\n    }).on('transactionHash', function (hash) {\n      console.log(hash, \"Stake - transactionHash==\");\n      callback(null, hash);\n    }).on('confirmation', function (confirmationNumber, receipt) {\n      console.log(confirmationNumber, receipt, \"Stake - confirmation==\");\n\n      if (confirmationNumber === 2) {\n        console.log(receipt, \"Stake - updateStakeAPYDetail==\");\n        clazz.updateStakeAPYDetail(payload);\n      }\n    }).on('receipt', function (receipt) {\n      console.log(receipt, \"Stake - receipt==\");\n    }).on('error', function (error) {\n      console.log(error, \"Stake - error==\");\n      if (!error.toString().includes(\"-32601\")) return error.message ? callback(error.message) : callback(error);\n    }).catch(error => {\n      console.log(error, \"Stake - catch - error==\");\n      if (!error.toString().includes(\"-32601\")) return error.message ? callback(error.message) : callback(error);\n    }); // console.log(asset, account, amount, \"Stake - callStake - end==\");\n  };\n\n  clazz._stakeGetGasPrice = async () => {\n    try {\n      // todo: get real Gas Price\n      const url = 'https://gasprice.poa.network/';\n      const priceString = await rp(url);\n      const priceJSON = JSON.parse(priceString);\n\n      if (priceJSON) {\n        return priceJSON.fast.toFixed(0);\n      }\n\n      return clazz.store.universalGasPrice;\n    } catch (e) {\n      console.error(e);\n      return clazz.store.universalGasPrice;\n    }\n  };\n\n  clazz.stakeWithdraw = async payload => {\n    // console.log(\"stakeWithdraw - start ==\");\n    const account = clazz.store.account;\n    const {\n      asset,\n      amount\n    } = payload.content;\n    await clazz._stakeCallWithdraw(asset, account, amount, payload, (err, res) => {\n      // console.log(asset, account, amount, \"UnStake - stakeCallWithdraw - start==\");\n      if (err) return emitter.emit(ERROR, err); // console.log(asset, account, amount, \"UnStake - stakeCallWithdraw - end==\");\n\n      return emitter.emit(WITHDRAW_RETURNED, res);\n    }); // console.log(\"stakeWithdraw - end ==\");\n  };\n\n  clazz._stakeCallWithdraw = async (asset, account, amount, payload, callback) => {\n    const web3 = new Web3(clazz.store.web3context.library.provider);\n    const contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n    let amountToSend = web3.utils.toWei(amount, \"ether\");\n\n    if (asset.decimals !== 18) {\n      amountToSend = (amount * 10 ** asset.decimals).toFixed(0);\n    }\n\n    await contract.methods.withdraw(amountToSend).send({\n      from: account.address,\n      gasPrice: web3.utils.toWei(await clazz._getGasPrice(), 'gwei')\n    }).on('transactionHash', function (hash) {\n      console.log(hash, \"UnStake - transactionHash==\");\n      callback(null, hash);\n    }).on('confirmation', function (confirmationNumber, receipt) {\n      console.log(confirmationNumber, receipt, payload, \"UnStake - confirmation==\");\n\n      if (confirmationNumber === 2) {\n        clazz.updateStakeAPYDetail(payload);\n      }\n    }).on('error', function (error) {\n      console.log(error, \"UnStake - error==\");\n\n      if (!error.toString().includes(\"-32601\")) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    }).catch(error => {\n      console.log(error, \"UnStake - catch==\");\n\n      if (!error.toString().includes(\"-32601\")) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    });\n  };\n\n  clazz.stakeRewards = async payload => {\n    console.log(\"stakeRewards - start ==\");\n    const token = payload.content.tokens[0];\n    const web3 = new Web3(clazz.store.web3context.library.provider);\n    const account = clazz.store.account;\n    const contract = new web3.eth.Contract(token.rewardsABI, token.rewardsAddress);\n    contract.methods.getReward().send({\n      from: account.address,\n      gasPrice: web3.utils.toWei(await clazz._getGasPrice(), 'gwei')\n    }).on('transactionHash', function (hash) {\n      console.log(hash, \"stakeRewards - transactionHash ==\");\n    }).on('confirmation', function (confirmationNumber, receipt) {\n      console.log(confirmationNumber, receipt, \"stakeRewards - confirmation ==\");\n      if (confirmationNumber === 2) clazz.updateStakeAPYDetail(payload);\n    }).on('receipt', function (receipt) {\n      console.log(receipt, \"stakeRewards - confirmation ==\");\n    }).on('error', function (error) {\n      console.log(error, \"stakeRewards - error ==\");\n    });\n    console.log(\"stakeRewards - end ==\");\n    emitter.emit(GET_REWARDS_RETURNED, \"You have got your reward\");\n  };\n  /**\n  * execute stakeExit and stakeWithdraw\n  * */\n\n\n  clazz.stakeExit = async payload => {\n    console.log(payload, \"stakeExit ==\");\n    const asset = payload.content.tokens[0];\n    payload.content.asset = asset;\n    payload.content.amount = asset.stakedBalance;\n    clazz.stakeWithdraw(payload).then(r => clazz.stakeRewards(payload));\n  };\n  /**\n   {\n    \"code\": \"0\",\n    \"mesg\": \"ok\",\n    \"data\": [\n        {\n            \"pool_identifier\": \"AFI Governance Pool\",\n            \"liquidity_lock\": \"36618.52919\",\n            \"apy\": \"44102.552\"\n        },\n        {\n            \"pool_identifier\": \"UniLP_AFI_USDC Pool\",\n            \"liquidity_lock\": \"5575\",\n            \"apy\": \"318555.138304\"\n        },\n        {\n            \"pool_identifier\": \"afiUSDC Pool\",\n            \"liquidity_lock\": \"94219.97928\",\n            \"apy\": \"2792.07968\"\n        },\n        {\n            \"pool_identifier\": \"afiUSDT Pool\",\n            \"liquidity_lock\": \"57866.19095\",\n            \"apy\": \"4560.973664\"\n        },\n        {\n            \"pool_identifier\": \"afiDAI Pool\",\n            \"liquidity_lock\": \"62931.47018\",\n            \"apy\": \"5309.72182\"\n        }\n    ]\n  }\n   * */\n\n\n  clazz.getAriesAPYs = async () => {\n    const response = await fetch(`${config.apiURLProvider}pools`).then(r => r.json());\n    return response;\n  };\n\n  clazz.getAriesAPY = async (ariesAPY, asset) => {\n    const result = ariesAPY.data.filter(value => {\n      return value.pool_identifier === asset.pool_identifier;\n    });\n    const apy = result.length > 0 && result[0].apy ? result[0].apy : 0;\n    console.log(apy, \"_getAriesAPY ==\");\n    return apy * 1;\n  };\n\n  dispatcher.register(function (payload) {\n    console.log(payload, \"payload ==\");\n\n    switch (payload.type) {\n      case GET_STAKE_APY_DETAIL:\n        clazz.stakeAPYDetail(payload);\n        break;\n\n      case GET_STAKE_APY_DETAIL_DONE:\n        break;\n\n      case STAKE:\n        clazz.stake(payload);\n        break;\n\n      case WITHDRAW:\n        clazz.stakeWithdraw(payload);\n        break;\n\n      case CONFIGURE:\n        console.log(\"Do CONFIGURE\", \"==\");\n        break;\n\n      case GET_REWARDS:\n        clazz.stakeRewards(payload);\n        break;\n\n      case EXIT:\n        clazz.stakeExit(payload);\n        break;\n\n      case UPDATE_APY_DETAIL:\n        clazz.updateStakeAPYDetail(payload);\n        break;\n\n      default:\n        console.log(\"Do nothing\", \"==\");\n    }\n  }.bind(clazz)); // console.log(\"StoreExtension init gets done\", \"==\");\n\n  return clazz;\n};","map":{"version":3,"sources":["/Users/waltorhuang/cookbook/javascript/aries-financial-web/src/stores/store-extension.jsx"],"names":["Decimal","rp","Web3","config","CONFIGURE","ERROR","EXIT","GET_REWARDS","GET_REWARDS_RETURNED","GET_STAKE_APY_DETAIL","GET_STAKE_APY_DETAIL_DONE","STAKE","STAKE_RETURNED","UPDATE_APY_DETAIL","WITHDRAW","WITHDRAW_RETURNED","stakePools","store","Emitter","require","EventEmitter","emitter","StoreExtension","clazz","dispatcher","_stakeBalance","web3","asset","account","erc20Contract","eth","Contract","erc20ABI","address","balance","methods","balanceOf","call","from","parseFloat","decimals","toFixed","_stakedBalance","rewardsABI","rewardsAddress","_stakeRewards","earned","rewardDecimals","stakeAPYDetail","timeoutObj","missionCount","web3context","library","provider","ariesAPYs","getAriesAPYs","forEach","pool","tokens","token","stakedBalance","rewardsAvailable","ariesAPY","getAriesAPY","setInterval","clearInterval","emit","updateStakeAPYDetail","payload","content","setTimeout","stake","amount","_stakeCheckApproval","err","_stakeCallStake","res","then","r","contract","callback","abi","allowance","ethAllowance","utils","fromWei","approve","toWei","send","gasPrice","_stakeGetGasPrice","error","message","rewardContract","amountToSend","on","hash","console","log","confirmationNumber","receipt","toString","includes","catch","url","priceString","priceJSON","JSON","parse","fast","universalGasPrice","e","stakeWithdraw","_stakeCallWithdraw","withdraw","_getGasPrice","stakeRewards","getReward","stakeExit","response","fetch","apiURLProvider","json","result","data","filter","value","pool_identifier","apy","length","register","type","bind"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACIC,SADJ,EACeC,KADf,EAEIC,IAFJ,EAEUC,WAFV,EAGIC,oBAHJ,EAG0BC,oBAH1B,EAIIC,yBAJJ,EAKIC,KALJ,EAMIC,cANJ,EAOIC,iBAPJ,EAOuBC,QAPvB,EAQIC,iBARJ,QASO,kCATP;AAUA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAlC;;AACA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;AAEA,OAAO,MAAMI,cAAc,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAEjD,QAAMC,aAAa,GAAG,OAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB,KAAgC;AAClD,UAAMC,aAAa,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsB5B,MAAM,CAAC6B,QAA7B,EAAuCL,KAAK,CAACM,OAA7C,CAAtB;AAEA,UAAMC,OAAO,GAAG,MAAML,aAAa,CAACM,OAAd,CAAsBC,SAAtB,CAAgCR,OAAO,CAACK,OAAxC,EACjBI,IADiB,CACZ;AAAEC,MAAAA,IAAI,EAAEV,OAAO,CAACK;AAAhB,KADY,CAAtB,CAHkD,CAKlD;;AACA,WAAO,IAAIjC,OAAJ,CAAYuC,UAAU,CAACL,OAAD,CAAV,GAAoB,MAAIP,KAAK,CAACa,QAA1C,EAAoDC,OAApD,EAAP;AACH,GAPD;;AASA,QAAMC,cAAc,GAAG,OAAOhB,IAAP,EAAaC,KAAb,EAAoBC,OAApB,KAAgC;AACnD,QAAIC,aAAa,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBJ,KAAK,CAACgB,UAA5B,EAAwChB,KAAK,CAACiB,cAA9C,CAApB;AAEA,QAAIV,OAAO,GAAG,MAAML,aAAa,CAACM,OAAd,CAAsBC,SAAtB,CAAgCR,OAAO,CAACK,OAAxC,EACfI,IADe,CACV;AAAEC,MAAAA,IAAI,EAAEV,OAAO,CAACK;AAAhB,KADU,CAApB,CAHmD,CAKnD;;AACA,WAAO,IAAIjC,OAAJ,CAAYuC,UAAU,CAACL,OAAD,CAAV,GAAoB,MAAIP,KAAK,CAACa,QAA1C,EAAoDC,OAApD,EAAP;AACH,GAPD;;AASA,QAAMI,aAAa,GAAG,OAAOnB,IAAP,EAAaC,KAAb,EAAoBC,OAApB,KAAgC;AAClD,QAAIC,aAAa,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBJ,KAAK,CAACgB,UAA5B,EAAwChB,KAAK,CAACiB,cAA9C,CAApB;AAEA,QAAIV,OAAO,GAAG,MAAML,aAAa,CAACM,OAAd,CAAsBW,MAAtB,CAA6BlB,OAAO,CAACK,OAArC,EACfI,IADe,CACV;AAAEC,MAAAA,IAAI,EAAEV,OAAO,CAACK;AAAhB,KADU,CAApB,CAHkD,CAKlD;;AACA,WAAO,IAAIjC,OAAJ,CAAYuC,UAAU,CAACL,OAAD,CAAV,GAAoB,MAAIP,KAAK,CAACoB,cAA1C,EAA0DN,OAA1D,EAAP;AACH,GAPD,CApBiD,CA6BjD;;;AACAlB,EAAAA,KAAK,CAACN,KAAN,CAAYD,UAAZ,GAAyBA,UAAzB;;AAEAO,EAAAA,KAAK,CAACyB,cAAN,GAAuB,YAAY;AAC/B;AACA,QAAIC,UAAJ;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,UAAMtB,OAAO,GAAGL,KAAK,CAACN,KAAN,CAAYW,OAA5B;AACA,UAAMF,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,KAAK,CAACN,KAAN,CAAYkC,WAAZ,CAAwBC,OAAxB,CAAgCC,QAAzC,CAAb;AACA,UAAMC,SAAS,GAAG,MAAM/B,KAAK,CAACgC,YAAN,EAAxB,CAN+B,CAO/B;;AACAhC,IAAAA,KAAK,CAACN,KAAN,CAAYD,UAAZ,CAAuBwC,OAAvB,CAAgCC,IAAD,IAAU;AACrCA,MAAAA,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAoB,MAAOG,KAAP,IAAiB;AACjC;AACAA,QAAAA,KAAK,CAACzB,OAAN,GAAgB,MAAMT,aAAa,CAACC,IAAD,EAAOiC,KAAP,EAAc/B,OAAd,CAAnC;AACA+B,QAAAA,KAAK,CAACC,aAAN,GAAsB,MAAMlB,cAAc,CAAChB,IAAD,EAAOiC,KAAP,EAAc/B,OAAd,CAA1C;AACA+B,QAAAA,KAAK,CAACE,gBAAN,GAAyB,MAAMhB,aAAa,CAACnB,IAAD,EAAOiC,KAAP,EAAc/B,OAAd,CAA5C;AACA+B,QAAAA,KAAK,CAACG,QAAN,GAAiB,MAAMvC,KAAK,CAACwC,WAAN,CAAkBT,SAAlB,EAA6BK,KAA7B,CAAvB;AACAT,QAAAA,YAAY,GANqB,CAOjC;AACH,OARD;AASH,KAVD;AAWAD,IAAAA,UAAU,GAAGe,WAAW,CAAC,MAAM;AAC3B,UAAGd,YAAY,KAAK,CAApB,EAAuB;AACnBe,QAAAA,aAAa,CAAChB,UAAD,CAAb;AACAhC,QAAAA,KAAK,CAACI,OAAN,CAAc6C,IAAd,CAAmBxD,yBAAnB,EAFmB,CAGnB;AACH;AACJ,KANuB,EAMrB,IANqB,CAAxB;AAOH,GA1BD;;AA4BAa,EAAAA,KAAK,CAAC4C,oBAAN,GAA6B,MAAOC,OAAP,IAAmB;AAC5C;AACA,UAAM1C,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,KAAK,CAACN,KAAN,CAAYkC,WAAZ,CAAwBC,OAAxB,CAAgCC,QAAzC,CAAb;AACA,UAAMzB,OAAO,GAAGL,KAAK,CAACN,KAAN,CAAYW,OAA5B;AACA,UAAMD,KAAK,GAAGyC,OAAO,CAACC,OAAR,CAAgB1C,KAA9B;AAEA,UAAMO,OAAO,GAAG,MAAMT,aAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,CAAnC;AACA,UAAMgC,aAAa,GAAG,MAAMlB,cAAc,CAAChB,IAAD,EAAOC,KAAP,EAAcC,OAAd,CAA1C;AACA,UAAMiC,gBAAgB,GAAG,MAAMhB,aAAa,CAACnB,IAAD,EAAOC,KAAP,EAAcC,OAAd,CAA5C;AAEAD,IAAAA,KAAK,CAACO,OAAN,GAAgBA,OAAhB;AACAP,IAAAA,KAAK,CAACiC,aAAN,GAAsBA,aAAtB;AACAjC,IAAAA,KAAK,CAACkC,gBAAN,GAAyBA,gBAAzB,CAZ4C,CAa5C;AACA;;AACAS,IAAAA,UAAU,CAAC,MAAI;AACX;AACArD,MAAAA,KAAK,CAACI,OAAN,CAAc6C,IAAd,CAAmBxD,yBAAnB;AACH,KAHS,EAGP,IAHO,CAAV;AAIH,GAnBD;;AAqBAa,EAAAA,KAAK,CAACgD,KAAN,GAAeH,OAAD,IAAa;AACvB,UAAMxC,OAAO,GAAGL,KAAK,CAACN,KAAN,CAAYW,OAA5B;AACA,UAAM;AAAED,MAAAA,KAAF;AAAS6C,MAAAA;AAAT,QAAoBJ,OAAO,CAACC,OAAlC;;AACA9C,IAAAA,KAAK,CAACkD,mBAAN,CAA0B9C,KAA1B,EAAiCC,OAAjC,EAA0C4C,MAA1C,EAAkD7C,KAAK,CAACiB,cAAxD,EAAyE8B,GAAD,IAAS;AAC7E,UAAIA,GAAJ,EAAS,OAAOrD,OAAO,CAAC6C,IAAR,CAAa7D,KAAb,EAAoBqE,GAApB,CAAP;;AACTnD,MAAAA,KAAK,CAACoD,eAAN,CAAsBhD,KAAtB,EAA6BC,OAA7B,EAAsC4C,MAAtC,EAA8CJ,OAA9C,EAAuD,CAACM,GAAD,EAAME,GAAN,KAAc;AACjE,YAAIF,GAAJ,EAAS,OAAOrD,OAAO,CAAC6C,IAAR,CAAa7D,KAAb,EAAoBqE,GAApB,CAAP;AACT,eAAOrD,OAAO,CAAC6C,IAAR,CAAatD,cAAb,EAA6BgE,GAA7B,CAAP;AACH,OAHD,EAGGC,IAHH,CAGQC,CAAC,IAAIA,CAHb;AAIH,KAND,EAMGD,IANH,CAMQC,CAAC,IAAIA,CANb;AAOH,GAVD;;AAYAvD,EAAAA,KAAK,CAACkD,mBAAN,GAA4B,OAAO9C,KAAP,EAAcC,OAAd,EAAuB4C,MAAvB,EAA+BO,QAA/B,EAAyCC,QAAzC,KAAsD;AAC9E;AACA,QAAI;AACA,YAAMtD,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,KAAK,CAACN,KAAN,CAAYkC,WAAZ,CAAwBC,OAAxB,CAAgCC,QAAzC,CAAb;AAEA,YAAMxB,aAAa,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBJ,KAAK,CAACsD,GAA5B,EAAiCtD,KAAK,CAACM,OAAvC,CAAtB;AACA,YAAMiD,SAAS,GAAG,MAAMrD,aAAa,CAACM,OAAd,CAAsB+C,SAAtB,CAAgCtD,OAAO,CAACK,OAAxC,EAAiD8C,QAAjD,EACnB1C,IADmB,CACd;AAAEC,QAAAA,IAAI,EAAEV,OAAO,CAACK;AAAhB,OADc,CAAxB;AAGA,YAAMkD,YAAY,GAAGzD,IAAI,CAAC0D,KAAL,CAAWC,OAAX,CAAmBH,SAAnB,EAA8B,OAA9B,CAArB;;AAEA,UAAG3C,UAAU,CAAC4C,YAAD,CAAV,GAA2B5C,UAAU,CAACiC,MAAD,CAAxC,EAAkD;AAC9C,cAAM3C,aAAa,CAACM,OAAd,CAAsBmD,OAAtB,CAA8BP,QAA9B,EAAwCrD,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiB,iBAAjB,EAAoC,OAApC,CAAxC,EACDC,IADC,CACI;AACFlD,UAAAA,IAAI,EAAEV,OAAO,CAACK,OADZ;AAEFwD,UAAAA,QAAQ,EAAE/D,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiB,MAAMhE,KAAK,CAACmE,iBAAN,EAAvB,EAAkD,MAAlD;AAFR,SADJ,CAAN;AAKAV,QAAAA,QAAQ;AACX,OAPD,MAOO;AACHA,QAAAA,QAAQ;AACX;AACJ,KAnBD,CAmBE,OAAMW,KAAN,EAAa;AACX;AACA,UAAGA,KAAK,CAACC,OAAT,EAAkB;AACd,eAAOZ,QAAQ,CAACW,KAAK,CAACC,OAAP,CAAf;AACH;;AACDZ,MAAAA,QAAQ,CAACW,KAAD,CAAR;AACH,KA3B6E,CA4B9E;;AACH,GA7BD;;AA+BApE,EAAAA,KAAK,CAACoD,eAAN,GAAwB,OAAOhD,KAAP,EAAcC,OAAd,EAAuB4C,MAAvB,EAA+BJ,OAA/B,EAAwCY,QAAxC,KAAqD;AACzE;AACA,UAAMtD,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,KAAK,CAACN,KAAN,CAAYkC,WAAZ,CAAwBC,OAAxB,CAAgCC,QAAzC,CAAb;AAEA,UAAMwC,cAAc,GAAG,IAAInE,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBJ,KAAK,CAACgB,UAA5B,EAAwChB,KAAK,CAACiB,cAA9C,CAAvB;AAEA,QAAIkD,YAAY,GAAGpE,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiBf,MAAjB,EAAyB,OAAzB,CAAnB;;AACA,QAAI7C,KAAK,CAACa,QAAN,KAAmB,EAAvB,EAA2B;AACvBsD,MAAAA,YAAY,GAAG,CAACtB,MAAM,GAAC,MAAI7C,KAAK,CAACa,QAAlB,EAA4BC,OAA5B,CAAoC,CAApC,CAAf;AACH;;AAEDoD,IAAAA,cAAc,CAAC1D,OAAf,CAAuBoC,KAAvB,CAA6BuB,YAA7B,EAA2CN,IAA3C,CAAgD;AAC5ClD,MAAAA,IAAI,EAAEV,OAAO,CAACK,OAD8B;AAE5CwD,MAAAA,QAAQ,EAAE/D,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiB,MAAMhE,KAAK,CAACmE,iBAAN,EAAvB,EACV,MADU;AAFkC,KAAhD,EAKKK,EALL,CAKQ,iBALR,EAK2B,UAASC,IAAT,EAAc;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,2BAAlB;AACAhB,MAAAA,QAAQ,CAAC,IAAD,EAAOgB,IAAP,CAAR;AACH,KARL,EASKD,EATL,CASQ,cATR,EASwB,UAASI,kBAAT,EAA6BC,OAA7B,EAAqC;AACrDH,MAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAZ,EAAgCC,OAAhC,EAAyC,wBAAzC;;AACA,UAAGD,kBAAkB,KAAK,CAA1B,EAA6B;AACzBF,QAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ,EAAqB,gCAArB;AACA7E,QAAAA,KAAK,CAAC4C,oBAAN,CAA2BC,OAA3B;AACH;AACJ,KAfL,EAgBK2B,EAhBL,CAgBQ,SAhBR,EAgBmB,UAASK,OAAT,EAAiB;AAC5BH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ,EAAqB,mBAArB;AACH,KAlBL,EAmBKL,EAnBL,CAmBQ,OAnBR,EAmBiB,UAASJ,KAAT,EAAgB;AACzBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,iBAAnB;AACA,UAAI,CAACA,KAAK,CAACU,QAAN,GAAiBC,QAAjB,CAA0B,QAA1B,CAAL,EAA0C,OAAOX,KAAK,CAACC,OAAN,GAAgBZ,QAAQ,CAACW,KAAK,CAACC,OAAP,CAAxB,GAA0CZ,QAAQ,CAACW,KAAD,CAAzD;AAC7C,KAtBL,EAuBKY,KAvBL,CAuBYZ,KAAD,IAAW;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,yBAAnB;AACA,UAAI,CAACA,KAAK,CAACU,QAAN,GAAiBC,QAAjB,CAA0B,QAA1B,CAAL,EAA0C,OAAOX,KAAK,CAACC,OAAN,GAAgBZ,QAAQ,CAACW,KAAK,CAACC,OAAP,CAAxB,GAA0CZ,QAAQ,CAACW,KAAD,CAAzD;AAC7C,KA1BL,EAXyE,CAsCzE;AACH,GAvCD;;AAyCApE,EAAAA,KAAK,CAACmE,iBAAN,GAA0B,YAAY;AAClC,QAAI;AACA;AACA,YAAMc,GAAG,GAAG,+BAAZ;AACA,YAAMC,WAAW,GAAG,MAAMxG,EAAE,CAACuG,GAAD,CAA5B;AACA,YAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,WAAX,CAAlB;;AACA,UAAGC,SAAH,EAAc;AACV,eAAOA,SAAS,CAACG,IAAV,CAAepE,OAAf,CAAuB,CAAvB,CAAP;AACH;;AACD,aAAOlB,KAAK,CAACN,KAAN,CAAY6F,iBAAnB;AACH,KATD,CASE,OAAMC,CAAN,EAAS;AACPd,MAAAA,OAAO,CAACN,KAAR,CAAcoB,CAAd;AACA,aAAOxF,KAAK,CAACN,KAAN,CAAY6F,iBAAnB;AACH;AACJ,GAdD;;AAgBAvF,EAAAA,KAAK,CAACyF,aAAN,GAAsB,MAAO5C,OAAP,IAAmB;AACrC;AACA,UAAMxC,OAAO,GAAGL,KAAK,CAACN,KAAN,CAAYW,OAA5B;AACA,UAAM;AAAED,MAAAA,KAAF;AAAS6C,MAAAA;AAAT,QAAoBJ,OAAO,CAACC,OAAlC;AAEA,UAAM9C,KAAK,CAAC0F,kBAAN,CAAyBtF,KAAzB,EAAgCC,OAAhC,EAAyC4C,MAAzC,EAAiDJ,OAAjD,EAA0D,CAACM,GAAD,EAAME,GAAN,KAAc;AAC1E;AACA,UAAIF,GAAJ,EAAS,OAAOrD,OAAO,CAAC6C,IAAR,CAAa7D,KAAb,EAAoBqE,GAApB,CAAP,CAFiE,CAG1E;;AACA,aAAOrD,OAAO,CAAC6C,IAAR,CAAanD,iBAAb,EAAgC6D,GAAhC,CAAP;AACH,KALK,CAAN,CALqC,CAWrC;AACH,GAZD;;AAcArD,EAAAA,KAAK,CAAC0F,kBAAN,GAA2B,OAAOtF,KAAP,EAAcC,OAAd,EAAuB4C,MAAvB,EAA+BJ,OAA/B,EAAwCY,QAAxC,KAAqD;AAC5E,UAAMtD,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,KAAK,CAACN,KAAN,CAAYkC,WAAZ,CAAwBC,OAAxB,CAAgCC,QAAzC,CAAb;AAEA,UAAM0B,QAAQ,GAAG,IAAIrD,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBJ,KAAK,CAACgB,UAA5B,EAAwChB,KAAK,CAACiB,cAA9C,CAAjB;AAEA,QAAIkD,YAAY,GAAGpE,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiBf,MAAjB,EAAyB,OAAzB,CAAnB;;AACA,QAAI7C,KAAK,CAACa,QAAN,KAAmB,EAAvB,EAA2B;AACvBsD,MAAAA,YAAY,GAAG,CAACtB,MAAM,GAAC,MAAI7C,KAAK,CAACa,QAAlB,EAA4BC,OAA5B,CAAoC,CAApC,CAAf;AACH;;AAED,UAAMsC,QAAQ,CAAC5C,OAAT,CAAiB+E,QAAjB,CAA0BpB,YAA1B,EAAwCN,IAAxC,CAA6C;AAAElD,MAAAA,IAAI,EAAEV,OAAO,CAACK,OAAhB;AAAyBwD,MAAAA,QAAQ,EAAE/D,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiB,MAAMhE,KAAK,CAAC4F,YAAN,EAAvB,EAA6C,MAA7C;AAAnC,KAA7C,EACDpB,EADC,CACE,iBADF,EACqB,UAASC,IAAT,EAAc;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,6BAAlB;AACAhB,MAAAA,QAAQ,CAAC,IAAD,EAAOgB,IAAP,CAAR;AACH,KAJC,EAKDD,EALC,CAKE,cALF,EAKkB,UAASI,kBAAT,EAA6BC,OAA7B,EAAqC;AACrDH,MAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAZ,EAAgCC,OAAhC,EAAyChC,OAAzC,EAAkD,0BAAlD;;AACA,UAAG+B,kBAAkB,KAAK,CAA1B,EAA6B;AACzB5E,QAAAA,KAAK,CAAC4C,oBAAN,CAA2BC,OAA3B;AACH;AACJ,KAVC,EAWD2B,EAXC,CAWE,OAXF,EAWW,UAASJ,KAAT,EAAgB;AACzBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,mBAAnB;;AACA,UAAI,CAACA,KAAK,CAACU,QAAN,GAAiBC,QAAjB,CAA0B,QAA1B,CAAL,EAA0C;AACtC,YAAGX,KAAK,CAACC,OAAT,EAAkB;AACd,iBAAOZ,QAAQ,CAACW,KAAK,CAACC,OAAP,CAAf;AACH;;AACDZ,QAAAA,QAAQ,CAACW,KAAD,CAAR;AACH;AACJ,KAnBC,EAoBDY,KApBC,CAoBMZ,KAAD,IAAW;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,mBAAnB;;AACA,UAAI,CAACA,KAAK,CAACU,QAAN,GAAiBC,QAAjB,CAA0B,QAA1B,CAAL,EAA0C;AACtC,YAAGX,KAAK,CAACC,OAAT,EAAkB;AACd,iBAAOZ,QAAQ,CAACW,KAAK,CAACC,OAAP,CAAf;AACH;;AACDZ,QAAAA,QAAQ,CAACW,KAAD,CAAR;AACH;AACJ,KA5BC,CAAN;AA6BH,GAvCD;;AAyCApE,EAAAA,KAAK,CAAC6F,YAAN,GAAqB,MAAOhD,OAAP,IAAmB;AACpC6B,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAMvC,KAAK,GAAGS,OAAO,CAACC,OAAR,CAAgBX,MAAhB,CAAuB,CAAvB,CAAd;AACA,UAAMhC,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,KAAK,CAACN,KAAN,CAAYkC,WAAZ,CAAwBC,OAAxB,CAAgCC,QAAzC,CAAb;AACA,UAAMzB,OAAO,GAAGL,KAAK,CAACN,KAAN,CAAYW,OAA5B;AAEA,UAAMmD,QAAQ,GAAG,IAAIrD,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsB4B,KAAK,CAAChB,UAA5B,EAAwCgB,KAAK,CAACf,cAA9C,CAAjB;AACAmC,IAAAA,QAAQ,CAAC5C,OAAT,CAAiBkF,SAAjB,GAA6B7B,IAA7B,CAAkC;AAAElD,MAAAA,IAAI,EAAEV,OAAO,CAACK,OAAhB;AAAyBwD,MAAAA,QAAQ,EAAE/D,IAAI,CAAC0D,KAAL,CAAWG,KAAX,CAAiB,MAAMhE,KAAK,CAAC4F,YAAN,EAAvB,EAA6C,MAA7C;AAAnC,KAAlC,EACKpB,EADL,CACQ,iBADR,EAC2B,UAASC,IAAT,EAAc;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,mCAAlB;AACH,KAHL,EAIKD,EAJL,CAIQ,cAJR,EAIwB,UAASI,kBAAT,EAA6BC,OAA7B,EAAqC;AACrDH,MAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAZ,EAAgCC,OAAhC,EAAyC,gCAAzC;AACA,UAAGD,kBAAkB,KAAK,CAA1B,EAA6B5E,KAAK,CAAC4C,oBAAN,CAA2BC,OAA3B;AAChC,KAPL,EAQK2B,EARL,CAQQ,SARR,EAQmB,UAASK,OAAT,EAAiB;AAC5BH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ,EAAqB,gCAArB;AACH,KAVL,EAWKL,EAXL,CAWQ,OAXR,EAWiB,UAASJ,KAAT,EAAgB;AACzBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,yBAAnB;AACH,KAbL;AAcAM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA7E,IAAAA,OAAO,CAAC6C,IAAR,CAAa1D,oBAAb,EAAmC,0BAAnC;AACH,GAvBD;AAyBA;AACJ;AACA;;;AACIe,EAAAA,KAAK,CAAC+F,SAAN,GAAkB,MAAOlD,OAAP,IAAmB;AACjC6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,OAAZ,EAAqB,cAArB;AACA,UAAMzC,KAAK,GAAGyC,OAAO,CAACC,OAAR,CAAgBX,MAAhB,CAAuB,CAAvB,CAAd;AACAU,IAAAA,OAAO,CAACC,OAAR,CAAgB1C,KAAhB,GAAwBA,KAAxB;AACAyC,IAAAA,OAAO,CAACC,OAAR,CAAgBG,MAAhB,GAAyB7C,KAAK,CAACiC,aAA/B;AACArC,IAAAA,KAAK,CAACyF,aAAN,CAAoB5C,OAApB,EAA6BS,IAA7B,CAAkCC,CAAC,IAAIvD,KAAK,CAAC6F,YAAN,CAAmBhD,OAAnB,CAAvC;AACH,GAND;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI7C,EAAAA,KAAK,CAACgC,YAAN,GAAqB,YAAY;AAC7B,UAAMgE,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAErH,MAAM,CAACsH,cAAe,OAA1B,CAAL,CAClB5C,IADkB,CACbC,CAAC,IAAEA,CAAC,CAAC4C,IAAF,EADU,CAAvB;AAEA,WAAOH,QAAP;AACH,GAJD;;AAMAhG,EAAAA,KAAK,CAACwC,WAAN,GAAoB,OAAOD,QAAP,EAAiBnC,KAAjB,KAA2B;AAC3C,UAAMgG,MAAM,GAAG7D,QAAQ,CAAC8D,IAAT,CAAcC,MAAd,CAAsBC,KAAD,IAAW;AAC3C,aAAOA,KAAK,CAACC,eAAN,KAA0BpG,KAAK,CAACoG,eAAvC;AACH,KAFc,CAAf;AAGA,UAAMC,GAAG,GAAGL,MAAM,CAACM,MAAP,GAAgB,CAAhB,IAAqBN,MAAM,CAAC,CAAD,CAAN,CAAUK,GAA/B,GAAqCL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAA/C,GAAqD,CAAjE;AACA/B,IAAAA,OAAO,CAACC,GAAR,CAAY8B,GAAZ,EAAiB,iBAAjB;AACA,WAAOA,GAAG,GAAC,CAAX;AACH,GAPD;;AASAxG,EAAAA,UAAU,CAAC0G,QAAX,CACI,UAAU9D,OAAV,EAAmB;AACf6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,OAAZ,EAAqB,YAArB;;AACA,YAAQA,OAAO,CAAC+D,IAAhB;AACI,WAAK1H,oBAAL;AACIc,QAAAA,KAAK,CAACyB,cAAN,CAAqBoB,OAArB;AACA;;AACJ,WAAK1D,yBAAL;AACI;;AACJ,WAAKC,KAAL;AACIY,QAAAA,KAAK,CAACgD,KAAN,CAAYH,OAAZ;AACA;;AACJ,WAAKtD,QAAL;AACIS,QAAAA,KAAK,CAACyF,aAAN,CAAoB5C,OAApB;AACA;;AACJ,WAAKhE,SAAL;AACI6F,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,IAA5B;AACA;;AACJ,WAAK3F,WAAL;AACIgB,QAAAA,KAAK,CAAC6F,YAAN,CAAmBhD,OAAnB;AACA;;AACJ,WAAK9D,IAAL;AACIiB,QAAAA,KAAK,CAAC+F,SAAN,CAAgBlD,OAAhB;AACA;;AACJ,WAAKvD,iBAAL;AACIU,QAAAA,KAAK,CAAC4C,oBAAN,CAA2BC,OAA3B;AACA;;AACJ;AACI6B,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,IAA1B;AAzBR;AA2BH,GA7BD,CA6BEkC,IA7BF,CA6BO7G,KA7BP,CADJ,EAhUiD,CAgWjD;;AACA,SAAOA,KAAP;AACH,CAlWM","sourcesContent":["import Decimal from \"decimal.js\";\nimport rp from \"request-promise\";\nimport Web3 from 'web3';\nimport config from '../config/example.config';\nimport {\n    CONFIGURE, ERROR,\n    EXIT, GET_REWARDS,\n    GET_REWARDS_RETURNED, GET_STAKE_APY_DETAIL,\n    GET_STAKE_APY_DETAIL_DONE,\n    STAKE,\n    STAKE_RETURNED,\n    UPDATE_APY_DETAIL, WITHDRAW,\n    WITHDRAW_RETURNED\n} from \"../constants/constants-extension\";\nimport stakePools from \"../setting/stake\";\nimport store from \"./store\";\n\nconst Emitter = require('events').EventEmitter;\nconst emitter = new Emitter();\n\nexport const StoreExtension = (clazz, dispatcher) => {\n\n    const _stakeBalance = async (web3, asset, account) => {\n        const erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.address);\n\n        const balance = await erc20Contract.methods.balanceOf(account.address)\n            .call({ from: account.address });\n        // console.log(balance, parseFloat(balance)/10**asset.decimals, new Decimal(balance).toFixed(12), \"_stakeBalance ==\");\n        return new Decimal(parseFloat(balance)/10**asset.decimals).toFixed();\n    };\n\n    const _stakedBalance = async (web3, asset, account) => {\n        let erc20Contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n\n        let balance = await erc20Contract.methods.balanceOf(account.address)\n            .call({ from: account.address });\n        // console.log(balance, parseFloat(balance)/10**asset.decimals, new Decimal(balance).toFixed(12), \"_stakedBalance ==\");\n        return new Decimal(parseFloat(balance)/10**asset.decimals).toFixed();\n    };\n\n    const _stakeRewards = async (web3, asset, account) => {\n        let erc20Contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n\n        let balance = await erc20Contract.methods.earned(account.address)\n            .call({ from: account.address });\n        // console.log(balance, parseFloat(balance)/10**asset.rewardDecimals, new Decimal(balance).toFixed(12), \"_stakeRewards ==\");\n        return new Decimal(parseFloat(balance)/10**asset.rewardDecimals).toFixed();\n    };\n\n    // stake page details\n    clazz.store.stakePools = stakePools;\n\n    clazz.stakeAPYDetail = async () => {\n        // console.log(\"stakeAPYDetail ==\")\n        let timeoutObj;\n        let missionCount = 0;\n        const account = clazz.store.account;\n        const web3 = new Web3(clazz.store.web3context.library.provider);\n        const ariesAPYs = await clazz.getAriesAPYs();\n        // console.log(clazz.store.stakePools, \"newStakePools - start ==\");\n        clazz.store.stakePools.forEach((pool) => {\n            pool.tokens.forEach(async (token) => {\n                // console.log(token, `${pool.name} pool - tokens - start ==`);\n                token.balance = await _stakeBalance(web3, token, account);\n                token.stakedBalance = await _stakedBalance(web3, token, account);\n                token.rewardsAvailable = await _stakeRewards(web3, token, account);\n                token.ariesAPY = await clazz.getAriesAPY(ariesAPYs, token);\n                missionCount++;\n                // console.log(token, `${pool.name} pool - tokens - end ==`);\n            });\n        });\n        timeoutObj = setInterval(() => {\n            if(missionCount === 5) {\n                clearInterval(timeoutObj);\n                store.emitter.emit(GET_STAKE_APY_DETAIL_DONE);\n                // console.log(clazz.store.stakePools, \"newStakePools - end ==\");\n            }\n        }, 1000)\n    };\n\n    clazz.updateStakeAPYDetail = async (payload) => {\n        // console.log(payload.content.asset, \"updateStakeAPYDetail - start ==\");\n        const web3 = new Web3(clazz.store.web3context.library.provider);\n        const account = clazz.store.account;\n        const asset = payload.content.asset;\n\n        const balance = await _stakeBalance(web3, asset, account);\n        const stakedBalance = await _stakedBalance(web3, asset, account);\n        const rewardsAvailable = await _stakeRewards(web3, asset, account);\n\n        asset.balance = balance;\n        asset.stakedBalance = stakedBalance;\n        asset.rewardsAvailable = rewardsAvailable;\n        // console.log(payload.content, \"updateStakeAPYDetail - end ==\");\n        // console.log(clazz.store.stakePools);\n        setTimeout(()=>{\n            // console.log(\"emit - GET_STAKE_APY_DETAIL_DONE ==\");\n            store.emitter.emit(GET_STAKE_APY_DETAIL_DONE);\n        }, 1000);\n    };\n\n    clazz.stake = (payload) => {\n        const account = clazz.store.account;\n        const { asset, amount } = payload.content;\n        clazz._stakeCheckApproval(asset, account, amount, asset.rewardsAddress, (err) => {\n            if (err) return emitter.emit(ERROR, err);\n            clazz._stakeCallStake(asset, account, amount, payload, (err, res) => {\n                if (err) return emitter.emit(ERROR, err);\n                return emitter.emit(STAKE_RETURNED, res)\n            }).then(r => r)\n        }).then(r => r);\n    };\n\n    clazz._stakeCheckApproval = async (asset, account, amount, contract, callback) => {\n        // console.log(asset, account, amount, \"Stake - checkApproval - start==\");\n        try {\n            const web3 = new Web3(clazz.store.web3context.library.provider);\n\n            const erc20Contract = new web3.eth.Contract(asset.abi, asset.address)\n            const allowance = await erc20Contract.methods.allowance(account.address, contract)\n                .call({ from: account.address });\n\n            const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n\n            if(parseFloat(ethAllowance) < parseFloat(amount)) {\n                await erc20Contract.methods.approve(contract, web3.utils.toWei(\"999999999999999\", \"ether\"))\n                    .send({\n                        from: account.address,\n                        gasPrice: web3.utils.toWei(await clazz._stakeGetGasPrice(), 'gwei')\n                    });\n                callback()\n            } else {\n                callback()\n            }\n        } catch(error) {\n            // console.log(asset, account, amount, error, \"Stake - checkApproval - error==\");\n            if(error.message) {\n                return callback(error.message)\n            }\n            callback(error)\n        }\n        // console.log(asset, account, amount, \"Stake - checkApproval - end==\");\n    }\n\n    clazz._stakeCallStake = async (asset, account, amount, payload, callback) => {\n        // console.log(asset, account, amount, \"Stake - callStake - start==\");\n        const web3 = new Web3(clazz.store.web3context.library.provider);\n\n        const rewardContract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress)\n\n        let amountToSend = web3.utils.toWei(amount, \"ether\");\n        if (asset.decimals !== 18) {\n            amountToSend = (amount*10**asset.decimals).toFixed(0);\n        }\n\n        rewardContract.methods.stake(amountToSend).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await clazz._stakeGetGasPrice(),\n            'gwei')\n        })\n            .on('transactionHash', function(hash){\n                console.log(hash, \"Stake - transactionHash==\");\n                callback(null, hash)\n            })\n            .on('confirmation', function(confirmationNumber, receipt){\n                console.log(confirmationNumber, receipt, \"Stake - confirmation==\");\n                if(confirmationNumber === 2) {\n                    console.log(receipt, \"Stake - updateStakeAPYDetail==\");\n                    clazz.updateStakeAPYDetail(payload);\n                }\n            })\n            .on('receipt', function(receipt){\n                console.log(receipt, \"Stake - receipt==\");\n            })\n            .on('error', function(error) {\n                console.log(error, \"Stake - error==\");\n                if (!error.toString().includes(\"-32601\")) return error.message ? callback(error.message) : callback(error);\n            })\n            .catch((error) => {\n                console.log(error, \"Stake - catch - error==\");\n                if (!error.toString().includes(\"-32601\")) return error.message ? callback(error.message) : callback(error);\n            });\n        // console.log(asset, account, amount, \"Stake - callStake - end==\");\n    };\n\n    clazz._stakeGetGasPrice = async () => {\n        try {\n            // todo: get real Gas Price\n            const url = 'https://gasprice.poa.network/'\n            const priceString = await rp(url);\n            const priceJSON = JSON.parse(priceString)\n            if(priceJSON) {\n                return priceJSON.fast.toFixed(0)\n            }\n            return clazz.store.universalGasPrice\n        } catch(e) {\n            console.error(e);\n            return clazz.store.universalGasPrice\n        }\n    };\n\n    clazz.stakeWithdraw = async (payload) => {\n        // console.log(\"stakeWithdraw - start ==\");\n        const account = clazz.store.account;\n        const { asset, amount } = payload.content;\n\n        await clazz._stakeCallWithdraw(asset, account, amount, payload, (err, res) => {\n            // console.log(asset, account, amount, \"UnStake - stakeCallWithdraw - start==\");\n            if (err) return emitter.emit(ERROR, err);\n            // console.log(asset, account, amount, \"UnStake - stakeCallWithdraw - end==\");\n            return emitter.emit(WITHDRAW_RETURNED, res)\n        });\n        // console.log(\"stakeWithdraw - end ==\");\n    };\n\n    clazz._stakeCallWithdraw = async (asset, account, amount, payload, callback) => {\n        const web3 = new Web3(clazz.store.web3context.library.provider);\n\n        const contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress)\n\n        let amountToSend = web3.utils.toWei(amount, \"ether\");\n        if (asset.decimals !== 18) {\n            amountToSend = (amount*10**asset.decimals).toFixed(0);\n        }\n\n        await contract.methods.withdraw(amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await clazz._getGasPrice(), 'gwei') })\n            .on('transactionHash', function(hash){\n                console.log(hash, \"UnStake - transactionHash==\");\n                callback(null, hash)\n            })\n            .on('confirmation', function(confirmationNumber, receipt){\n                console.log(confirmationNumber, receipt, payload, \"UnStake - confirmation==\");\n                if(confirmationNumber === 2) {\n                    clazz.updateStakeAPYDetail(payload);\n                }\n            })\n            .on('error', function(error) {\n                console.log(error, \"UnStake - error==\");\n                if (!error.toString().includes(\"-32601\")) {\n                    if(error.message) {\n                        return callback(error.message)\n                    }\n                    callback(error)\n                }\n            })\n            .catch((error) => {\n                console.log(error, \"UnStake - catch==\");\n                if (!error.toString().includes(\"-32601\")) {\n                    if(error.message) {\n                        return callback(error.message)\n                    }\n                    callback(error)\n                }\n            })\n    };\n\n    clazz.stakeRewards = async (payload) => {\n        console.log(\"stakeRewards - start ==\")\n        const token = payload.content.tokens[0];\n        const web3 = new Web3(clazz.store.web3context.library.provider);\n        const account = clazz.store.account;\n\n        const contract = new web3.eth.Contract(token.rewardsABI, token.rewardsAddress)\n        contract.methods.getReward().send({ from: account.address, gasPrice: web3.utils.toWei(await clazz._getGasPrice(), 'gwei') })\n            .on('transactionHash', function(hash){\n                console.log(hash, \"stakeRewards - transactionHash ==\")\n            })\n            .on('confirmation', function(confirmationNumber, receipt){\n                console.log(confirmationNumber, receipt, \"stakeRewards - confirmation ==\")\n                if(confirmationNumber === 2) clazz.updateStakeAPYDetail(payload);\n            })\n            .on('receipt', function(receipt){\n                console.log(receipt, \"stakeRewards - confirmation ==\")\n            })\n            .on('error', function(error) {\n                console.log(error, \"stakeRewards - error ==\")\n            });\n        console.log(\"stakeRewards - end ==\");\n        emitter.emit(GET_REWARDS_RETURNED, \"You have got your reward\");\n    };\n\n    /**\n    * execute stakeExit and stakeWithdraw\n    * */\n    clazz.stakeExit = async (payload) => {\n        console.log(payload, \"stakeExit ==\");\n        const asset = payload.content.tokens[0];\n        payload.content.asset = asset;\n        payload.content.amount = asset.stakedBalance;\n        clazz.stakeWithdraw(payload).then(r => clazz.stakeRewards(payload));\n    };\n\n    /**\n     {\n      \"code\": \"0\",\n      \"mesg\": \"ok\",\n      \"data\": [\n          {\n              \"pool_identifier\": \"AFI Governance Pool\",\n              \"liquidity_lock\": \"36618.52919\",\n              \"apy\": \"44102.552\"\n          },\n          {\n              \"pool_identifier\": \"UniLP_AFI_USDC Pool\",\n              \"liquidity_lock\": \"5575\",\n              \"apy\": \"318555.138304\"\n          },\n          {\n              \"pool_identifier\": \"afiUSDC Pool\",\n              \"liquidity_lock\": \"94219.97928\",\n              \"apy\": \"2792.07968\"\n          },\n          {\n              \"pool_identifier\": \"afiUSDT Pool\",\n              \"liquidity_lock\": \"57866.19095\",\n              \"apy\": \"4560.973664\"\n          },\n          {\n              \"pool_identifier\": \"afiDAI Pool\",\n              \"liquidity_lock\": \"62931.47018\",\n              \"apy\": \"5309.72182\"\n          }\n      ]\n  }\n     * */\n    clazz.getAriesAPYs = async () => {\n        const response = await fetch(`${config.apiURLProvider}pools`)\n            .then(r=>r.json());\n        return response;\n    };\n\n    clazz.getAriesAPY = async (ariesAPY, asset) => {\n        const result = ariesAPY.data.filter((value) => {\n            return value.pool_identifier === asset.pool_identifier;\n        });\n        const apy = result.length > 0 && result[0].apy ? result[0].apy : 0\n        console.log(apy, \"_getAriesAPY ==\");\n        return apy*1;\n    };\n\n    dispatcher.register(\n        function (payload) {\n            console.log(payload, \"payload ==\");\n            switch (payload.type) {\n                case GET_STAKE_APY_DETAIL:\n                    clazz.stakeAPYDetail(payload);\n                    break;\n                case GET_STAKE_APY_DETAIL_DONE:\n                    break;\n                case STAKE:\n                    clazz.stake(payload);\n                    break;\n                case WITHDRAW:\n                    clazz.stakeWithdraw(payload);\n                    break;\n                case CONFIGURE:\n                    console.log(\"Do CONFIGURE\", \"==\");\n                    break;\n                case GET_REWARDS:\n                    clazz.stakeRewards(payload);\n                    break;\n                case EXIT:\n                    clazz.stakeExit(payload);\n                    break;\n                case UPDATE_APY_DETAIL:\n                    clazz.updateStakeAPYDetail(payload);\n                    break;\n                default:\n                    console.log(\"Do nothing\", \"==\");\n            }\n        }.bind(clazz)\n    );\n    // console.log(\"StoreExtension init gets done\", \"==\");\n    return clazz;\n};"]},"metadata":{},"sourceType":"module"}