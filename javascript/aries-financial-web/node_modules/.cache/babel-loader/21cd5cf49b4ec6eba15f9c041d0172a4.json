{"ast":null,"code":"var _jsxFileName = \"/Users/waltorhuang/cookbook/javascript/aries-financial-web/src/components/addToken/AddTokenPanel.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SwitchNetworkNotice from './SwitchNetworkNotice';\nimport TokenItem from './TokenItem';\nimport Eth from 'ethjs-query';\nimport queryString from 'querystringify';\nimport TOKEN_DATA from '../../setting/add-token';\nimport \"./AddTokenPanel.sass\";\nimport { pathEnum } from \"../../App\";\nconst metaMarkAddress = '0x617b3f8050a0bd94b6b1da02b4384ee5b4df13f4';\n\nclass AddTokenPanel extends Component {\n  constructor(props) {\n    const {\n      tokenName = 'MetaMarks',\n      tokenSymbol: _tokenSymbol = 'MARK',\n      tokenDecimals: _tokenDecimals = 18,\n      tokenAddress: _tokenAddress = metaMarkAddress,\n      tokenImage: _tokenImage = 'https://pbs.twimg.com/profile_images/802481220340908032/M_vde_oi_400x400.jpg',\n      tokenNet = '1',\n      message = '',\n      errorMessage = '',\n      net: _net = '1',\n      tokenItems: _tokenItems = TOKEN_DATA\n    } = props;\n    super();\n\n    this.addToken = async (tokenAddress, tokenSymbol, tokenDecimals, tokenImage) => {\n      const provider = window.web3.currentProvider;\n      provider.sendAsync({\n        method: 'metamask_watchAsset',\n        params: {\n          \"type\": \"ERC20\",\n          \"options\": {\n            \"address\": tokenAddress,\n            \"symbol\": tokenSymbol,\n            \"decimals\": tokenDecimals,\n            \"image\": tokenImage\n          }\n        },\n        id: Math.round(Math.random() * 100000)\n      }, (err, added) => {\n        if (err || 'error' in added) {\n          this.setState({\n            errorMessage: 'There was a problem adding the token.',\n            message: ''\n          });\n          return;\n        }\n\n        this.setState({\n          message: 'Token added!',\n          errorMessage: ''\n        });\n      });\n    };\n\n    this.content = (tokenItems, net) => {\n      return tokenItems.length ? tokenItems.map(item => /*#__PURE__*/React.createElement(TokenItem, {\n        key: item.id,\n        item: item,\n        net: net,\n        onAddToken: this.addToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 52\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 131\n        }\n      }, \"Your token list is empty\");\n    };\n\n    this.skipBtn = () => {\n      window.location.assign(pathEnum.farming);\n    };\n\n    this.state = {\n      tokenName,\n      tokenSymbol: _tokenSymbol,\n      tokenDecimals: _tokenDecimals,\n      tokenAddress: _tokenAddress,\n      tokenImage: _tokenImage,\n      tokenNet,\n      message,\n      errorMessage,\n      net: _net,\n      tokenItems: _tokenItems\n    };\n    const search = window.location.search;\n    const params = queryString.parse(search);\n\n    for (let key in params) {\n      this.state[key] = params[key];\n    }\n\n    this.updateNet();\n  }\n\n  async updateNet() {\n    const provider = window.web3.currentProvider;\n    const eth = new Eth(provider);\n    const realNet = await eth.net_version();\n    this.setState({\n      net: realNet\n    });\n  }\n\n  render() {\n    const {\n      tokenNet,\n      net,\n      message,\n      tokenItems,\n      errorMessage\n    } = this.state;\n\n    if (tokenNet !== net) {\n      return /*#__PURE__*/React.createElement(SwitchNetworkNotice, {\n        net: net,\n        tokenNet: tokenNet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 12\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: `addTokenPanel`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: `alignCenter`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 4\n      }\n    }, \"Click on the token to add to your wallet\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: `alignRight`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `Button`,\n      onClick: () => this.skipBtn(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, \"Next Step >>\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 4\n      }\n    }, message, errorMessage), /*#__PURE__*/React.createElement(\"table\", {\n      id: `customers`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, \"Logo\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, \"Decimals\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, \"View\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, this.content(tokenItems, net))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n\nAddTokenPanel.contextTypes = {\n  web3: PropTypes.object\n};\nexport default AddTokenPanel;","map":{"version":3,"sources":["/Users/waltorhuang/cookbook/javascript/aries-financial-web/src/components/addToken/AddTokenPanel.jsx"],"names":["React","Component","PropTypes","SwitchNetworkNotice","TokenItem","Eth","queryString","TOKEN_DATA","pathEnum","metaMarkAddress","AddTokenPanel","constructor","props","tokenName","tokenSymbol","tokenDecimals","tokenAddress","tokenImage","tokenNet","message","errorMessage","net","tokenItems","addToken","provider","window","web3","currentProvider","sendAsync","method","params","id","Math","round","random","err","added","setState","content","length","map","item","skipBtn","location","assign","farming","state","search","parse","key","updateNet","eth","realNet","net_version","render","contextTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,sBAAP;AACA,SAAQC,QAAR,QAAuB,WAAvB;AAEA,MAAMC,eAAe,GAAG,4CAAxB;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAErCU,EAAAA,WAAW,CAAEC,KAAF,EAAS;AACnB,UAAM;AACLC,MAAAA,SAAS,GAAG,WADP;AAELC,MAAAA,WAAW,EAAXA,YAAW,GAAG,MAFT;AAGLC,MAAAA,aAAa,EAAbA,cAAa,GAAG,EAHX;AAILC,MAAAA,YAAY,EAAZA,aAAY,GAAGP,eAJV;AAKLQ,MAAAA,UAAU,EAAVA,WAAU,GAAG,8EALR;AAMLC,MAAAA,QAAQ,GAAG,GANN;AAOLC,MAAAA,OAAO,GAAG,EAPL;AAQLC,MAAAA,YAAY,GAAG,EARV;AASLC,MAAAA,GAAG,EAAHA,IAAG,GAAG,GATD;AAULC,MAAAA,UAAU,EAAVA,WAAU,GAAGf;AAVR,QAWFK,KAXJ;AAaA;;AAdmB,SA8CnBW,QA9CmB,GA8CR,OAAMP,YAAN,EAAoBF,WAApB,EAAiCC,aAAjC,EAAgDE,UAAhD,KAA+D;AACzE,YAAMO,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYC,eAA7B;AACAH,MAAAA,QAAQ,CAACI,SAAT,CAAmB;AAClBC,QAAAA,MAAM,EAAE,qBADU;AAElBC,QAAAA,MAAM,EAAE;AACP,kBAAW,OADJ;AAEP,qBAAW;AACV,uBAAYd,YADF;AAEV,sBAAYF,WAFF;AAGV,wBAAYC,aAHF;AAIV,qBAAYE;AAJF;AAFJ,SAFU;AAWlBc,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B;AAXc,OAAnB,EAYG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClB,YAAID,GAAG,IAAI,WAAWC,KAAtB,EAA6B;AAC5B,eAAKC,QAAL,CAAc;AACbjB,YAAAA,YAAY,EAAE,uCADD;AAEbD,YAAAA,OAAO,EAAO;AAFD,WAAd;AAIA;AACA;;AACD,aAAKkB,QAAL,CAAc;AACblB,UAAAA,OAAO,EAAO,cADD;AAEbC,UAAAA,YAAY,EAAE;AAFD,SAAd;AAIA,OAxBD;AAyBA,KAzEkB;;AAAA,SA2EnBkB,OA3EmB,GA2ET,CAAChB,UAAD,EAAaD,GAAb,KAAqB;AAChC,aAAOC,UAAU,CAACiB,MAAX,GAAoBjB,UAAU,CAACkB,GAAX,CAAeC,IAAI,iBAAI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACV,EAArB;AAAyB,QAAA,IAAI,EAAEU,IAA/B;AAAqC,QAAA,GAAG,EAAEpB,GAA1C;AAA+C,QAAA,UAAU,EAAE,KAAKE,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,CAApB,gBAA0H;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAjI;AACE,KA7EkB;;AAAA,SA+EnBmB,OA/EmB,GA+ET,MAAM;AACfjB,MAAAA,MAAM,CAACkB,QAAP,CAAgBC,MAAhB,CAAuBpC,QAAQ,CAACqC,OAAhC;AACA,KAjFkB;;AAenB,SAAKC,KAAL,GAAa;AACZjC,MAAAA,SADY;AAEZC,MAAAA,WAAW,EAAXA,YAFY;AAGZC,MAAAA,aAAa,EAAbA,cAHY;AAIZC,MAAAA,YAAY,EAAZA,aAJY;AAKZC,MAAAA,UAAU,EAAVA,WALY;AAMZC,MAAAA,QANY;AAOZC,MAAAA,OAPY;AAQZC,MAAAA,YARY;AASZC,MAAAA,GAAG,EAAHA,IATY;AAUZC,MAAAA,UAAU,EAAVA;AAVY,KAAb;AAaA,UAAMyB,MAAM,GAAGtB,MAAM,CAACkB,QAAP,CAAgBI,MAA/B;AACA,UAAMjB,MAAM,GAAGxB,WAAW,CAAC0C,KAAZ,CAAkBD,MAAlB,CAAf;;AAEA,SAAK,IAAIE,GAAT,IAAgBnB,MAAhB,EAAwB;AACvB,WAAKgB,KAAL,CAAWG,GAAX,IAAkBnB,MAAM,CAACmB,GAAD,CAAxB;AACA;;AAED,SAAKC,SAAL;AAEA;;AAED,QAAMA,SAAN,GAAmB;AAClB,UAAM1B,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYC,eAA7B;AACA,UAAMwB,GAAG,GAAG,IAAI9C,GAAJ,CAAQmB,QAAR,CAAZ;AACA,UAAM4B,OAAO,GAAG,MAAMD,GAAG,CAACE,WAAJ,EAAtB;AACA,SAAKhB,QAAL,CAAc;AAAEhB,MAAAA,GAAG,EAAE+B;AAAP,KAAd;AACA;;AAuCAE,EAAAA,MAAM,GAAI;AACT,UAAM;AACLpC,MAAAA,QADK;AAELG,MAAAA,GAFK;AAGLF,MAAAA,OAHK;AAILG,MAAAA,UAJK;AAKPF,MAAAA;AALO,QAMF,KAAK0B,KANT;;AAQA,QAAI5B,QAAQ,KAAKG,GAAjB,EAAsB;AACrB,0BAAO,oBAAC,mBAAD;AAAqB,QAAA,GAAG,EAAEA,GAA1B;AAA+B,QAAA,QAAQ,EAAEH,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AAED,wBACC;AAAK,MAAA,EAAE,EAAG,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAI,MAAA,SAAS,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADC,eAED;AAAI,MAAA,SAAS,EAAG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAG,QAAjB;AAA0B,MAAA,OAAO,EAAE,MAAI,KAAKwB,OAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CAFC,eAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIvB,OAAJ,EAAaC,YAAb,CALC,eAMD;AAAO,MAAA,EAAE,EAAG,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALD,CADD,CADD,eAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKkB,OAAL,CAAahB,UAAb,EAAyBD,GAAzB,CADF,CAVD,CANC,eAoBC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBD,CADD;AAwBA;;AA1HmC;;AA6HtCX,aAAa,CAAC6C,YAAd,GAA6B;AAC5B7B,EAAAA,IAAI,EAAExB,SAAS,CAACsD;AADY,CAA7B;AAIA,eAAe9C,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SwitchNetworkNotice from './SwitchNetworkNotice'\nimport TokenItem from './TokenItem'\nimport Eth from 'ethjs-query';\nimport queryString from 'querystringify'\nimport TOKEN_DATA from '../../setting/add-token';\nimport \"./AddTokenPanel.sass\"\nimport {pathEnum} from \"../../App\";\n\nconst metaMarkAddress = '0x617b3f8050a0bd94b6b1da02b4384ee5b4df13f4';\n\nclass AddTokenPanel extends Component {\n\n\tconstructor (props) {\n\t\tconst {\n\t\t\ttokenName = 'MetaMarks',\n\t\t\ttokenSymbol = 'MARK',\n\t\t\ttokenDecimals = 18,\n\t\t\ttokenAddress = metaMarkAddress,\n\t\t\ttokenImage = 'https://pbs.twimg.com/profile_images/802481220340908032/M_vde_oi_400x400.jpg',\n\t\t\ttokenNet = '1',\n\t\t\tmessage = '',\n\t\t\terrorMessage = '',\n\t\t\tnet = '1',\n\t\t\ttokenItems = TOKEN_DATA,\n\t\t} = props\n\n\t\tsuper()\n\t\tthis.state = {\n\t\t\ttokenName,\n\t\t\ttokenSymbol,\n\t\t\ttokenDecimals,\n\t\t\ttokenAddress,\n\t\t\ttokenImage,\n\t\t\ttokenNet,\n\t\t\tmessage,\n\t\t\terrorMessage,\n\t\t\tnet,\n\t\t\ttokenItems\n\t\t}\n\n\t\tconst search = window.location.search\n\t\tconst params = queryString.parse(search)\n\n\t\tfor (let key in params) {\n\t\t\tthis.state[key] = params[key]\n\t\t}\n\n\t\tthis.updateNet()\n\n\t}\n\n\tasync updateNet () {\n\t\tconst provider = window.web3.currentProvider\n\t\tconst eth = new Eth(provider)\n\t\tconst realNet = await eth.net_version()\n\t\tthis.setState({ net: realNet })\n\t}\n\n  addToken = async(tokenAddress, tokenSymbol, tokenDecimals, tokenImage) => {\n  \tconst provider = window.web3.currentProvider\n  \tprovider.sendAsync({\n  \t\tmethod: 'metamask_watchAsset',\n  \t\tparams: {\n  \t\t\t\"type\"   : \"ERC20\",\n  \t\t\t\"options\": {\n  \t\t\t\t\"address\" : tokenAddress,\n  \t\t\t\t\"symbol\"  : tokenSymbol,\n  \t\t\t\t\"decimals\": tokenDecimals,\n  \t\t\t\t\"image\"   : tokenImage,\n  \t\t\t},\n  \t\t},\n  \t\tid: Math.round(Math.random() * 100000),\n  \t}, (err, added) => {\n  \t\tif (err || 'error' in added) {\n  \t\t\tthis.setState({\n  \t\t\t\terrorMessage: 'There was a problem adding the token.',\n  \t\t\t\tmessage     : '',\n  \t\t\t})\n  \t\t\treturn\n  \t\t}\n  \t\tthis.setState({\n  \t\t\tmessage     : 'Token added!',\n  \t\t\terrorMessage: '',\n  \t\t})\n  \t})\n  }\n\n  content = (tokenItems, net) => {\n\treturn tokenItems.length ? tokenItems.map(item => <TokenItem key={item.id} item={item} net={net} onAddToken={this.addToken}/>) : <div className=\"empty-message\">Your token list is empty</div>;\n  };\n\n  skipBtn = () => {\n  \twindow.location.assign(pathEnum.farming);\n  };\n\n  render () {\n  \tconst {\n  \t\ttokenNet,\n  \t\tnet,\n  \t\tmessage,\n  \t\ttokenItems,\n\t\terrorMessage\n  \t} = this.state;\n\n  \tif (tokenNet !== net) {\n  \t\treturn <SwitchNetworkNotice net={net} tokenNet={tokenNet}/>\n  \t}\n\n  \treturn (\n  \t\t<div id={`addTokenPanel`}>\n\t\t\t<h2 className={`alignCenter`}>Click on the token to add to your wallet</h2>\n\t\t\t<h5 className={`alignRight`}>\n\t\t\t\t<div className={`Button`} onClick={()=>this.skipBtn()}>Next Step >></div>\n\t\t\t</h5>\n\t\t\t<p>{message}{errorMessage}</p>\n\t\t\t<table id={`customers`}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Logo</th>\n\t\t\t\t\t\t<th>Symbol</th>\n\t\t\t\t\t\t<th>Decimals</th>\n\t\t\t\t\t\t<th>View</th>\n\t\t\t\t\t\t<th>Add</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{this.content(tokenItems, net)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n  \t\t\t<div className=\"spacer\" />\n  \t\t</div>\n  \t)\n  }\n}\n\nAddTokenPanel.contextTypes = {\n\tweb3: PropTypes.object,\n}\n\nexport default AddTokenPanel;"]},"metadata":{},"sourceType":"module"}