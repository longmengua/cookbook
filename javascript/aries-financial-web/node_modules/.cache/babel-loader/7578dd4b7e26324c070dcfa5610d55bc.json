{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\nimport translationEN from './locales/en/translation.json';\nimport translationJA from './locales/ja/translation.json';\nimport translationCN from './locales/cn/translation.json';\nimport translationTW from './locales/tw/translation.json'; // the translations\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  tw: {\n    translation: translationTW\n  },\n  ja: {\n    translation: translationJA\n  },\n  cn: {\n    translation: translationCN\n  }\n};\n\nconst setLocalStorage = (key, value) => {\n  localStorage.setItem(key, value);\n};\n\nconst getLocalStorage = key => {\n  return localStorage.getItem(key);\n};\n\nconst changI18nLanguage = i18nKey => {\n  i18n.changeLanguage(i18nKey).then(r => r);\n};\n\ni18n.use(detector).use(reactI18nextModule) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: localStorage.getItem(\"lang\") || \"ja\",\n  //default\n  fallbackLng: \"en\",\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  }\n});\nconst i18nKeys = Object.keys(resources).reduce((obj, key) => {\n  obj[key] = key;\n  return obj;\n}, {});\nexport { i18nKeys, setLocalStorage, getLocalStorage, changI18nLanguage };\nexport default i18n;","map":{"version":3,"sources":["/Users/waltorhuang/cookbook/javascript/aries-financial-web/src/i18n.js"],"names":["i18n","detector","reactI18nextModule","translationEN","translationJA","translationCN","translationTW","resources","en","translation","tw","ja","cn","setLocalStorage","key","value","localStorage","setItem","getLocalStorage","getItem","changI18nLanguage","i18nKey","changeLanguage","then","r","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","i18nKeys","Object","keys","reduce","obj"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEN;AADX,GADY;AAIhBO,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEH;AADX,GAJY;AAOhBK,EAAAA,EAAE,EAAE;AACFF,IAAAA,WAAW,EAAEL;AADX,GAPY;AAUhBQ,EAAAA,EAAE,EAAE;AACFH,IAAAA,WAAW,EAAEJ;AADX;AAVY,CAAlB;;AAeA,MAAMQ,eAAe,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpCC,EAAAA,YAAY,CAACC,OAAb,CAAqBH,GAArB,EAA0BC,KAA1B;AACH,CAFD;;AAIA,MAAMG,eAAe,GAAIJ,GAAD,IAAS;AAC7B,SAAOE,YAAY,CAACG,OAAb,CAAqBL,GAArB,CAAP;AACH,CAFD;;AAIA,MAAMM,iBAAiB,GAAIC,OAAD,IAAa;AACnCrB,EAAAA,IAAI,CAACsB,cAAL,CAAoBD,OAApB,EAA6BE,IAA7B,CAAkCC,CAAC,IAAIA,CAAvC;AACH,CAFD;;AAIAxB,IAAI,CACDyB,GADH,CACOxB,QADP,EAEGwB,GAFH,CAEOvB,kBAFP,EAE2B;AAF3B,CAGGwB,IAHH,CAGQ;AACJnB,EAAAA,SADI;AAEJoB,EAAAA,GAAG,EAAEX,YAAY,CAACG,OAAb,CAAqB,MAArB,KAAgC,IAFjC;AAEsC;AAC1CS,EAAAA,WAAW,EAAE,IAHT;AAKJC,EAAAA,YAAY,EAAE,KALV;AAKiB;AAErBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACM;;AADN;AAPX,CAHR;AAcA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY3B,SAAZ,EAAuB4B,MAAvB,CAA8B,CAACC,GAAD,EAAKtB,GAAL,KAAW;AACtDsB,EAAAA,GAAG,CAACtB,GAAD,CAAH,GAASA,GAAT;AACA,SAAOsB,GAAP;AACH,CAHgB,EAGd,EAHc,CAAjB;AAKA,SAASJ,QAAT,EAAmBnB,eAAnB,EAAoCK,eAApC,EAAqDE,iBAArD;AACA,eAAepB,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\n\nimport translationEN from './locales/en/translation.json';\nimport translationJA from './locales/ja/translation.json';\nimport translationCN from './locales/cn/translation.json';\nimport translationTW from './locales/tw/translation.json';\n\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  tw: {\n    translation: translationTW\n  },\n  ja: {\n    translation: translationJA\n  },\n  cn: {\n    translation: translationCN\n  }\n};\n\nconst setLocalStorage = (key, value) => {\n    localStorage.setItem(key, value);\n};\n\nconst getLocalStorage = (key) => {\n    return localStorage.getItem(key);\n};\n\nconst changI18nLanguage = (i18nKey) => {\n    i18n.changeLanguage(i18nKey).then(r => r);\n};\n\ni18n\n  .use(detector)\n  .use(reactI18nextModule) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: localStorage.getItem(\"lang\") || \"ja\",//default\n    fallbackLng: \"en\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\nconst i18nKeys = Object.keys(resources).reduce((obj,key)=>{\n    obj[key]=key;\n    return obj;\n}, {});\n\nexport { i18nKeys, setLocalStorage, getLocalStorage, changI18nLanguage };\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}