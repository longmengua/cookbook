{"ast":null,"code":"import config from \"../config\";\nimport { config as rewardconfig } from \"../config/example.config.extension\";\nimport async from 'async';\nimport { ERROR, GET_BALANCES, BALANCES_RETURNED, GET_BALANCES_LIGHT, BALANCES_LIGHT_RETURNED, GET_VAULT_BALANCES_FULL, VAULT_BALANCES_FULL_RETURNED, INVEST, INVEST_RETURNED, REDEEM, REDEEM_RETURNED, REBALANCE, REBALANCE_RETURNED, DONATE, DONATE_RETURNED, GET_AGGREGATED_YIELD, GET_AGGREGATED_YIELD_RETURNED, GET_CONTRACT_EVENTS, GET_CONTRACT_EVENTS_RETURNED, ZAP, ZAP_RETURNED, IDAI, IDAI_RETURNED, SWAP, SWAP_RETURNED, TRADE, TRADE_RETURNED, GET_CURV_BALANCE, GET_CURV_BALANCE_RETURNED, GET_BEST_PRICE, GET_BEST_PRICE_RETURNED, GET_VAULT_BALANCES, VAULT_BALANCES_RETURNED, DEPOSIT_VAULT, DEPOSIT_VAULT_RETURNED, DEPOSIT_ALL_VAULT, DEPOSIT_ALL_VAULT_RETURNED, WITHDRAW_VAULT, WITHDRAW_VAULT_RETURNED, WITHDRAW_ALL_VAULT, WITHDRAW_ALL_VAULT_RETURNED, GET_DASHBOARD_SNAPSHOT, DASHBOARD_SNAPSHOT_RETURNED, USD_PRICE_RETURNED, GET_STATISTICS, STATISTICS_RETURNED, EXPERIMENTAL_VAULT_BALANCES_FULL_RETURNED, DEPOSIT_EXPERIMENTAL_VAULT, DEPOSIT_EXPERIMENTAL_VAULT_RETURNED, DEPOSIT_ALL_EXPERIMENTAL_VAULT, DEPOSIT_ALL_EXPERIMENTAL_VAULT_RETURNED, CLAIM_EXPERIMENTAL_VAULT, CLAIM_EXPERIMENTAL_VAULT_RETURNED, ZAP_EXPERIMENTAL_VAULT, ZAP_EXPERIMENTAL_VAULT_RETURNED } from '../constants';\nimport Web3 from 'web3';\nimport { injected, walletconnect, walletlink, ledger, trezor, frame, fortmatic, portis, squarelink, torus, authereum } from \"./connectors\";\nimport { StoreExtension } from \"./store-extension\";\nimport Decimal from \"decimal.js\";\n\nconst rp = require('request-promise');\n\nconst ethers = require('ethers');\n\nconst Dispatcher = require('flux').Dispatcher;\n\nconst Emitter = require('events').EventEmitter;\n\nconst dispatcher = new Dispatcher();\nconst emitter = new Emitter();\nconst totalAFIReward = 202021;\n\nclass Store {\n  constructor() {\n    this._getDefaultValues = () => {\n      return {\n        assets: [{\n          id: 'DAIv3',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          investSymbol: 'yDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0xa3Aa4a71dBb17EBF2108A75b0BB7eFd9955463EF',\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          decimals: 18,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'dai'\n        }, {\n          id: 'USDCv3',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          investSymbol: 'yUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          iEarnContract: '0x82Ac4e3A35dd64dD3574bF5BD5029fd90ABc2A86',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'usd-coin'\n        }, {\n          id: 'USDTv3',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          investSymbol: 'yUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          iEarnContract: '0x6C77dF12c39CAE90C4c46E5C19177679b7235CFa',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'tether'\n        }, {\n          id: 'BUSDv3',\n          name: 'BUSD',\n          symbol: 'BUSD',\n          description: 'Binance USD',\n          investSymbol: 'yBUSD',\n          erc20address: '0x4fabb145d64652a948d72533023f6e7a623c7c53',\n          iEarnContract: '0xb912F2D756b9fF4a8af9844E2C66949997289940',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'binance-usd'\n        }, {\n          id: 'DAIv2',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          investSymbol: 'yDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0xa3Aa4a71dBb17EBF2108A75b0BB7eFd9955463EF',\n          lastMeasurement: 9465912,\n          measurement: 1000037230456849197,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          decimals: 18,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'dai'\n        }, {\n          id: 'USDCv2',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          investSymbol: 'yUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          iEarnContract: '0x82Ac4e3A35dd64dD3574bF5BD5029fd90ABc2A86',\n          lastMeasurement: 9465880,\n          measurement: 1139534904703193728,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'usd-coin'\n        }, {\n          id: 'USDTv2',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          investSymbol: 'yUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          iEarnContract: '0x6C77dF12c39CAE90C4c46E5C19177679b7235CFa',\n          lastMeasurement: 9465880,\n          measurement: 1000030025124779312,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'tether'\n        }, {\n          id: 'TUSDv2',\n          name: 'TUSD',\n          symbol: 'TUSD',\n          description: 'TrueUSD',\n          investSymbol: 'yTUSD',\n          erc20address: '0x0000000000085d4780B73119b644AE5ecd22b376',\n          iEarnContract: '0xe96F3621F5eF085f79Bd0Cc87b6e43378cFA6a60',\n          lastMeasurement: 9479531,\n          measurement: 1000197346651007837,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'true-usd'\n        }, {\n          id: 'SUSDv2',\n          name: 'SUSD',\n          symbol: 'SUSD',\n          description: 'Synth sUSD',\n          investSymbol: 'ySUSD',\n          erc20address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\n          iEarnContract: '0x2af196bE403659C871b361d87b1B80568E7dd862',\n          lastMeasurement: 9465880,\n          measurement: 1000021451644065970,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'nusd'\n        }, {\n          id: 'wBTCv2',\n          name: 'wBTC',\n          symbol: 'wBTC',\n          description: 'Wrapped BTC',\n          investSymbol: 'yWBTC',\n          erc20address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n          iEarnContract: '0x095BD1484d5fd59cA9a63eACaAf3a30344543f97',\n          lastMeasurement: 9465880,\n          measurement: 999998358212140782,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 8,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'wrapped-bitcoin'\n        }, {\n          id: 'DAIv1',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          investSymbol: 'yDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0xa3Aa4a71dBb17EBF2108A75b0BB7eFd9955463EF',\n          lastMeasurement: 9400732,\n          measurement: 1000848185112260412,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          decimals: 18,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'dai'\n        }, {\n          id: 'USDCv1',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          investSymbol: 'yUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          iEarnContract: '0x82Ac4e3A35dd64dD3574bF5BD5029fd90ABc2A86',\n          lastMeasurement: 9400732,\n          measurement: 1001761741440856097,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'usd-coin'\n        }, {\n          id: 'USDTv1',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          investSymbol: 'yUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          iEarnContract: '0x6C77dF12c39CAE90C4c46E5C19177679b7235CFa',\n          lastMeasurement: 9400732,\n          measurement: 1085531657202472310,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'tether'\n        }, {\n          id: 'SUSDv1',\n          name: 'SUSD',\n          symbol: 'SUSD',\n          description: 'Synth sUSD',\n          investSymbol: 'ySUSD',\n          erc20address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\n          iEarnContract: '0x2af196bE403659C871b361d87b1B80568E7dd862',\n          lastMeasurement: 9400732,\n          measurement: 1029186724259834543,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'nusd'\n        }, {\n          id: 'wBTCv1',\n          name: 'wBTC',\n          symbol: 'wBTC',\n          tokenSymbol: 'wBTC',\n          description: 'Wrapped BTC',\n          investSymbol: 'yBTC',\n          erc20address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n          iEarnContract: '0x095BD1484d5fd59cA9a63eACaAf3a30344543f97',\n          lastMeasurement: 9427488,\n          measurement: 2000175540087812685,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 8,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'wrapped-bitcoin'\n        }, {\n          id: 'CRVv1',\n          name: 'cDAI/cUSDC',\n          symbol: 'CRV',\n          tokenSymbol: 'DAI',\n          description: 'Curve.fi cDAI/cUSDC',\n          investSymbol: 'yCRV',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0x9Ce551A9D2B1A4Ec0cc6eB0E0CC12977F6ED306C',\n          lastMeasurement: 9414437,\n          measurement: 1008192205495361668,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'dai'\n        }, {\n          id: 'ETHv1',\n          name: 'ETH',\n          symbol: 'ETH',\n          description: 'Ethereum',\n          investSymbol: 'iETH',\n          erc20address: 'Ethereum',\n          iEarnContract: '0x9Dde7cdd09dbed542fC422d18d89A589fA9fD4C0',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          decimals: 18,\n          investedBalance: 0,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          price_id: 'ethereum'\n        }, {\n          id: 'iDAIv1',\n          name: 'Fulcrum DAI iToken',\n          symbol: 'iDAI',\n          description: 'Fulcrum DAI iToken',\n          erc20address: '0x493c57c4763932315a328269e1adad09653b9081',\n          iEarnContract: null,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          version: 2,\n          disabled: true,\n          idai: true,\n          price_id: 'dai'\n        }],\n        vaultAssets: [{\n          id: 'DAI',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          pool_identifier: \"afiDAI Pool\",\n          vaultSymbol: 'afiDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          vaultContractAddress: '0xfE170Dd8F4C0f335326dF1892D75de47c8d2CBC1',\n          vaultContractABI: config.vaultContractV3ABI,\n          balance: 0,\n          vaultBalance: 0,\n          rewardBalance: 0,\n          ariesAPY: 0,\n          stakedBalance: 0,\n          afiPrice: 0,\n          liquidityLock: 0,\n          rewardAvailable: 0,\n          rewardDecimals: 18,\n          decimals: 18,\n          deposit: true,\n          depositAll: true,\n          withdraw: true,\n          withdrawAll: true,\n          lastMeasurement: 10650116,\n          measurement: 1e18,\n          price_id: 'dai',\n          rewardsAddress: rewardconfig.afidaipoolAddress,\n          rewardsABI: rewardconfig.afidaipoolABI\n        }, {\n          id: 'USDC',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          pool_identifier: \"afiUSDC Pool\",\n          vaultSymbol: 'afUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          vaultContractAddress: '0xfC64d0bF54351d4383713172090F070836748590',\n          vaultContractABI: config.vaultContractABI,\n          balance: 0,\n          vaultBalance: 0,\n          rewardBalance: 0,\n          ariesAPY: 0,\n          stakedBalance: 0,\n          afiPrice: 0,\n          liquidityLock: 0,\n          rewardAvailable: 0,\n          rewardDecimals: 18,\n          decimals: 6,\n          deposit: true,\n          depositAll: false,\n          withdraw: true,\n          withdrawAll: false,\n          lastMeasurement: 10532708,\n          measurement: 1e18,\n          price_id: 'usd-coin',\n          rewardsAddress: rewardconfig.afusdcpoolAddress,\n          rewardsABI: rewardconfig.afusdcpoolABI\n        }, {\n          id: 'USDT',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          pool_identifier: \"afiUSDT Pool\",\n          vaultSymbol: 'afUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          vaultContractAddress: '0x0Ea9f8C451f472e9f9463d76097b8D0821CF1A55',\n          vaultContractABI: config.vaultContractV3ABI,\n          balance: 0,\n          vaultBalance: 0,\n          rewardBalance: 0,\n          ariesAPY: 0,\n          stakedBalance: 0,\n          afiPrice: 0,\n          liquidityLock: 0,\n          rewardAvailable: 0,\n          rewardDecimals: 18,\n          decimals: 6,\n          deposit: true,\n          depositAll: true,\n          withdraw: true,\n          withdrawAll: true,\n          lastMeasurement: 10651402,\n          measurement: 1e18,\n          price_id: 'tether',\n          rewardsAddress: rewardconfig.afusdtpoolAddress,\n          rewardsABI: rewardconfig.afusdtpoolABI\n        }],\n        aprs: [{\n          token: 'DAI',\n          address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          earnAddress: '0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01',\n          lastMeasurement: 9465912,\n          measurement: 1000037230456849197,\n          mod: 1,\n          decimals: 18\n        }, {\n          token: 'TUSD',\n          address: '0x0000000000085d4780B73119b644AE5ecd22b376',\n          earnAddress: '0x6e53F8fa0D17eDA0412cBBcA8f7732D5ED28c9f8',\n          lastMeasurement: 9479531,\n          measurement: 1000197346651007837,\n          created: 0,\n          mod: 1,\n          decimals: 18\n        }, {\n          token: 'USDC',\n          address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n          earnAddress: '0xa2609B2b43AC0F5EbE27deB944d2a399C201E3dA',\n          lastMeasurement: 9400732,\n          measurement: 1001761741440856097,\n          mod: 1,\n          decimals: 6\n        }, {\n          token: 'USDT',\n          address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          earnAddress: '0x83f798e925BcD4017Eb265844FDDAbb448f1707D',\n          lastMeasurement: 9465880,\n          measurement: 1000030025124779312,\n          mod: 1,\n          decimals: 6\n        }, {\n          token: 'SUSD',\n          address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\n          earnAddress: '0x36324b8168f960A12a8fD01406C9C78143d41380',\n          lastMeasurement: 9400732,\n          measurement: 1029186724259834543,\n          mod: 1,\n          decimals: 18\n        }, {\n          token: 'BAT',\n          address: '0x0D8775F648430679A709E98d2b0Cb6250d2887EF',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'ETH',\n          address: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'LINK',\n          address: '0x514910771AF9Ca656af840dff83E8264EcF986CA',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'KNC',\n          address: '0xdd974D5C2e2928deA5F71b9825b8b646686BD200',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'REP',\n          address: '0x1985365e9f78359a9B6AD760e32412f4a445E862',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'MKR',\n          address: '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'ZRX',\n          address: '0xE41d2489571d322189246DaFA5ebDe1F4699F498',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'SNX',\n          address: '0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F',\n          created: 0,\n          mod: 1,\n          earnAddress: '',\n          decimals: 18\n        }, {\n          token: 'wBTC',\n          address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n          earnAddress: '0x04EF8121aD039ff41d10029c91EA1694432514e9',\n          lastMeasurement: 9427488,\n          measurement: 2000175540087812685,\n          mod: 1,\n          decimals: 18\n        }],\n        dashboard: {\n          vault_balance_usd: 0,\n          vault_growth_usd_daily: 0,\n          vault_growth_usd_weekly: 0,\n          vault_growth_usd_yearly: 0,\n          vault_growth_usd_daily_perc: 0,\n          vault_growth_usd_weekly_perc: 0,\n          vault_growth_usd_yearly_perc: 0,\n          vault_balance_eth: 0,\n          vault_growth_eth_daily: 0,\n          vault_growth_eth_weekly: 0,\n          vault_growth_eth_yearly: 0,\n          vault_growth_eth_daily_perc: 0,\n          vault_growth_eth_weekly_perc: 0,\n          vault_growth_eth_yearly_perc: 0,\n          earn_balance_usd: 0,\n          earn_growth_usd_daily: 0,\n          earn_growth_usd_weekly: 0,\n          earn_growth_usd_yearly: 0,\n          earn_growth_usd_daily_perc: 0,\n          earn_growth_usd_weekly_perc: 0,\n          earn_growth_usd_yearly_perc: 0,\n          earn_balance_eth: 0,\n          earn_growth_eth_daily: 0,\n          earn_growth_eth_weekly: 0,\n          earn_growth_eth_yearly: 0,\n          earn_growth_eth_daily_perc: 0,\n          earn_growth_eth_weekly_perc: 0,\n          earn_growth_eth_yearly_perc: 0,\n          portfolio_balance_usd: 0,\n          portfolio_growth_usd_daily: 0,\n          portfolio_growth_usd_weekly: 0,\n          portfolio_growth_usd_yearly: 0,\n          portfolio_growth_usd_daily_perc: 0,\n          portfolio_growth_usd_weekly_perc: 0,\n          portfolio_growth_usd_yearly_perc: 0,\n          portfolio_balance_eth: 0,\n          portfolio_growth_eth_daily: 0,\n          portfolio_growth_eth_weekly: 0,\n          portfolio_growth_eth_yearly: 0,\n          portfolio_growth_eth_daily_perc: 0,\n          portfolio_growth_eth_weekly_perc: 0,\n          portfolio_growth_eth_yearly_perc: 0\n        }\n      };\n    };\n\n    this.invest = payload => {\n      const account = store.getStore('account');\n      const {\n        asset,\n        amount\n      } = payload.content;\n\n      if (asset.erc20address !== 'Ethereum') {\n        this._checkApproval(asset, account, amount, asset.iEarnContract, err => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          this._callInvest(asset, account, amount, (err, investResult) => {\n            if (err) {\n              return emitter.emit(ERROR, err);\n            }\n\n            return emitter.emit(INVEST_RETURNED, investResult);\n          });\n        });\n      } else {\n        this._callInvest(asset, account, amount, (err, investResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(INVEST_RETURNED, investResult);\n        });\n      }\n    };\n\n    this._checkApprovalForProxy = async (asset, account, amount, contract, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      const vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n\n      try {\n        const allowance = await vaultContract.methods.allowance(account.address, contract).call({\n          from: account.address\n        });\n        const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n        if (parseFloat(ethAllowance) < parseFloat(amount)) {\n          await vaultContract.methods.approve(contract, web3.utils.toWei('999999999999', \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          });\n          callback();\n        } else {\n          callback();\n        }\n      } catch (error) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    };\n\n    this._checkCurveMintApproval = async (asset, account, contract, callback) => {\n      try {\n        const web3 = new Web3(store.getStore('web3context').library.provider);\n        const curveContracts = new web3.eth.Contract(asset.minterContractABI, asset.minterContractAddress);\n        const allowedToMintFor = await curveContracts.methods.allowed_to_mint_for(contract, account.address).call({\n          from: account.address\n        });\n\n        if (allowedToMintFor) {\n          return callback();\n        } else {\n          await curveContracts.methods.toggle_approve_mint(contract).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          });\n          callback();\n        }\n      } catch (error) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    };\n\n    this._checkApproval = async (asset, account, amount, contract, callback) => {\n      if (asset.erc20address === 'Ethereum') {\n        return callback();\n      }\n\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n      try {\n        const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n          from: account.address\n        });\n        let ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n        if (asset.decimals !== 18) {\n          ethAllowance = (allowance * 10 ** asset.decimals).toFixed(0);\n        }\n\n        var amountToSend = web3.utils.toWei('999999999', \"ether\");\n\n        if (asset.decimals !== 18) {\n          amountToSend = (999999999 * 10 ** asset.decimals).toFixed(0);\n        }\n\n        if (parseFloat(ethAllowance) < parseFloat(amount)) {\n          /*\n            code to accomodate for \"assert _value == 0 or self.allowances[msg.sender][_spender] == 0\" in contract\n            We check to see if the allowance is > 0. If > 0 set to 0 before we set it to the correct amount.\n          */\n          if (['crvV1', 'crvV2', 'crvV3', 'crvV4', 'USDTv1', 'USDTv2', 'USDTv3', 'USDT', 'sCRV'].includes(asset.id) && ethAllowance > 0) {\n            await erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({\n              from: account.address,\n              gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n            });\n          }\n\n          await erc20Contract.methods.approve(contract, amountToSend).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          });\n          callback();\n        } else {\n          callback();\n        }\n      } catch (error) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    };\n\n    this._checkApprovalWaitForConfirmation = async (asset, account, amount, contract, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n        from: account.address\n      });\n      const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n      if (parseFloat(ethAllowance) < parseFloat(amount)) {\n        if (['crvV1', 'crvV2', 'crvV3', 'crvV4', 'USDTv1', 'USDTv2', 'USDTv3', 'sCRV'].includes(asset.id) && ethAllowance > 0) {\n          erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          }).on('transactionHash', async function (hash) {\n            erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n              from: account.address,\n              gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n            }).on('transactionHash', function (hash) {\n              callback();\n            }).on('error', function (error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if (error.message) {\n                  return callback(error.message);\n                }\n\n                callback(error);\n              }\n            });\n          }).on('error', function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                return callback(error.message);\n              }\n\n              callback(error);\n            }\n          });\n        } else {\n          erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          }).on('transactionHash', function (hash) {\n            callback();\n          }).on('error', function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                return callback(error.message);\n              }\n\n              callback(error);\n            }\n          });\n        }\n      } else {\n        callback();\n      }\n    };\n\n    this._callInvest = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract);\n\n      if (asset.erc20address === 'Ethereum') {\n        iEarnContract.methods[asset.invest]().send({\n          from: account.address,\n          value: web3.utils.toWei(amount, \"ether\"),\n          gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n        }).on('transactionHash', function (hash) {\n          // console.log(hash)\n          callback(null, hash);\n        }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n        }).on('receipt', function (receipt) {// console.log(receipt);\n        }).on('error', function (error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        }).catch(error => {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        });\n      } else {\n        var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n        if (asset.decimals !== 18) {\n          amountToSend = amount * 10 ** asset.decimals;\n        }\n\n        iEarnContract.methods[asset.invest](amountToSend).send({\n          from: account.address,\n          gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n        }).on('transactionHash', function (hash) {\n          // console.log(hash)\n          callback(null, hash);\n        }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n        }).on('receipt', function (receipt) {// console.log(receipt);\n        }).on('error', function (error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        }).catch(error => {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        });\n      }\n    };\n\n    this.rebalance = payload => {\n      const account = store.getStore('account');\n      const {\n        asset\n      } = payload.content;\n\n      this._callRebalance(asset, account, (err, result) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(REBALANCE_RETURNED, result);\n      });\n    };\n\n    this._callRebalance = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let iEarnContract = new web3.eth.Contract(config.IEarnERC20ABI, asset.iEarnContract);\n      iEarnContract.methods.rebalance().send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        // console.log(error);\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.donate = payload => {\n      const account = store.getStore('account');\n      const {\n        asset,\n        amount\n      } = payload.content;\n\n      this._callDonate(asset, account, amount, (err, result) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(DONATE_RETURNED, result);\n      });\n    };\n\n    this._callDonate = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let iEarnContract = new web3.eth.Contract(config.IEarnERC20ABI, asset.erc20address);\n      var amountSend = web3.utils.toWei(amount, \"ether\");\n\n      if (asset.decimals !== 18) {\n        amountSend = Math.round(amount * 10 ** asset.decimals);\n      }\n\n      iEarnContract.methods.transfer(asset.iEarnContract, amountSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        // console.log(error);\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.redeem = payload => {\n      const account = store.getStore('account');\n      const {\n        asset,\n        amount\n      } = payload.content;\n\n      this._callRedeem(asset, account, amount, (err, redeemResult) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(REDEEM_RETURNED, redeemResult);\n      });\n    };\n\n    this._callRedeem = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract);\n      var amountSend = web3.utils.toWei(amount, \"ether\");\n\n      if (asset.decimals !== 18) {\n        amountSend = Math.round(amount * 10 ** asset.decimals);\n      }\n\n      iEarnContract.methods[asset.redeem](amountSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        // console.log(error);\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.getBalancesLight = async () => {\n      const account = store.getStore('account');\n      const assets = store.getStore('assets');\n\n      if (!account || !account.address) {\n        return false;\n      }\n\n      const web3 = await this._getWeb3Provider();\n\n      if (!web3) {\n        return null;\n      }\n\n      async.map(assets, (asset, callback) => {\n        async.parallel([callbackInner => {\n          this._getERC20Balance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getInvestedBalance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getPoolPrice(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getMaxAPR(web3, asset, account, callbackInner);\n        }], (err, data) => {\n          asset.balance = data[0];\n          asset.investedBalance = data[1];\n          asset.price = data[2];\n          asset.maxApr = data[3];\n          callback(null, asset);\n        });\n      }, (err, assets) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        store.setStore({\n          assets: assets\n        });\n        return emitter.emit(BALANCES_LIGHT_RETURNED, assets);\n      });\n    };\n\n    this._getStakedBalance = async (web3, asset, account, callback) => {\n      try {\n        let erc20Contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n        let balance = await erc20Contract.methods.balanceOf(account.address).call({\n          from: account.address\n        }); // console.log(balance, parseFloat(balance)/10**asset.decimals, new Decimal(balance).toFixed(12), \"_stakedBalance ==\");\n\n        callback(null, parseFloat(balance) / 10 ** asset.decimals);\n      } catch (e) {\n        callback(null, 0);\n      }\n    };\n\n    this._getAriesAPY = async (ariesAPY, asset, callback) => {\n      const propertyName = \"apy\";\n      const result = ariesAPY.data.filter(value => {\n        return value.pool_identifier === asset.pool_identifier;\n      });\n      const toReturn = result.length > 0 && result[0][propertyName] ? result[0][propertyName] : 0;\n      callback(null, toReturn);\n    };\n\n    this._getLiquidityLock = async (ariesAPY, asset, callback) => {\n      const propertyName = \"liquidity_lock\";\n      const result = ariesAPY.data.filter(value => {\n        return value.pool_identifier === asset.pool_identifier;\n      });\n      const toReturn = result.length > 0 && result[0][propertyName] ? result[0][propertyName] : 0;\n      callback(null, toReturn);\n    };\n\n    this._setDataIntoFarmingDashBoard = (ariesAPY, afiPrice) => {\n      store.setStore({\n        farmingDashBoard: {\n          depositsInAries: 0,\n          marketCap: 0,\n          AFIPrice: 0,\n          AFIStakingAPY: 0,\n          AFIStaked: 0,\n          AFIPooled: 0\n        }\n      });\n      const farmingDashBoard = store.getStore(\"farmingDashBoard\");\n      const poolsInfo = ariesAPY.data;\n      console.log(\"== FarmingDashBoard - before\", farmingDashBoard, ariesAPY, afiPrice);\n      poolsInfo.forEach((value, index, arr) => {\n        if (value.pool_identifier === \"AFI Governance Pool\") {\n          farmingDashBoard.depositsInAries += value.liquidity_lock * 1;\n          farmingDashBoard.AFIStakingAPY = value.apy;\n          farmingDashBoard.AFIStaked += value.liquidity_lock / (totalAFIReward * afiPrice);\n        } else if (value.pool_identifier === \"UniLP_AFI_USDC Pool\") {\n          farmingDashBoard.depositsInAries += value.liquidity_lock * 1;\n          farmingDashBoard.AFIPooled += value.liquidity_lock / (afiPrice * 2 * totalAFIReward);\n        } else {\n          farmingDashBoard.depositsInAries += value.liquidity_lock * 1;\n        }\n      });\n      farmingDashBoard.marketCap = afiPrice * 18000000;\n      farmingDashBoard.AFIPrice = afiPrice;\n      console.log(\"== FarmingDashBoard - after\", farmingDashBoard, ariesAPY, afiPrice);\n    };\n\n    this._getAriesAPYs = async () => {\n      const response = await fetch(`${config.apiURLProvider}pools`).then(r => r.json());\n      return response;\n    };\n\n    this._getAriesPrice = async () => {\n      const response = await fetch(`${config.apiURLProvider}afidata`).then(r => r.json());\n      const price = response.data.price || 0; //const price = 0;\n      // console.log(price, \"_getAriesPrice ==\");\n\n      return price;\n    };\n\n    this._getRewards = async (web3, asset, account, callback) => {\n      try {\n        let contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n        let balance = await contract.methods.earned(account.address).call({\n          from: account.address\n        });\n        callback(null, new Decimal(parseFloat(balance) / 10 ** asset.rewardDecimals).toFixed());\n      } catch (e) {\n        callback(null, 0);\n      }\n    };\n\n    this.getBalances = async () => {\n      const account = store.getStore('account');\n      const assets = store.getStore('assets');\n\n      if (!account || !account.address) {\n        return false;\n      }\n\n      const web3 = new Web3(store.getStore('web3context').library.provider); //todo: afi price\n\n      const afiPrice = await this._getAriesPrice();\n      const ariesAPY = await this._getAriesAPYs();\n\n      this._setDataIntoFarmingDashBoard(ariesAPY, afiPrice);\n\n      async.map(assets, (asset, callback) => {\n        async.parallel([//0\n        callbackInner => {\n          this._getERC20Balance(web3, asset, account, callbackInner);\n        }, //1\n        callbackInner => {\n          this._getInvestedBalance(web3, asset, account, callbackInner);\n        }, //2\n        callbackInner => {\n          this._getPoolPrice(web3, asset, account, callbackInner);\n        }, //3\n        callbackInner => {\n          this._getMaxAPR(web3, asset, account, callbackInner);\n        }, //4\n        callbackInner => {\n          this._getPoolValue(web3, asset, account, callbackInner);\n        }, //5\n        callbackInner => {\n          this._getAPY(web3, asset, account, callbackInner);\n        }, //6\n        callbackInner => {\n          this._getCurrentLender(web3, asset, account, callbackInner);\n        }, //7\n        callbackInner => {\n          this._getRecommendedLender(web3, asset, account, callbackInner);\n        }, //8\n        callbackInner => {\n          this._getBalance(web3, asset, account, callbackInner);\n        }, //9\n        callbackInner => {\n          this._getStakedBalance(web3, asset, account, callbackInner);\n        }, //10\n        callbackInner => {\n          this._getAriesAPY(ariesAPY, asset, callbackInner);\n        }, //11\n        callbackInner => {\n          this._getRewards(web3, asset, account, callbackInner);\n        }, //12\n        callbackInner => {\n          this._getLiquidityLock(ariesAPY, asset, callbackInner);\n        }], (err, data) => {\n          asset.balance = data[0];\n          asset.investedBalance = data[1];\n          asset.price = data[2];\n          asset.maxApr = data[3];\n          asset.poolValue = data[4];\n          asset.apy = data[5];\n          asset.current = data[6];\n          asset.recommended = data[7];\n          asset.tokenBalance = data[8];\n          asset.stakedBalance = data[9];\n          asset.ariesAPY = data[10];\n          asset.rewardAvailable = data[11];\n          asset.liquidityLock = data[12];\n          asset.afiPrice = afiPrice; // console.log(asset, \"==test\");\n\n          callback(null, asset);\n        });\n      }, (err, assets) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        store.setStore({\n          assets: assets\n        });\n        return emitter.emit(BALANCES_RETURNED, assets);\n      });\n    };\n\n    this._getERC20Balance = async (web3, asset, account, callback) => {\n      if (asset.erc20address === 'Ethereum') {\n        try {\n          const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(account.address), \"ether\");\n          callback(null, parseFloat(eth_balance));\n        } catch (ex) {\n          // console.log(ex)\n          return callback(ex);\n        }\n      } else {\n        let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n        try {\n          var balance = await erc20Contract.methods.balanceOf(account.address).call({\n            from: account.address\n          });\n          balance = parseFloat(balance) / 10 ** asset.decimals;\n          callback(null, parseFloat(balance));\n        } catch (ex) {\n          // console.log(ex)\n          return callback(ex);\n        }\n      }\n    };\n\n    this._getBalance = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      if (asset.erc20address === 'Ethereum') {\n        try {\n          const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(asset.iEarnContract), \"ether\");\n          callback(null, parseFloat(eth_balance));\n        } catch (ex) {\n          // console.log(ex)\n          return callback(ex);\n        }\n      } else {\n        let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n        try {\n          var balance = await erc20Contract.methods.balanceOf(asset.iEarnContract).call({\n            from: account.address\n          });\n          balance = parseFloat(balance) / 10 ** asset.decimals;\n          callback(null, parseFloat(balance));\n        } catch (ex) {\n          // console.log(ex)\n          return callback(ex);\n        }\n      }\n    };\n\n    this._getAPY = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      if (asset.measurement == null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let block = await web3.eth.getBlockNumber();\n        let earn = new web3.eth.Contract(config.IEarnABI, asset.iEarnContract);\n        let balance = await earn.methods.getPricePerFullShare().call();\n        balance = balance - asset.measurement;\n        balance = balance / 1e18;\n        let diff = block - asset.lastMeasurement;\n        balance = balance / diff;\n        balance = balance * 2425846;\n        callback(null, parseFloat(balance));\n      } catch (e) {\n        // console.log(e)\n        callback(null, 0);\n      }\n    };\n\n    this._getCurrentLender = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract);\n        let value = 0;\n\n        if (asset.erc20address === 'Ethereum' || asset.id === 'CRVv1') {\n          value = 0;\n        } else {\n          value = await iEarnContract.methods.provider().call({\n            from: account.address\n          });\n        }\n\n        callback(null, parseFloat(value));\n      } catch (e) {\n        // console.log(e)\n        callback(null, 0);\n      }\n    };\n\n    this._getRecommendedLender = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract);\n        let value = 0;\n\n        if (asset.erc20address === 'Ethereum' || asset.id === 'CRVv1') {\n          value = 0;\n        } else {\n          value = await iEarnContract.methods.recommend().call({\n            from: account.address\n          });\n        }\n\n        callback(null, parseFloat(value));\n      } catch (e) {\n        //console.log(asset)\n        //console.log(e)\n        callback(null, 0);\n      }\n    };\n\n    this._getPoolValue = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract);\n        let value = 0;\n\n        if (asset.erc20address === 'Ethereum') {\n          value = web3.utils.fromWei(await iEarnContract.methods.calcPoolValueInETH().call({\n            from: account.address\n          }), 'ether');\n        } else {\n          value = await iEarnContract.methods.calcPoolValueInToken().call({\n            from: account.address\n          });\n\n          if (asset.decimals === 18) {\n            value = web3.utils.fromWei(value, 'ether');\n          } else {\n            value = value / 10 ** asset.decimals;\n          }\n        }\n\n        callback(null, parseFloat(value));\n      } catch (e) {\n        //console.log(e)\n        callback(null, 0);\n      }\n    };\n\n    this._getPoolPrice = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      let iEarnContract = new web3.eth.Contract(config.IEarnABI, asset.iEarnContract);\n      const balance = web3.utils.fromWei(await iEarnContract.methods.getPricePerFullShare().call({\n        from: account.address\n      }), 'ether');\n      callback(null, parseFloat(balance));\n    };\n\n    this._getInvestedBalance = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      let iEarnContract = new web3.eth.Contract(config.IEarnABI, asset.iEarnContract);\n      var balance = await iEarnContract.methods.balanceOf(account.address).call({\n        from: account.address\n      });\n      balance = parseFloat(balance) / 10 ** asset.decimals;\n      callback(null, parseFloat(balance));\n    };\n\n    this._getMaxAPR = async (web3, asset, account, callback) => {\n      if (asset.iEarnContract === null) {\n        return callback(null, 0);\n      }\n\n      if (asset.symbol === 'CRV') {\n        let aprContract = new web3.eth.Contract(config.crvContractABI, config.crvAddress);\n        const call = 'crvapr';\n        const aprs = await aprContract.methods[call]().call();\n        return callback(null, web3.utils.fromWei(parseFloat(aprs).toFixed(0), 'ether'));\n      }\n\n      let aprContract = new web3.eth.Contract(config.aggregatedContractABI, config.aggregatedContractAddress);\n      var call = 'getAPROptions'; //+asset.symbol\n\n      var address = asset.erc20address;\n      var aprs = 0;\n\n      if (asset.erc20address === 'Ethereum') {\n        call = 'getETH';\n        aprs = await aprContract.methods[call]().call();\n      } else {\n        aprs = await aprContract.methods[call](address).call();\n      }\n\n      const keys = Object.keys(aprs);\n      const workKeys = keys.filter(key => {\n        return isNaN(key);\n      });\n      const maxApr = Math.max.apply(Math, workKeys.map(function (o) {\n        if (o === 'uniapr' || o === 'unicapr' || o === \"iapr\") {\n          return aprs[o] - 100000000000000000000;\n        }\n\n        return aprs[o];\n      }));\n      callback(null, web3.utils.fromWei(maxApr.toFixed(0), 'ether'));\n    };\n\n    this.getAPR = payload => {\n      var value = 0;\n\n      if (payload.content && payload.content.amount) {\n        value = payload.content.amount;\n      }\n\n      const web3 = new Web3(new Web3.providers.HttpProvider(config.infuraProvider));\n      async.map(store.getStore('aprs'), (apr, callback) => {\n        apr.value = value.toString();\n\n        this._getAPR(web3, apr, callback);\n      }, (err, yields) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        } //get all headers\n\n\n        if (yields && yields.length > 0 && yields[0].apr) {\n          const headers = Object.keys(yields[0].apr);\n          store.setStore({\n            aggregatedYields: yields,\n            aggregatedHeaders: headers\n          });\n        }\n\n        return emitter.emit(GET_AGGREGATED_YIELD_RETURNED, yields);\n      });\n    };\n\n    this._getAPR = async (web3, apr, callback) => {\n      let contract = new web3.eth.Contract(config.aprContractABI, config.aprContractAddress);\n      var value = apr.value;\n\n      if (apr.decimals === 6) {\n        value = web3.utils.toWei(apr.value, 'picoether');\n      } else {\n        value = web3.utils.toWei(apr.value, 'ether');\n      }\n\n      try {\n        const val = await contract.methods['getAPROptionsAdjusted'](apr.address, value).call();\n        const keys = Object.keys(val);\n        const vals = keys.filter(key => {\n          return isNaN(key);\n        }).map(key => {\n          const obj = {};\n          obj[key] = web3.utils.fromWei(val[key].toString(), 'ether');\n          return obj;\n        });\n        let output = {};\n\n        for (let i = 0; i < vals.length; i++) {\n          const keys = Object.keys(vals[i]);\n\n          if (keys[0] === '_unifulcrum' || keys[0] === '_uniaave' || keys[0] === '_unicompound' || keys[0] === '_uniswap') {// skip\n          } else {\n            output[keys[0]] = vals[i][keys[0]];\n          }\n        }\n\n        let iearn = 0;\n\n        if (apr.earnAddress !== '') {\n          let block = await web3.eth.getBlockNumber();\n          let earn = new web3.eth.Contract(config.IEarnABI, apr.earnAddress);\n          let balance = await earn.methods.getPricePerFullShare().call();\n          balance = balance - apr.measurement;\n          balance = balance / 1e18;\n          let diff = block - apr.lastMeasurement;\n          balance = balance / diff;\n          balance = balance * 2425846;\n          iearn = balance;\n        }\n\n        output[\"iearn.finance \\n(APY)\"] = iearn;\n        apr.apr = output;\n        callback(null, apr);\n      } catch (ex) {\n        //console.log(ex);\n        // return callback(ex)\n        callback(null, false);\n      }\n    };\n\n    this._getAggregatedYield = async (web3, call, callback) => {\n      let uniswapContract = new web3.eth.Contract(config.aggregatedContractABI, config.aggregatedContractAddress);\n\n      try {\n        const val = await uniswapContract.methods[call.name]().call();\n        const keys = Object.keys(val);\n        const vals = keys.filter(key => {\n          return isNaN(key);\n        }).map(key => {\n          const obj = {};\n          obj[key] = web3.utils.fromWei(val[key].toString(), 'ether');\n          return obj;\n        });\n        let output = {};\n\n        for (let i = 0; i < vals.length; i++) {\n          const keys = Object.keys(vals[i]);\n          output[keys[0]] = vals[i][keys[0]];\n        }\n\n        call.token = call.name.replace('get', '');\n        call.apr = output;\n        callback(null, call);\n      } catch (ex) {\n        //// console.log(ex)\n        // return callback(ex)\n        callback(null, false);\n      }\n    };\n\n    this.getContractEvents = payload => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let iEarnContract = new web3.eth.Contract(config.IEarnABI, config.iEarnContract);\n      iEarnContract.getPastEvents('allEvents', {\n        fromBlock: 1,\n        toBlock: 'latest'\n      }).then(res => {\n        const sorted = res.sort((a, b) => {\n          return parseFloat(a.blockNumber) - parseFloat(b.blockNumber);\n        }).filter(tx => {\n          if (tx.event !== 'Transfer') {\n            return false;\n          }\n\n          if (!tx.returnValues.value || tx.returnValues.value === 0) {\n            return false;\n          }\n\n          if (tx.returnValues.from !== '0x0000000000000000000000000000000000000000') {\n            return false;\n          }\n\n          return true;\n        }).map(async tx => {\n          const rawTx = await this._getTransaction(web3, tx.transactionHash);\n          return {\n            blockNumber: tx.blockNumber,\n            transactionHash: tx.transactionHash,\n            eth: web3.utils.fromWei(rawTx.value, 'ether'),\n            iEth: web3.utils.fromWei(tx.returnValues.value, 'ether'),\n            ethRatio: tx.returnValues.value * 100 / rawTx.value,\n            address: rawTx.from\n          };\n        });\n        Promise.all(sorted).then(async transactions => {\n          const pricePerFullShare = await this._getPricePerFullShare(web3, iEarnContract);\n          const trxs = transactions.map(async tx => {\n            ////console.log(tx.address)\n            const balance = await this._getIEthBalance(web3, iEarnContract, tx.address);\n            tx.ethRedeem = parseFloat(pricePerFullShare) * parseFloat(balance);\n            tx.growth = parseFloat(tx.ethRedeem) * 100 / parseFloat(tx.eth);\n            return tx;\n          });\n          Promise.all(trxs).then(async txs => {\n            store.setStore({\n              events: txs\n            });\n            return emitter.emit(GET_CONTRACT_EVENTS_RETURNED, txs);\n          });\n        });\n      });\n    };\n\n    this._getTransaction = async (web3, hash) => {\n      const rawTx = await web3.eth.getTransaction(hash);\n      return rawTx;\n    };\n\n    this._getPricePerFullShare = async (web3, iEarnContract) => {\n      const balance = web3.utils.fromWei(await iEarnContract.methods.getPricePerFullShare().call({}), 'ether');\n      return balance;\n    };\n\n    this._getIEthBalance = async (web3, iEarnContract, address) => {\n      const balance = web3.utils.fromWei(await iEarnContract.methods.balanceOf(address).call({}), 'ether');\n      return balance;\n    };\n\n    this.swap = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        amount\n      } = payload.content;\n      let yCurveZapSwapContract = config.yCurveZapSwapAddress;\n\n      if (sendAsset.id === 'crvV3') {\n        yCurveZapSwapContract = config.yCurveZapSwapV4Address;\n      }\n\n      this._checkApproval(sendAsset, account, amount, yCurveZapSwapContract, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callSwap(sendAsset, account, amount, (err, swapResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(SWAP_RETURNED, swapResult);\n        });\n      });\n    };\n\n    this._callSwap = async (sendAsset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n      if (sendAsset.decimals !== 18) {\n        amountToSend = amount * 10 ** sendAsset.decimals;\n      }\n\n      let call = '';\n\n      switch (sendAsset.id) {\n        case 'crvV1':\n          call = 'swapv1tov3';\n          break;\n\n        case 'crvV2':\n          call = 'swapv2tov3';\n          break;\n\n        case 'crvV3':\n          call = 'swapv3tov4';\n          break;\n\n        default:\n      }\n\n      let yCurveZapSwapContract = new web3.eth.Contract(config.yCurveZapSwapABI, config.yCurveZapSwapAddress);\n\n      if (sendAsset.id === 'crvV3') {\n        yCurveZapSwapContract = new web3.eth.Contract(config.yCurveZapSwapV4ABI, config.yCurveZapSwapV4Address);\n      }\n\n      yCurveZapSwapContract.methods[call](amountToSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        //console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {//console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {//console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.getBestPrice = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        receiveAsset,\n        amount\n      } = payload.content;\n\n      this._getBestPrice(sendAsset, receiveAsset, account, amount, (err, price) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(GET_BEST_PRICE_RETURNED, price);\n      });\n    };\n\n    this._getBestPrice = async (sendAsset, receiveAsset, account, amount, callback) => {\n      try {\n        const url = 'https://api-v2.dex.ag/price?from=' + sendAsset.symbol.toLowerCase() + '&to=' + receiveAsset.symbol.toLowerCase() + '&fromAmount=' + amount + '&dex=ag&tradable=true';\n        let price = await rp(url);\n        callback(null, JSON.parse(price));\n      } catch (e) {\n        callback(null, {});\n      }\n    };\n\n    this.trade = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        receiveAsset,\n        amount\n      } = payload.content;\n\n      this._callTrade(sendAsset, receiveAsset, account, amount, (err, tradeResult) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(TRADE_RETURNED, tradeResult);\n      });\n    };\n\n    this._callTrade = async (sendAsset, receiveAsset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let trade = await this._getDexAgTrade(sendAsset, receiveAsset, account, amount); // await this._approveToken(trade.metadata.input.address, trade.metadata.input.spender, trade.metadata.input.amount, account, web3);\n\n      try {\n        const tx = await this._sendTrade(trade, account, web3);\n        return callback(null, tx.transactionHash);\n      } catch (ex) {\n        return callback(ex.message);\n      }\n    };\n\n    this._getDexAgTrade = async (sendAsset, receiveAsset, account, amount) => {\n      const url = 'https://api-v2.dex.ag/trade?from=' + sendAsset.symbol.toLowerCase() + '&to=' + receiveAsset.symbol.toLowerCase() + '&fromAmount=' + amount + '&dex=ag';\n      let trade = await rp(url);\n      return JSON.parse(trade);\n    };\n\n    this._approveToken = async (token, spender, amount, account, web3) => {\n      // First 4 bytes of the hash of \"fee()\" for the sighash selector\n      let funcHash = ethers.utils.hexDataSlice(ethers.utils.id('approve(address,uint256)'), 0, 4);\n      let abi = new ethers.utils.AbiCoder();\n      let inputs = [{\n        name: 'spender',\n        type: 'address'\n      }, {\n        name: 'amount',\n        type: 'uint256'\n      }];\n      let params = [spender, amount];\n      let bytes = abi.encode(inputs, params).substr(2); // construct approval data from function hash and parameters\n\n      let inputData = `${funcHash}${bytes}`; // let nonce = await infuraProvider.getTransactionCount(ethersWallet.address);\n\n      let nonce = await web3.eth.getTransactionCount(account.address); // You will want to get the real gas price from https://ethgasstation.info/json/ethgasAPI.json\n\n      let gasPrice = web3.utils.toWei(await this._getGasPrice(), 'gwei');\n      let transaction = {\n        to: token,\n        nonce: nonce,\n        gasLimit: 500000,\n        // You will want to use estimateGas instead for real apps\n        gasPrice: gasPrice,\n        data: inputData,\n        from: account.address\n      }; // let tx = await ethersWallet.sendTransaction(transaction);\n\n      let tx = await web3.eth.sendTransaction(transaction); //console.log(tx);\n    };\n\n    this._sendTrade = async (trade, account, web3) => {\n      // let nonce = await infuraProvider.getTransactionCount(ethersWallet.address);\n      let nonce = await web3.eth.getTransactionCount(account.address); // You will want to get the real gas price from https://ethgasstation.info/json/ethgasAPI.json\n\n      let gasPrice = web3.utils.toWei(await this._getGasPrice(), 'gwei');\n      let transaction = trade.trade;\n      transaction.nonce = nonce;\n      transaction.gasPrice = Number(gasPrice);\n      transaction.gasLimit = 500000; // You will want to use estimateGas instead for real apps\n\n      transaction.value = Number(transaction.value);\n      transaction.from = account.address; // let tx = await ethersWallet.sendTransaction(transaction);\n\n      let tx = await web3.eth.sendTransaction(transaction);\n      return tx;\n    };\n\n    this.zap = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        receiveAsset,\n        amount\n      } = payload.content;\n      let contractAddress = '';\n\n      if (receiveAsset.id === 'crvV3') {\n        contractAddress = config.yCurveZapAddress;\n      }\n\n      if (receiveAsset.id === 'crvV4') {\n        contractAddress = config.yCurveZapV4Address;\n      }\n\n      if (sendAsset.id === 'crvV3') {\n        contractAddress = config.yCurveZapOutAddress;\n      }\n\n      if (sendAsset.id === 'crvV4') {\n        contractAddress = config.yCurveZapOutV4Address;\n      }\n\n      this._checkApproval(sendAsset, account, amount, contractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callZap(sendAsset, receiveAsset, account, amount, (err, zapResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(ZAP_RETURNED, zapResult);\n        });\n      });\n    };\n\n    this._callZap = async (sendAsset, receiveAsset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n      if (sendAsset.decimals !== 18) {\n        amountToSend = amount * 10 ** sendAsset.decimals;\n      }\n\n      let yCurveZapContract = null;\n\n      if (receiveAsset.id === 'crvV3') {\n        yCurveZapContract = new web3.eth.Contract(config.yCurveZapABI, config.yCurveZapAddress);\n      } else if (receiveAsset.id === 'crvV4') {\n        yCurveZapContract = new web3.eth.Contract(config.yCurveZapV4ABI, config.yCurveZapV4Address);\n      } else if (sendAsset.id === 'crvV3') {\n        yCurveZapContract = new web3.eth.Contract(config.yCurveZapOutABI, config.yCurveZapOutAddress);\n      } else if (sendAsset.id === 'crvV4') {\n        yCurveZapContract = new web3.eth.Contract(config.yCurveZapOutV4ABI, config.yCurveZapOutV4Address);\n      }\n\n      let call = '';\n\n      switch (sendAsset.id) {\n        case 'DAIv2':\n        case 'DAIv3':\n          call = 'depositDAI';\n          break;\n\n        case 'USDCv2':\n        case 'USDCv3':\n          call = 'depositUSDC';\n          break;\n\n        case 'USDTv2':\n        case 'USDTv3':\n          call = 'depositUSDT';\n          break;\n\n        case 'TUSDv2':\n          call = 'depositTUSD';\n          break;\n\n        case 'BUSDv3':\n          call = 'depositBUSD';\n          break;\n\n        case 'crvV3':\n        case 'crvV4':\n          switch (receiveAsset.id) {\n            case 'DAIv2':\n            case 'DAIv3':\n              call = 'withdrawDAI';\n              break;\n\n            case 'USDCv2':\n            case 'USDCv3':\n              call = 'withdrawUSDC';\n              break;\n\n            case 'USDTv2':\n            case 'USDTv3':\n              call = 'withdrawUSDT';\n              break;\n\n            case 'TUSDv2':\n              call = 'withdrawTUSD';\n              break;\n\n            case 'BUSDv3':\n              call = 'withdrawBUSD';\n              break;\n\n            default:\n          }\n\n          break;\n\n        default:\n      }\n\n      yCurveZapContract.methods[call](amountToSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.idai = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        receiveAsset,\n        amount\n      } = payload.content;\n\n      this._checkApproval(sendAsset, account, amount, config.iDAIZapSwapAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callIDAI(sendAsset, receiveAsset, account, amount, (err, zapResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(IDAI_RETURNED, zapResult);\n        });\n      });\n    };\n\n    this._callIDAI = async (sendAsset, receiveAsset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n      if (sendAsset.decimals !== 18) {\n        amountToSend = amount * 10 ** sendAsset.decimals;\n      }\n\n      let call = 'swapiDAItoyDAI';\n      let iDAIZapSwapContract = new web3.eth.Contract(config.iDAIZapSwapABI, config.iDAIZapSwapAddress);\n      iDAIZapSwapContract.methods[call](amountToSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.getCurveBalances = payload => {\n      const account = store.getStore('account');\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      const curveContracts = store.getStore('curveContracts');\n      async.map(curveContracts, (curv, callback) => {\n        this._getERC20Balance(web3, curv, account, (err, balance) => {\n          if (err) {\n            return callback(err);\n          }\n\n          curv.balance = balance;\n          callback(null, curv);\n        });\n      }, (err, result) => {\n        store.setStore({\n          curveContracts: result\n        });\n        return emitter.emit(GET_CURV_BALANCE_RETURNED, result);\n      });\n    };\n\n    this.getVaultBalancesFull = async () => {\n      const account = store.getStore('account');\n      const assets = store.getStore('vaultAssets');\n\n      if (!account || !account.address) {\n        return false;\n      }\n\n      const web3 = await this._getWeb3Provider();\n\n      if (!web3) {\n        return null;\n      }\n\n      const vaultStatistics = await this._getStatistics();\n      const addressStatistics = await this._getAddressStatistics(account.address);\n      const addressTXHitory = await this._getAddressTxHistory(account.address);\n      const usdPrices = await this._getUSDPrices(); //todo: afi price\n\n      const afiPrice = await this._getAriesPrice();\n      const ariesAPY = await this._getAriesAPYs();\n\n      this._setDataIntoFarmingDashBoard(ariesAPY, afiPrice);\n\n      async.map(assets, (asset, callback) => {\n        async.parallel([callbackInner => {\n          this._getERC20Balance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getVaultBalance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getStrategy(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getStatsAPY(vaultStatistics, asset, callbackInner);\n        }, callbackInner => {\n          this._getVaultHoldings(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getAssetUSDPrices(web3, asset, account, usdPrices, callbackInner);\n        }, callbackInner => {\n          this._getVaultAPY(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getAddressStats(addressStatistics, asset, callbackInner);\n        }, callbackInner => {\n          this._getAddressTransactions(addressTXHitory, asset, callbackInner);\n        }, //9\n        callbackInner => {\n          this._getStakedBalance(web3, asset, account, callbackInner);\n        }, //10\n        callbackInner => {\n          this._getAriesAPY(ariesAPY, asset, callbackInner);\n        }, //11\n        callbackInner => {\n          this._getRewards(web3, asset, account, callbackInner);\n        }, //12\n        callbackInner => {\n          this._getLiquidityLock(ariesAPY, asset, callbackInner);\n        }], (err, data) => {\n          if (err) {\n            return callback(err);\n          }\n\n          asset.balance = data[0];\n          asset.vaultBalance = data[1];\n          asset.strategy = data[2].strategy;\n          asset.strategyHoldings = data[2].holdings;\n          asset.strategyName = data[2].name;\n          asset.stats = data[3];\n          asset.vaultHoldings = data[4];\n          asset.pricePerFullShare = data[5].pricePerFullShare;\n          asset.usdPrice = data[5].usdPrice;\n          asset.pricePerFullShare = data[6].pricePerFullShare;\n          asset.apy = data[6].apy;\n          asset.addressStatistics = data[7];\n          asset.addressTransactions = data[8];\n          asset.stakedBalance = data[9];\n          asset.ariesAPY = data[10];\n          asset.rewardAvailable = data[11];\n          asset.liquidityLock = data[12];\n          asset.afiPrice = afiPrice; // console.log(asset, \"==test\");\n\n          callback(null, asset);\n        });\n      }, (err, assets) => {\n        if (err) {\n          console.error(err);\n          return emitter.emit(ERROR, err);\n        }\n\n        store.setStore({\n          vaultAssets: assets\n        });\n        return emitter.emit(VAULT_BALANCES_FULL_RETURNED, assets);\n      });\n    };\n\n    this._getAssetUSDPrices = async (web3, asset, account, usdPrices, callback) => {\n      try {\n        const vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n        const pricePerFullShare = await vaultContract.methods.getPricePerFullShare().call({\n          from: account.address\n        });\n        const usdPrice = usdPrices[asset.price_id];\n        const returnObj = {\n          pricePerFullShare: pricePerFullShare / 1e18,\n          usdPrice: usdPrice.usd\n        };\n        callback(null, returnObj);\n      } catch (ex) {\n        callback(null, {});\n      }\n    };\n\n    this._getStrategy = async (web3, asset, account, callback) => {\n      if (['LINK'].includes(asset.id)) {\n        return callback(null, {\n          strategy: '',\n          name: '',\n          holdings: 0\n        });\n      }\n\n      try {\n        const url = config.statsProvider + 'vaults';\n        const vaultsApiResultString = await rp(url);\n        const vaults = JSON.parse(vaultsApiResultString);\n        const vault = vaults.find(vault => vault.address.toLowerCase() === asset.vaultContractAddress.toLowerCase());\n        if (!vault) throw false;\n        const strategyAddress = vault[\"strategyAddress\"];\n        const strategyName = vault[\"strategyName\"].replace(/^Strategy/, '');\n        const strategyContract = new web3.eth.Contract(config.vaultStrategyABI, strategyAddress);\n        const holdings = await strategyContract.methods.balanceOf().call({\n          from: account.address\n        });\n        callback(null, {\n          strategy: strategyAddress,\n          name: strategyName,\n          holdings: holdings / 10 ** (asset.id === 'aLINK' ? 6 : asset.decimals)\n        });\n      } catch (ex) {\n        if (ex) console.error(ex);\n        callback(null, {\n          strategy: '',\n          name: '',\n          holdings: 0\n        });\n      }\n    };\n\n    this._getStatsAPY = (vaultStatistics, asset, callback) => {\n      try {\n        if (asset.erc20address === 'Ethereum') {\n          asset.erc20address = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n        }\n\n        const vault = vaultStatistics.filter(stats => {\n          return stats.tokenAddress.toLowerCase() === asset.erc20address.toLowerCase();\n        });\n\n        if (vault.length === 0) {\n          return callback(null, {});\n        }\n\n        callback(null, vault[0]);\n      } catch (ex) {\n        callback(null, {});\n      }\n    };\n\n    this._getAddressStats = (addressStatistics, asset, callback) => {\n      try {\n        if (asset.erc20address === 'Ethereum') {\n          asset.erc20address = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n        }\n\n        const vault = addressStatistics.filter(stats => {\n          return stats.vaultAddress.toLowerCase() === asset.vaultContractAddress.toLowerCase();\n        });\n\n        if (vault.length === 0) {\n          return callback(null, null);\n        }\n\n        callback(null, vault[0]);\n      } catch (ex) {\n        callback(null, {});\n      }\n    };\n\n    this._getAddressTransactions = (addressTXHitory, asset, callback) => {\n      try {\n        if (asset.erc20address === 'Ethereum') {\n          asset.erc20address = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n        }\n\n        const vault = addressTXHitory.filter(stats => {\n          return stats.vaultAddress.toLowerCase() === asset.vaultContractAddress.toLowerCase();\n        });\n\n        if (vault.length === 0) {\n          return callback(null, {});\n        }\n\n        callback(null, vault[0]);\n      } catch (ex) {\n        callback(null, {});\n      }\n    };\n\n    this._getVaultHoldings = async (web3, asset, account, callback) => {\n      try {\n        let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n        var balance = await vaultContract.methods.balance().call({\n          from: account.address\n        });\n        balance = parseFloat(balance) / 10 ** asset.decimals;\n        callback(null, parseFloat(balance));\n      } catch (ex) {\n        callback(null, 0);\n      }\n    };\n\n    this.getVaultBalances = async () => {\n      const account = store.getStore('account');\n      const assets = store.getStore('vaultAssets');\n\n      if (!account || !account.address) {\n        return false;\n      }\n\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      async.map(assets, (asset, callback) => {\n        async.parallel([callbackInner => {\n          this._getERC20Balance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getVaultBalance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getVaultAPY(web3, asset, account, callbackInner);\n        }], (err, data) => {\n          if (err) {\n            return callback(err);\n          }\n\n          asset.balance = data[0];\n          asset.vaultBalance = data[1];\n          asset.pricePerFullShare = data[2].pricePerFullShare;\n          asset.apy = data[2].apy;\n          callback(null, asset);\n        });\n      }, (err, assets) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        store.setStore({\n          vaultAssets: assets\n        });\n        return emitter.emit(VAULT_BALANCES_RETURNED, assets);\n      });\n    };\n\n    this._getVaultBalance = async (web3, asset, account, callback) => {\n      if (asset.vaultContractAddress === null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n        var balance = await vaultContract.methods.balanceOf(account.address).call({\n          from: account.address\n        });\n        balance = parseFloat(balance) / 10 ** asset.decimals;\n        callback(null, parseFloat(balance));\n      } catch (ex) {\n        callback(null, 0);\n      }\n    };\n\n    this._getVaultPricePerShare = async (web3, asset, account, callback) => {\n      if (asset.vaultContractAddress === null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n        var price = await vaultContract.methods.getPricePerFullShare().call({\n          from: account.address\n        });\n        price = parseFloat(price) / 10 ** 18;\n        callback(null, parseFloat(price));\n      } catch (ex) {\n        console.error(ex);\n        callback(null, 0);\n      }\n    };\n\n    this.depositVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset,\n        amount\n      } = payload.content;\n\n      this._checkApproval(asset, account, amount, asset.vaultContractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callDepositVault(asset, account, amount, (err, depositResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(DEPOSIT_VAULT_RETURNED, depositResult);\n        });\n      });\n    };\n\n    this._checkIfApprovalIsNeeded = async (asset, account, amount, contract, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n        from: account.address\n      });\n      const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n      if (parseFloat(ethAllowance) < parseFloat(amount)) {\n        asset.amount = amount;\n        callback(null, asset);\n      } else {\n        callback(null, false);\n      }\n    };\n\n    this._callApproval = async (asset, account, amount, contract, last, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n      try {\n        if (['crvV1', 'crvV2', 'crvV3', 'crvV4', 'USDTv1', 'USDTv2', 'USDTv3', 'USDT'].includes(asset.id)) {\n          const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n            from: account.address\n          });\n          const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n          if (ethAllowance > 0) {\n            erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({\n              from: account.address,\n              gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n            }).on('transactionHash', function (hash) {//success...\n            }).on('error', function (error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if (error.message) {\n                  return callback(error.message);\n                }\n\n                callback(error);\n              }\n            });\n          }\n        }\n\n        if (last) {\n          await erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          });\n          callback();\n        } else {\n          erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          }).on('transactionHash', function (hash) {\n            callback();\n          }).on('error', function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                return callback(error.message);\n              }\n\n              callback(error);\n            }\n          });\n        }\n      } catch (error) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    };\n\n    this._callDepositVault = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n      if (asset.decimals !== 18) {\n        amountToSend = amount * 10 ** asset.decimals;\n      }\n\n      if (asset.erc20address === 'Ethereum') {\n        vaultContract.methods.depositETH().send({\n          from: account.address,\n          value: amountToSend,\n          gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n        }).on('transactionHash', function (hash) {\n          // console.log(hash)\n          callback(null, hash);\n        }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n        }).on('receipt', function (receipt) {// console.log(receipt);\n        }).on('error', function (error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        }).catch(error => {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        });\n      } else {\n        vaultContract.methods.deposit(amountToSend).send({\n          from: account.address,\n          gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n        }).on('transactionHash', function (hash) {\n          // console.log(hash)\n          callback(null, hash);\n        }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n        }).on('receipt', function (receipt) {// console.log(receipt);\n        }).on('error', function (error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        }).catch(error => {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        });\n      }\n    };\n\n    this.depositAllVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset\n      } = payload.content;\n\n      this._checkApproval(asset, account, asset.balance, asset.vaultContractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callDepositAllVault(asset, account, (err, depositResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(DEPOSIT_ALL_VAULT_RETURNED, depositResult);\n        });\n      });\n    };\n\n    this._callDepositAllVault = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      vaultContract.methods.depositAll().send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.withdrawVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset,\n        amount\n      } = payload.content;\n\n      if (asset.yVaultCheckAddress && !asset.yVaultCheckDisabled) {\n        this._checkApprovalForProxy(asset, account, amount, asset.yVaultCheckAddress, err => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          this._callWithdrawVaultProxy(asset, account, amount, (err, withdrawResult) => {\n            if (err) {\n              return emitter.emit(ERROR, err);\n            }\n\n            return emitter.emit(WITHDRAW_VAULT_RETURNED, withdrawResult);\n          });\n        });\n      } else {\n        this._callWithdrawVault(asset, account, amount, (err, withdrawResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(WITHDRAW_VAULT_RETURNED, withdrawResult);\n        });\n      }\n    };\n\n    this._callWithdrawVaultProxy = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let yVaultCheckContract = new web3.eth.Contract(config.yVaultCheckABI, asset.yVaultCheckAddress);\n      var amountSend = web3.utils.toWei(amount, \"ether\");\n\n      if (asset.decimals !== 18) {\n        amountSend = Math.round(amount * 10 ** asset.decimals);\n      }\n\n      yVaultCheckContract.methods.withdraw(amountSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        console.error(error);\n\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this._callWithdrawVault = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      var amountSend = web3.utils.toWei(amount, \"ether\");\n\n      if (asset.decimals !== 18) {\n        amountSend = Math.round(amount * 10 ** asset.decimals);\n      }\n\n      let functionCall = vaultContract.methods.withdraw(amountSend);\n\n      if (asset.erc20address === 'Ethereum') {\n        functionCall = vaultContract.methods.withdrawETH(amountSend);\n      }\n\n      functionCall.send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        console.error(error);\n\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.withdrawAllVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset\n      } = payload.content;\n\n      if (asset.yVaultCheckAddress && !asset.yVaultCheckDisabled) {\n        this._checkApprovalForProxy(asset, account, asset.vaultBalance, asset.yVaultCheckAddress, err => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          this._callWithdrawAllVaultProxy(asset, account, (err, withdrawResult) => {\n            if (err) {\n              return emitter.emit(ERROR, err);\n            }\n\n            return emitter.emit(WITHDRAW_ALL_VAULT_RETURNED, withdrawResult);\n          });\n        });\n      } else {\n        this._callWithdrawAllVault(asset, account, (err, withdrawResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(WITHDRAW_ALL_VAULT_RETURNED, withdrawResult);\n        });\n      }\n    };\n\n    this._callWithdrawAllVaultProxy = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(config.yVaultCheckABI, asset.yVaultCheckAddress);\n      vaultContract.methods.withdrawAll().send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        console.error(error);\n\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this._callWithdrawAllVault = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      let functionCall = vaultContract.methods.withdrawAll();\n\n      if (asset.erc20address === 'Ethereum') {\n        functionCall = vaultContract.methods.withdrawAllETH();\n      }\n\n      functionCall.send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        console.error(error);\n\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this._getVaultAPY = async (web3, asset, account, callback) => {\n      try {\n        if (asset.vaultContractAddress === null) {\n          return callback(null, {\n            pricePerFullShare: 0,\n            apy: 0\n          });\n        }\n\n        const block = await web3.eth.getBlockNumber();\n        const contract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n        let pricePerFullShare = await contract.methods.getPricePerFullShare().call();\n        let balance = pricePerFullShare - asset.measurement;\n        balance = balance / 1e18;\n        let diff = block - asset.lastMeasurement;\n\n        if (diff === 0) {\n          return callback(null, {\n            pricePerFullShare: 0,\n            apy: 0\n          });\n        }\n\n        balance = balance / diff;\n        balance = balance * 242584600;\n        const returnObj = {\n          pricePerFullShare: parseFloat(pricePerFullShare) / 10 ** 18,\n          apy: parseFloat(balance)\n        };\n        callback(null, returnObj);\n      } catch (e) {\n        console.error(e);\n        callback(null, {\n          pricePerFullShare: 0,\n          apy: 0\n        });\n      }\n    };\n\n    this.getUSDPrices = async () => {\n      try {\n        const priceJSON = await this._getUSDPrices();\n        store.setStore({\n          usdPrices: priceJSON\n        });\n        return emitter.emit(USD_PRICE_RETURNED, priceJSON);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    this._getUSDPrices = async () => {\n      try {\n        const url = 'https://api.coingecko.com/api/v3/simple/price?ids=usd-coin,dai,true-usd,tether,usd-coin,chainlink,yearn-finance,binance-usd,wrapped-bitcoin,ethereum,nusd,chainlink,aave-link,lp-sbtc-curve,lp-bcurve,curve-fi-ydai-yusdc-yusdt-ytusd,lp-3pool-curve,gemini-dollar,curve-dao-token&vs_currencies=usd,eth';\n        const priceString = await rp(url);\n        const priceJSON = JSON.parse(priceString);\n        return priceJSON;\n      } catch (e) {\n        console.error(e);\n        return null;\n      }\n    };\n\n    this.getDashboardSnapshot = () => {\n      console.log(\"getDashboardSnapshot ==\");\n      emitter.on(VAULT_BALANCES_FULL_RETURNED, this._calculateDashboard);\n      emitter.on(BALANCES_LIGHT_RETURNED, this._calculateDashboard);\n      emitter.on(USD_PRICE_RETURNED, this._calculateDashboard);\n      emitter.on(STATISTICS_RETURNED, this._calculateDashboard);\n      this.getVaultBalancesFull();\n      this.getBalancesLight();\n      this.getUSDPrices();\n      this.getStatistics();\n    };\n\n    this._calculateDashboard = () => {\n      console.log(\"_calculateDashboard ==\");\n      const vaults = store.getStore('vaultAssets');\n      const assets = store.getStore('assets');\n      const prices = store.getStore('usdPrices');\n      const statistics = store.getStore('statistics');\n\n      if (vaults && vaults.length > 0 && assets && assets.length > 0 && prices !== null && statistics && statistics.length > 0) {\n        let basedOn = localStorage.getItem('yearn.finance-dashboard-basedon');\n\n        if (!basedOn) {\n          basedOn = '1';\n        } // FILTER USED VAULTS AND CALCULATE VAULT ASSET BALANCES\n\n\n        const vaultsInUse = vaults.filter(vault => {\n          if (vault.id === 'ETH') {\n            return false;\n          }\n\n          return vault.vaultBalance > 0.0001;\n        }).map(vault => {\n          let apy = 0;\n          const vaultStats = statistics.filter(stats => {\n            return stats.tokenAddress.toLowerCase() === vault.erc20address.toLowerCase();\n          });\n\n          if (vaultStats.length === 0) {\n            apy = vault.apy;\n          } else {\n            switch (basedOn) {\n              case '1':\n                apy = vaultStats[0].apyOneWeekSample;\n                break;\n\n              case '2':\n                apy = vaultStats[0].apyOneMonthSample;\n                break;\n\n              case '3':\n                apy = vaultStats[0].apyInceptionSample;\n                break;\n\n              default:\n                apy = vault.apy;\n            }\n          }\n\n          const price = prices[vault.price_id];\n          vault.prices = price;\n          vault.usdBalance = vault.vaultBalance * vault.pricePerFullShare * vault.prices.usd;\n          vault.vaultGrowth_daily_usd = vault.vaultBalance * vault.pricePerFullShare * (apy / 36500) * vault.prices.usd;\n          vault.vaultGrowth_weekly_usd = vault.vaultBalance * vault.pricePerFullShare * (apy / 5200) * vault.prices.usd;\n          vault.vaultGrowth_yearly_usd = vault.vaultBalance * vault.pricePerFullShare * apy / 100 * vault.prices.usd;\n          vault.ethBalance = vault.vaultBalance * vault.pricePerFullShare * vault.prices.eth;\n          vault.vaultGrowth_daily_eth = vault.vaultBalance * vault.pricePerFullShare * (apy / 36500) * vault.prices.eth;\n          vault.vaultGrowth_weekly_eth = vault.vaultBalance * vault.pricePerFullShare * (apy / 5200) * vault.prices.eth;\n          vault.vaultGrowth_yearly_eth = vault.vaultBalance * vault.pricePerFullShare * apy / 100 * vault.prices.eth;\n          return vault;\n        }); // CALCULATE VAULT BALANCES AND DAILY GROWTH\n\n        const vaultBalances = vaultsInUse.reduce((accumulator, vault) => {\n          accumulator.vaultBalance_usd = accumulator.vaultBalance_usd + vault.usdBalance;\n          accumulator.vaultGrowth_daily_usd = accumulator.vaultGrowth_daily_usd + vault.vaultGrowth_daily_usd;\n          accumulator.vaultGrowth_weekly_usd = accumulator.vaultGrowth_weekly_usd + vault.vaultGrowth_weekly_usd;\n          accumulator.vaultGrowth_yearly_usd = accumulator.vaultGrowth_yearly_usd + vault.vaultGrowth_yearly_usd;\n          accumulator.vaultBalance_eth = accumulator.vaultBalance_eth + vault.ethBalance;\n          accumulator.vaultGrowth_daily_eth = accumulator.vaultGrowth_daily_eth + vault.vaultGrowth_daily_eth;\n          accumulator.vaultGrowth_weekly_eth = accumulator.vaultGrowth_weekly_eth + vault.vaultGrowth_weekly_eth;\n          accumulator.vaultGrowth_yearly_eth = accumulator.vaultGrowth_yearly_eth + vault.vaultGrowth_yearly_eth;\n          return accumulator;\n        }, {\n          vaultBalance_usd: 0,\n          vaultGrowth_daily_usd: 0,\n          vaultGrowth_weekly_usd: 0,\n          vaultGrowth_yearly_usd: 0,\n          vaultBalance_eth: 0,\n          vaultGrowth_daily_eth: 0,\n          vaultGrowth_weekly_eth: 0,\n          vaultGrowth_yearly_eth: 0\n        }); // CALCULATE VAULT GROWth PERCENTAGES\n\n        const vaultGrowthDailyPerc_usd = vaultBalances.vaultGrowth_daily_usd * 100 / vaultBalances.vaultBalance_usd;\n        const vaultGrowthWeeklyPerc_usd = vaultBalances.vaultGrowth_weekly_usd * 100 / vaultBalances.vaultBalance_usd;\n        const vaultGrowthYearlyPerc_usd = vaultBalances.vaultGrowth_yearly_usd * 100 / vaultBalances.vaultBalance_usd;\n        const vaultGrowthDailyPerc_eth = vaultBalances.vaultGrowth_daily_eth * 100 / vaultBalances.vaultBalance_eth;\n        const vaultGrowthWeeklyPerc_eth = vaultBalances.vaultGrowth_weekly_eth * 100 / vaultBalances.vaultBalance_eth;\n        const vaultGrowthYearlyPerc_eth = vaultBalances.vaultGrowth_yearly_eth * 100 / vaultBalances.vaultBalance_eth; // FILTER USED EARN AND CALCULATE EARN ASSET BALANCES\n\n        const assetsInUse = assets.filter(asset => {\n          return asset.investedBalance > 0.0001;\n        }).map(asset => {\n          const price = prices[asset.price_id];\n\n          if (price == null) {// console.log(asset.price_id)\n          }\n\n          asset.prices = price;\n          asset.usdBalance = asset.investedBalance * asset.price * asset.prices.usd;\n          asset.earnGrowth_daily_usd = asset.investedBalance * asset.price * (asset.maxApr / 36500) * asset.prices.usd;\n          asset.earnGrowth_weekly_usd = asset.investedBalance * asset.price * (asset.maxApr / 5200) * asset.prices.usd;\n          asset.earnGrowth_yearly_usd = asset.investedBalance * asset.price * asset.maxApr / 100 * asset.prices.usd;\n          asset.ethBalance = asset.investedBalance * asset.price * asset.prices.eth;\n          asset.earnGrowth_daily_eth = asset.investedBalance * asset.price * (asset.maxApr / 36500) * asset.prices.eth;\n          asset.earnGrowth_weekly_eth = asset.investedBalance * asset.price * (asset.maxApr / 5200) * asset.prices.eth;\n          asset.earnGrowth_yearly_eth = asset.investedBalance * asset.price * asset.maxApr / 100 * asset.prices.eth;\n          return asset;\n        }); // CALCULATE EARN BALANCES AND DAILY GROWTH\n\n        const earnBalances = assetsInUse.reduce((accumulator, asset) => {\n          accumulator.earnBalance_usd = accumulator.earnBalance_usd + asset.usdBalance;\n          accumulator.earnGrowth_daily_usd = accumulator.earnGrowth_daily_usd + asset.earnGrowth_daily_usd;\n          accumulator.earnGrowth_weekly_usd = accumulator.earnGrowth_weekly_usd + asset.earnGrowth_weekly_usd;\n          accumulator.earnGrowth_yearly_usd = accumulator.earnGrowth_yearly_usd + asset.earnGrowth_yearly_usd;\n          accumulator.earnBalance_eth = accumulator.earnBalance_eth + asset.ethBalance;\n          accumulator.earnGrowth_daily_eth = accumulator.earnGrowth_daily_eth + asset.earnGrowth_daily_eth;\n          accumulator.earnGrowth_weekly_eth = accumulator.earnGrowth_weekly_eth + asset.earnGrowth_weekly_eth;\n          accumulator.earnGrowth_yearly_eth = accumulator.earnGrowth_yearly_eth + asset.earnGrowth_yearly_eth;\n          return accumulator;\n        }, {\n          earnBalance_usd: 0,\n          earnGrowth_daily_usd: 0,\n          earnGrowth_weekly_usd: 0,\n          earnGrowth_yearly_usd: 0,\n          earnBalance_eth: 0,\n          earnGrowth_daily_eth: 0,\n          earnGrowth_weekly_eth: 0,\n          earnGrowth_yearly_eth: 0\n        }); // CALCULATE EARN GROWth PERCENTAGES\n\n        const earnGrowthDailyPerc_usd = earnBalances.earnGrowth_daily_usd * 100 / earnBalances.earnBalance_usd;\n        const earnGrowthWeeklyPerc_usd = earnBalances.earnGrowth_weekly_usd * 100 / earnBalances.earnBalance_usd;\n        const earnGrowthYearlyPerc_usd = earnBalances.earnGrowth_yearly_usd * 100 / earnBalances.earnBalance_usd;\n        const earnGrowthDailyPerc_eth = earnBalances.earnGrowth_daily_eth * 100 / earnBalances.earnBalance_eth;\n        const earnGrowthWeeklyPerc_eth = earnBalances.earnGrowth_weekly_eth * 100 / earnBalances.earnBalance_eth;\n        const earnGrowthYearlyPerc_eth = earnBalances.earnGrowth_yearly_eth * 100 / earnBalances.earnBalance_eth; // CALCULATE PORTFOLIO (earn + vault) BALANCES\n\n        const portfolioBalance_usd = vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd;\n        const portfolioGrowthDaily_usd = vaultBalances.vaultGrowth_daily_usd + earnBalances.earnGrowth_daily_usd;\n        const portfolioGrowthWeekly_usd = vaultBalances.vaultGrowth_weekly_usd + earnBalances.earnGrowth_weekly_usd;\n        const portfolioGrowthYearly_usd = vaultBalances.vaultGrowth_yearly_usd + earnBalances.earnGrowth_yearly_usd;\n        const portfolioGrowthDailyPerc_usd = (vaultBalances.vaultGrowth_daily_usd + earnBalances.earnGrowth_daily_usd) * 100 / (vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd);\n        const portfolioGrowthWeeklyPerc_usd = (vaultBalances.vaultGrowth_weekly_usd + earnBalances.earnGrowth_weekly_usd) * 100 / (vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd);\n        const portfolioGrowthYearlyPerc_usd = (vaultBalances.vaultGrowth_yearly_usd + earnBalances.earnGrowth_yearly_usd) * 100 / (vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd);\n        const portfolioBalance_eth = vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth;\n        const portfolioGrowthDaily_eth = vaultBalances.vaultGrowth_daily_eth + earnBalances.earnGrowth_daily_eth;\n        const portfolioGrowthWeekly_eth = vaultBalances.vaultGrowth_weekly_eth + earnBalances.earnGrowth_weekly_eth;\n        const portfolioGrowthYearly_eth = vaultBalances.vaultGrowth_yearly_eth + earnBalances.earnGrowth_yearly_eth;\n        const portfolioGrowthDailyPerc_eth = (vaultBalances.vaultGrowth_daily_eth + earnBalances.earnGrowth_daily_eth) * 100 / (vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth);\n        const portfolioGrowthWeeklyPerc_eth = (vaultBalances.vaultGrowth_weekly_eth + earnBalances.earnGrowth_weekly_eth) * 100 / (vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth);\n        const portfolioGrowthYearlyPerc_eth = (vaultBalances.vaultGrowth_yearly_eth + earnBalances.earnGrowth_yearly_eth) * 100 / (vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth);\n        let dashboard = {\n          vault_balance_usd: vaultBalances.vaultBalance_usd,\n          vault_growth_usd_daily: vaultBalances.vaultGrowth_daily_usd,\n          vault_growth_usd_weekly: vaultBalances.vaultGrowth_weekly_usd,\n          vault_growth_usd_yearly: vaultBalances.vaultGrowth_yearly_usd,\n          vault_growth_usd_daily_perc: vaultGrowthDailyPerc_usd,\n          vault_growth_usd_weekly_perc: vaultGrowthWeeklyPerc_usd,\n          vault_growth_usd_yearly_perc: vaultGrowthYearlyPerc_usd,\n          vault_balance_eth: vaultBalances.vaultBalance_eth,\n          vault_growth_eth_daily: vaultBalances.vaultGrowth_daily_eth,\n          vault_growth_eth_weekly: vaultBalances.vaultGrowth_weekly_eth,\n          vault_growth_eth_yearly: vaultBalances.vaultGrowth_yearly_eth,\n          vault_growth_eth_daily_perc: vaultGrowthDailyPerc_eth,\n          vault_growth_eth_weekly_perc: vaultGrowthWeeklyPerc_eth,\n          vault_growth_eth_yearly_perc: vaultGrowthYearlyPerc_eth,\n          earn_balance_usd: earnBalances.earnBalance_usd,\n          earn_growth_usd_daily: earnBalances.earnGrowth_daily_usd,\n          earn_growth_usd_weekly: earnBalances.earnGrowth_weekly_usd,\n          earn_growth_usd_yearly: earnBalances.earnGrowth_yearly_usd,\n          earn_growth_usd_daily_perc: earnGrowthDailyPerc_usd,\n          earn_growth_usd_weekly_perc: earnGrowthWeeklyPerc_usd,\n          earn_growth_usd_yearly_perc: earnGrowthYearlyPerc_usd,\n          earn_balance_eth: earnBalances.earnBalance_eth,\n          earn_growth_eth_daily: earnBalances.earnGrowth_daily_eth,\n          earn_growth_eth_weekly: earnBalances.earnGrowth_weekly_eth,\n          earn_growth_eth_yearly: earnBalances.earnGrowth_yearly_eth,\n          earn_growth_eth_daily_perc: earnGrowthDailyPerc_eth,\n          earn_growth_eth_weekly_perc: earnGrowthWeeklyPerc_eth,\n          earn_growth_eth_yearly_perc: earnGrowthYearlyPerc_eth,\n          portfolio_balance_usd: portfolioBalance_usd,\n          portfolio_growth_usd_daily: portfolioGrowthDaily_usd,\n          portfolio_growth_usd_weekly: portfolioGrowthWeekly_usd,\n          portfolio_growth_usd_yearly: portfolioGrowthYearly_usd,\n          portfolio_growth_usd_daily_perc: portfolioGrowthDailyPerc_usd,\n          portfolio_growth_usd_weekly_perc: portfolioGrowthWeeklyPerc_usd,\n          portfolio_growth_usd_yearly_perc: portfolioGrowthYearlyPerc_usd,\n          portfolio_balance_eth: portfolioBalance_eth,\n          portfolio_growth_eth_daily: portfolioGrowthDaily_eth,\n          portfolio_growth_eth_weekly: portfolioGrowthWeekly_eth,\n          portfolio_growth_eth_yearly: portfolioGrowthYearly_eth,\n          portfolio_growth_eth_daily_perc: portfolioGrowthDailyPerc_eth,\n          portfolio_growth_eth_weekly_perc: portfolioGrowthWeeklyPerc_eth,\n          portfolio_growth_eth_yearly_perc: portfolioGrowthYearlyPerc_eth,\n          vaults: vaultsInUse,\n          assets: assetsInUse,\n          statistics: statistics\n        };\n        store.setStore({\n          dashboard: dashboard\n        });\n        emitter.emit(DASHBOARD_SNAPSHOT_RETURNED, dashboard);\n      }\n    };\n\n    this.getStatistics = async () => {\n      try {\n        const statistics = await this._getStatistics();\n        store.setStore({\n          statistics: statistics\n        });\n        emitter.emit(STATISTICS_RETURNED, statistics);\n      } catch (e) {\n        console.error(e);\n        return store.getStore('universalGasPrice');\n      }\n    };\n\n    this._getStatistics = async () => {\n      try {\n        const url = config.statsProvider + 'vaults/apy';\n        const statisticsString = await rp(url);\n        const statistics = JSON.parse(statisticsString);\n        return statistics;\n      } catch (e) {\n        console.error(e);\n        return store.getStore('universalGasPrice');\n      }\n    };\n\n    this._getAddressStatistics = async address => {\n      try {\n        const url = config.statsProvider + 'user/' + address + '/vaults/statistics';\n        const statisticsString = await rp(url);\n        const statistics = JSON.parse(statisticsString);\n        return statistics;\n      } catch (e) {\n        console.error(e);\n        return store.getStore('universalGasPrice');\n      }\n    };\n\n    this._getAddressTxHistory = async address => {\n      try {\n        const url = config.statsProvider + 'user/' + address + '/vaults/transactions';\n        const statisticsString = await rp(url);\n        const statistics = JSON.parse(statisticsString);\n        return statistics;\n      } catch (e) {\n        console.error(e);\n        return store.getStore('universalGasPrice');\n      }\n    };\n\n    this._getGasPrice = async () => {\n      try {\n        const url = \"https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=SQDE7E4HMPT3J4DECSY4IZ3HP1PC4MANB7\"; // const url = 'https://gasprice.poa.network/'\n\n        const priceString = await rp(url);\n        const priceJSON = JSON.parse(priceString);\n\n        if (priceJSON) {\n          return priceJSON.SafeGasPrice.toFixed(0);\n        }\n\n        return store.getStore('universalGasPrice');\n      } catch (e) {\n        console.error(e);\n        return store.getStore('universalGasPrice');\n      }\n    };\n\n    this._getWeb3Provider = async () => {\n      const web3context = store.getStore('web3context');\n\n      if (!web3context) {\n        return null;\n      }\n\n      const provider = web3context.library.provider;\n\n      if (!provider) {\n        return null;\n      }\n\n      const web3 = new Web3(provider); // const web3 = createAlchemyWeb3(config.infuraProvider, { writeProvider: provider });\n\n      return web3;\n    };\n\n    this._getExperimentalVaultClaimable = async (web3, asset, account, callback) => {\n      try {\n        let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n        let balance = await vaultContract.methods.claimable(account.address).call({\n          from: account.address\n        });\n        balance = parseFloat(balance) / 10 ** asset.decimals;\n        callback(null, parseFloat(balance));\n      } catch (ex) {\n        callback(null, 0);\n      }\n    };\n\n    this._getExperimentalVaultVested = async (web3, asset, account, callback) => {\n      try {\n        let vaultContract = new web3.eth.Contract(asset.vestingContractABI, asset.vestingContractAddress);\n        let balance = await vaultContract.methods.balanceOf(account.address).call({\n          from: account.address\n        });\n        balance = parseFloat(balance) / 10 ** asset.decimals;\n        callback(null, parseFloat(balance));\n      } catch (ex) {\n        callback(null, 0);\n      }\n    };\n\n    this._getExperimentalVaultGauges = async (web3, asset, account, callback) => {\n      const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\n\n      try {\n        const curveRegistryContract = new web3.eth.Contract(config.curveRegistryContractABI, config.curveRegistryContractAddress);\n        const poolCount = await curveRegistryContract.methods.pool_count().call(); // console.log(poolCount)\n\n        const pools = await Promise.all([...Array(parseInt(poolCount)).keys()].map(i => curveRegistryContract.methods.pool_list(i).call())); // console.log(pools)\n\n        const resp = await Promise.all(pools.map(pool => curveRegistryContract.methods.get_gauges(pool).call())); // console.log(resp)\n\n        let gauges = [];\n\n        for (let x of resp) gauges.push(...x[0]);\n\n        gauges = gauges.filter(gauge => gauge !== ZERO_ADDRESS);\n        let balances = await Promise.all(gauges.map(this._gagueClaimable));\n        let userGauges = gauges.filter((gauge, i) => {\n          return balances[i] > 0;\n        });\n\n        while (userGauges.length < 20) userGauges.push(ZERO_ADDRESS);\n\n        const gaugeBalance = balances.reduce((prev, curr) => {\n          return curr + prev;\n        }); // console.log(gaugeBalance)\n        // console.log(userGauges)\n\n        callback(null, {\n          gaugeBalance: gaugeBalance,\n          userGauges: userGauges\n        });\n      } catch (ex) {\n        console.error(ex);\n        const emptyGauges = [];\n\n        while (emptyGauges.length < 20) emptyGauges.push(ZERO_ADDRESS);\n\n        callback(null, {\n          gaugeBalance: 0,\n          userGauges: emptyGauges\n        });\n      }\n    };\n\n    this._gagueClaimable = async gauge => {\n      const web3 = await this._getWeb3Provider();\n      const account = store.getStore('account');\n      const contract = new web3.eth.Contract(config.curveGaugeContractABI, gauge);\n      let balance = await contract.methods.claimable_tokens(account.address).call();\n      return parseFloat(web3.utils.fromWei(balance, \"ether\"));\n    };\n\n    this.depositExperimentalVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset,\n        amount\n      } = payload.content;\n\n      this._checkApproval(asset, account, amount, asset.vaultContractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callDepositExperimentalVault(asset, account, amount, (err, depositResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(DEPOSIT_EXPERIMENTAL_VAULT_RETURNED, depositResult);\n        });\n      });\n    };\n\n    this._callDepositExperimentalVault = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n      if (asset.decimals !== 18) {\n        amountToSend = amount * 10 ** asset.decimals;\n      }\n\n      vaultContract.methods.deposit(amountToSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.depositAllExperimentalVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset\n      } = payload.content;\n\n      this._checkApproval(asset, account, asset.balance, asset.vaultContractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callDepositAllExperimentalVault(asset, account, (err, depositResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(DEPOSIT_ALL_EXPERIMENTAL_VAULT_RETURNED, depositResult);\n        });\n      });\n    };\n\n    this._callDepositAllExperimentalVault = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      vaultContract.methods.depositAll().send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.claimExperimentalVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset\n      } = payload.content;\n\n      this._callClaimExperimentalVault(asset, account, (err, claimResult) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(CLAIM_EXPERIMENTAL_VAULT_RETURNED, claimResult);\n      });\n    };\n\n    this._callClaimExperimentalVault = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      vaultContract.methods.claim().send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.zapExperimentalVault = payload => {\n      const account = store.getStore('account');\n      const {\n        asset\n      } = payload.content;\n\n      this._checkApproval(asset, account, asset.balance, asset.zapContractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._checkCurveMintApproval(asset, account, asset.zapContractAddress, err => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          this._callZapExperimentalVault(asset, account, (err, depositResult) => {\n            if (err) {\n              return emitter.emit(ERROR, err);\n            }\n\n            return emitter.emit(ZAP_EXPERIMENTAL_VAULT_RETURNED, depositResult);\n          });\n        });\n      });\n    };\n\n    this._callZapExperimentalVault = async (asset, account, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let zapContract = new web3.eth.Contract(asset.zapContractABI, asset.zapContractAddress); // console.log(asset.gauges)\n\n      zapContract.methods.zap(asset.gauges).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        // console.log(hash)\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {// console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {// console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this.store = {\n      farmingDashBoard: {\n        depositsInAries: 0,\n        marketCap: 0,\n        AFIPrice: 0,\n        AFIStakingAPY: 0,\n        AFIStaked: 0,\n        AFIPooled: 0\n      },\n      statistics: [],\n      universalGasPrice: '60',\n      ethPrice: 0,\n      dashboard: this._getDefaultValues().dashboard,\n      aprs: this._getDefaultValues().aprs,\n      assets: this._getDefaultValues().assets,\n      vaultAssets: this._getDefaultValues().vaultAssets,\n      usdPrices: null,\n      account: {},\n      web3: null,\n      pricePerFullShare: 0,\n      yields: [],\n      aggregatedYields: [],\n      aggregatedHeaders: [],\n      uniswapYields: [],\n      uniswapLiquidity: [],\n      events: [],\n      connectorsByName: {\n        MetaMask: injected,\n        TrustWallet: injected,\n        WalletConnect: walletconnect,\n        WalletLink: walletlink,\n        Ledger: ledger,\n        Trezor: trezor,\n        Frame: frame,\n        Fortmatic: fortmatic,\n        Portis: portis,\n        Squarelink: squarelink,\n        Torus: torus,\n        Authereum: authereum\n      },\n      web3context: null,\n      curvBalance: 0,\n      curveContracts: [{\n        id: 'crvV1',\n        symbol: 'compound.curve.fi',\n        version: 1,\n        erc20address: '0x3740fb63ab7a09891d7c0d4299442a551d06f5fd',\n        decimals: 18,\n        balance: 0\n      }, {\n        id: 'crvV2',\n        symbol: 'usdt.curve.fi',\n        version: 2,\n        erc20address: '0x9fc689ccada600b6df723d9e47d84d76664a1f23',\n        decimals: 18,\n        balance: 0\n      }, {\n        id: 'crvV3',\n        symbol: 'y.curve.fi',\n        version: 3,\n        erc20address: '0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8',\n        decimals: 18,\n        balance: 0\n      }, {\n        id: 'crvV4',\n        symbol: 'busd.curve.fi',\n        version: 4,\n        erc20address: '0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B',\n        decimals: 18,\n        balance: 0\n      }],\n      insuranceAssets: [{\n        id: 'oCurve.fi',\n        symbol: '$Curve.fi',\n        insuredSymbol: 'oCRV',\n        name: 'oCurve.fi',\n        description: 'yDAI/yUSDC/yUSDT/yTUSD',\n        erc20address: '0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8',\n        insuranceAddress: '0x4BA8C6Ce0e855C051e65DfC37883360efAf7c82B',\n        insuranceABI: config.insuranceABI,\n        uniswapInsuranceAddress: '0x21f5e9d4ec20571402a5396084b1634314a68c97',\n        uniswapInsuranceABI: config.uniswapInsuranceABI,\n        decimals: 18,\n        insuredDecimals: 15,\n        balance: 0,\n        insuredBalance: 0,\n        apr: 0,\n        insuredApr: 0,\n        pricePerInsurance: 0,\n        tokenPrice: 0\n      }],\n      ethBalance: 0,\n      sCrvBalance: 0\n    };\n    dispatcher.register(function (payload) {\n      // console.log(payload, \"payload ==\");\n      switch (payload.type) {\n        case GET_BALANCES_LIGHT:\n          this.getBalancesLight(payload);\n          break;\n\n        case GET_BALANCES:\n          this.getBalances(payload);\n          break;\n\n        case INVEST:\n          this.invest(payload);\n          break;\n\n        case REDEEM:\n          this.redeem(payload);\n          break;\n\n        case REBALANCE:\n          this.rebalance(payload);\n          break;\n\n        case DONATE:\n          this.donate(payload);\n          break;\n\n        case GET_AGGREGATED_YIELD:\n          this.getAPR(payload);\n          break;\n\n        case GET_CONTRACT_EVENTS:\n          this.getContractEvents(payload);\n          break;\n\n        case ZAP:\n          this.zap(payload);\n          break;\n\n        case IDAI:\n          this.idai(payload);\n          break;\n\n        case SWAP:\n          this.swap(payload);\n          break;\n\n        case TRADE:\n          this.trade(payload);\n          break;\n\n        case GET_CURV_BALANCE:\n          this.getCurveBalances(payload);\n          break;\n\n        case GET_BEST_PRICE:\n          this.getBestPrice(payload);\n          break;\n\n        case GET_VAULT_BALANCES:\n          this.getVaultBalances(payload);\n          break;\n\n        case GET_VAULT_BALANCES_FULL:\n          this.getVaultBalancesFull(payload);\n          break;\n\n        case DEPOSIT_VAULT:\n          this.depositVault(payload);\n          break;\n\n        case DEPOSIT_ALL_VAULT:\n          this.depositAllVault(payload);\n          break;\n\n        case WITHDRAW_VAULT:\n          this.withdrawVault(payload);\n          break;\n\n        case WITHDRAW_ALL_VAULT:\n          this.withdrawAllVault(payload);\n          break;\n\n        case GET_DASHBOARD_SNAPSHOT:\n          this.getDashboardSnapshot();\n          break;\n\n        case GET_STATISTICS:\n          this.getStatistics(payload);\n          break;\n\n        case DEPOSIT_EXPERIMENTAL_VAULT:\n          this.depositExperimentalVault(payload);\n          break;\n\n        case DEPOSIT_ALL_EXPERIMENTAL_VAULT:\n          this.depositAllExperimentalVault(payload);\n          break;\n\n        case CLAIM_EXPERIMENTAL_VAULT:\n          this.claimExperimentalVault(payload);\n          break;\n\n        case ZAP_EXPERIMENTAL_VAULT:\n          this.zapExperimentalVault(payload);\n          break;\n\n        default: // console.log(\"Do nothing\", \"==\");\n\n      }\n    }.bind(this));\n  }\n\n  getStore(index) {\n    return this.store[index];\n  }\n\n  setStore(obj) {\n    this.store = { ...this.store,\n      ...obj\n    }; // console.log(this.store)\n\n    return emitter.emit('StoreUpdated');\n  }\n\n}\n\nconst store = StoreExtension(new Store(), dispatcher); // const store = new Store();\n\nexport default {\n  store: store,\n  dispatcher: dispatcher,\n  emitter: emitter\n};","map":{"version":3,"sources":["/Users/waltorhuang/cookbook/javascript/aries-financial-web/src/stores/store.jsx"],"names":["config","rewardconfig","async","ERROR","GET_BALANCES","BALANCES_RETURNED","GET_BALANCES_LIGHT","BALANCES_LIGHT_RETURNED","GET_VAULT_BALANCES_FULL","VAULT_BALANCES_FULL_RETURNED","INVEST","INVEST_RETURNED","REDEEM","REDEEM_RETURNED","REBALANCE","REBALANCE_RETURNED","DONATE","DONATE_RETURNED","GET_AGGREGATED_YIELD","GET_AGGREGATED_YIELD_RETURNED","GET_CONTRACT_EVENTS","GET_CONTRACT_EVENTS_RETURNED","ZAP","ZAP_RETURNED","IDAI","IDAI_RETURNED","SWAP","SWAP_RETURNED","TRADE","TRADE_RETURNED","GET_CURV_BALANCE","GET_CURV_BALANCE_RETURNED","GET_BEST_PRICE","GET_BEST_PRICE_RETURNED","GET_VAULT_BALANCES","VAULT_BALANCES_RETURNED","DEPOSIT_VAULT","DEPOSIT_VAULT_RETURNED","DEPOSIT_ALL_VAULT","DEPOSIT_ALL_VAULT_RETURNED","WITHDRAW_VAULT","WITHDRAW_VAULT_RETURNED","WITHDRAW_ALL_VAULT","WITHDRAW_ALL_VAULT_RETURNED","GET_DASHBOARD_SNAPSHOT","DASHBOARD_SNAPSHOT_RETURNED","USD_PRICE_RETURNED","GET_STATISTICS","STATISTICS_RETURNED","EXPERIMENTAL_VAULT_BALANCES_FULL_RETURNED","DEPOSIT_EXPERIMENTAL_VAULT","DEPOSIT_EXPERIMENTAL_VAULT_RETURNED","DEPOSIT_ALL_EXPERIMENTAL_VAULT","DEPOSIT_ALL_EXPERIMENTAL_VAULT_RETURNED","CLAIM_EXPERIMENTAL_VAULT","CLAIM_EXPERIMENTAL_VAULT_RETURNED","ZAP_EXPERIMENTAL_VAULT","ZAP_EXPERIMENTAL_VAULT_RETURNED","Web3","injected","walletconnect","walletlink","ledger","trezor","frame","fortmatic","portis","squarelink","torus","authereum","StoreExtension","Decimal","rp","require","ethers","Dispatcher","Emitter","EventEmitter","dispatcher","emitter","totalAFIReward","Store","constructor","_getDefaultValues","assets","id","name","symbol","description","investSymbol","erc20address","iEarnContract","maxApr","balance","investedBalance","decimals","price","poolValue","abi","IEarnErc20ABIv2","version","disabled","invest","redeem","curve","price_id","apr","lastMeasurement","measurement","IEarnERC20ABI","tokenSymbol","IEarnABI","idai","vaultAssets","pool_identifier","vaultSymbol","vaultContractAddress","vaultContractABI","vaultContractV3ABI","vaultBalance","rewardBalance","ariesAPY","stakedBalance","afiPrice","liquidityLock","rewardAvailable","rewardDecimals","deposit","depositAll","withdraw","withdrawAll","rewardsAddress","afidaipoolAddress","rewardsABI","afidaipoolABI","afusdcpoolAddress","afusdcpoolABI","afusdtpoolAddress","afusdtpoolABI","aprs","token","address","earnAddress","mod","created","dashboard","vault_balance_usd","vault_growth_usd_daily","vault_growth_usd_weekly","vault_growth_usd_yearly","vault_growth_usd_daily_perc","vault_growth_usd_weekly_perc","vault_growth_usd_yearly_perc","vault_balance_eth","vault_growth_eth_daily","vault_growth_eth_weekly","vault_growth_eth_yearly","vault_growth_eth_daily_perc","vault_growth_eth_weekly_perc","vault_growth_eth_yearly_perc","earn_balance_usd","earn_growth_usd_daily","earn_growth_usd_weekly","earn_growth_usd_yearly","earn_growth_usd_daily_perc","earn_growth_usd_weekly_perc","earn_growth_usd_yearly_perc","earn_balance_eth","earn_growth_eth_daily","earn_growth_eth_weekly","earn_growth_eth_yearly","earn_growth_eth_daily_perc","earn_growth_eth_weekly_perc","earn_growth_eth_yearly_perc","portfolio_balance_usd","portfolio_growth_usd_daily","portfolio_growth_usd_weekly","portfolio_growth_usd_yearly","portfolio_growth_usd_daily_perc","portfolio_growth_usd_weekly_perc","portfolio_growth_usd_yearly_perc","portfolio_balance_eth","portfolio_growth_eth_daily","portfolio_growth_eth_weekly","portfolio_growth_eth_yearly","portfolio_growth_eth_daily_perc","portfolio_growth_eth_weekly_perc","portfolio_growth_eth_yearly_perc","payload","account","store","getStore","asset","amount","content","_checkApproval","err","emit","_callInvest","investResult","_checkApprovalForProxy","contract","callback","web3","library","provider","vaultContract","eth","Contract","allowance","methods","call","from","ethAllowance","utils","fromWei","parseFloat","approve","toWei","send","gasPrice","_getGasPrice","error","message","_checkCurveMintApproval","curveContracts","minterContractABI","minterContractAddress","allowedToMintFor","allowed_to_mint_for","toggle_approve_mint","erc20Contract","erc20ABI","toFixed","amountToSend","includes","_checkApprovalWaitForConfirmation","on","hash","toString","value","confirmationNumber","receipt","catch","rebalance","_callRebalance","result","donate","_callDonate","amountSend","Math","round","transfer","_callRedeem","redeemResult","getBalancesLight","_getWeb3Provider","map","parallel","callbackInner","_getERC20Balance","_getInvestedBalance","_getPoolPrice","_getMaxAPR","data","setStore","_getStakedBalance","balanceOf","e","_getAriesAPY","propertyName","filter","toReturn","length","_getLiquidityLock","_setDataIntoFarmingDashBoard","farmingDashBoard","depositsInAries","marketCap","AFIPrice","AFIStakingAPY","AFIStaked","AFIPooled","poolsInfo","console","log","forEach","index","arr","liquidity_lock","apy","_getAriesAPYs","response","fetch","apiURLProvider","then","r","json","_getAriesPrice","_getRewards","earned","getBalances","_getPoolValue","_getAPY","_getCurrentLender","_getRecommendedLender","_getBalance","current","recommended","tokenBalance","eth_balance","getBalance","ex","block","getBlockNumber","earn","getPricePerFullShare","diff","recommend","calcPoolValueInETH","calcPoolValueInToken","aprContract","crvContractABI","crvAddress","aggregatedContractABI","aggregatedContractAddress","keys","Object","workKeys","key","isNaN","max","apply","o","getAPR","providers","HttpProvider","infuraProvider","_getAPR","yields","headers","aggregatedYields","aggregatedHeaders","aprContractABI","aprContractAddress","val","vals","obj","output","i","iearn","_getAggregatedYield","uniswapContract","replace","getContractEvents","getPastEvents","fromBlock","toBlock","res","sorted","sort","a","b","blockNumber","tx","event","returnValues","rawTx","_getTransaction","transactionHash","iEth","ethRatio","Promise","all","transactions","pricePerFullShare","_getPricePerFullShare","trxs","_getIEthBalance","ethRedeem","growth","txs","events","getTransaction","swap","sendAsset","yCurveZapSwapContract","yCurveZapSwapAddress","yCurveZapSwapV4Address","_callSwap","swapResult","yCurveZapSwapABI","yCurveZapSwapV4ABI","getBestPrice","receiveAsset","_getBestPrice","url","toLowerCase","JSON","parse","trade","_callTrade","tradeResult","_getDexAgTrade","_sendTrade","_approveToken","spender","funcHash","hexDataSlice","AbiCoder","inputs","type","params","bytes","encode","substr","inputData","nonce","getTransactionCount","transaction","to","gasLimit","sendTransaction","Number","zap","contractAddress","yCurveZapAddress","yCurveZapV4Address","yCurveZapOutAddress","yCurveZapOutV4Address","_callZap","zapResult","yCurveZapContract","yCurveZapABI","yCurveZapV4ABI","yCurveZapOutABI","yCurveZapOutV4ABI","iDAIZapSwapAddress","_callIDAI","iDAIZapSwapContract","iDAIZapSwapABI","getCurveBalances","curv","getVaultBalancesFull","vaultStatistics","_getStatistics","addressStatistics","_getAddressStatistics","addressTXHitory","_getAddressTxHistory","usdPrices","_getUSDPrices","_getVaultBalance","_getStrategy","_getStatsAPY","_getVaultHoldings","_getAssetUSDPrices","_getVaultAPY","_getAddressStats","_getAddressTransactions","strategy","strategyHoldings","holdings","strategyName","stats","vaultHoldings","usdPrice","addressTransactions","returnObj","usd","statsProvider","vaultsApiResultString","vaults","vault","find","strategyAddress","strategyContract","vaultStrategyABI","tokenAddress","vaultAddress","getVaultBalances","_getVaultPricePerShare","depositVault","_callDepositVault","depositResult","_checkIfApprovalIsNeeded","_callApproval","last","depositETH","depositAllVault","_callDepositAllVault","withdrawVault","yVaultCheckAddress","yVaultCheckDisabled","_callWithdrawVaultProxy","withdrawResult","_callWithdrawVault","yVaultCheckContract","yVaultCheckABI","functionCall","withdrawETH","withdrawAllVault","_callWithdrawAllVaultProxy","_callWithdrawAllVault","withdrawAllETH","getUSDPrices","priceJSON","priceString","getDashboardSnapshot","_calculateDashboard","getStatistics","prices","statistics","basedOn","localStorage","getItem","vaultsInUse","vaultStats","apyOneWeekSample","apyOneMonthSample","apyInceptionSample","usdBalance","vaultGrowth_daily_usd","vaultGrowth_weekly_usd","vaultGrowth_yearly_usd","ethBalance","vaultGrowth_daily_eth","vaultGrowth_weekly_eth","vaultGrowth_yearly_eth","vaultBalances","reduce","accumulator","vaultBalance_usd","vaultBalance_eth","vaultGrowthDailyPerc_usd","vaultGrowthWeeklyPerc_usd","vaultGrowthYearlyPerc_usd","vaultGrowthDailyPerc_eth","vaultGrowthWeeklyPerc_eth","vaultGrowthYearlyPerc_eth","assetsInUse","earnGrowth_daily_usd","earnGrowth_weekly_usd","earnGrowth_yearly_usd","earnGrowth_daily_eth","earnGrowth_weekly_eth","earnGrowth_yearly_eth","earnBalances","earnBalance_usd","earnBalance_eth","earnGrowthDailyPerc_usd","earnGrowthWeeklyPerc_usd","earnGrowthYearlyPerc_usd","earnGrowthDailyPerc_eth","earnGrowthWeeklyPerc_eth","earnGrowthYearlyPerc_eth","portfolioBalance_usd","portfolioGrowthDaily_usd","portfolioGrowthWeekly_usd","portfolioGrowthYearly_usd","portfolioGrowthDailyPerc_usd","portfolioGrowthWeeklyPerc_usd","portfolioGrowthYearlyPerc_usd","portfolioBalance_eth","portfolioGrowthDaily_eth","portfolioGrowthWeekly_eth","portfolioGrowthYearly_eth","portfolioGrowthDailyPerc_eth","portfolioGrowthWeeklyPerc_eth","portfolioGrowthYearlyPerc_eth","statisticsString","SafeGasPrice","web3context","_getExperimentalVaultClaimable","claimable","_getExperimentalVaultVested","vestingContractABI","vestingContractAddress","_getExperimentalVaultGauges","ZERO_ADDRESS","curveRegistryContract","curveRegistryContractABI","curveRegistryContractAddress","poolCount","pool_count","pools","Array","parseInt","pool_list","resp","pool","get_gauges","gauges","x","push","gauge","balances","_gagueClaimable","userGauges","gaugeBalance","prev","curr","emptyGauges","curveGaugeContractABI","claimable_tokens","depositExperimentalVault","_callDepositExperimentalVault","depositAllExperimentalVault","_callDepositAllExperimentalVault","claimExperimentalVault","_callClaimExperimentalVault","claimResult","claim","zapExperimentalVault","zapContractAddress","_callZapExperimentalVault","zapContract","zapContractABI","universalGasPrice","ethPrice","uniswapYields","uniswapLiquidity","connectorsByName","MetaMask","TrustWallet","WalletConnect","WalletLink","Ledger","Trezor","Frame","Fortmatic","Portis","Squarelink","Torus","Authereum","curvBalance","insuranceAssets","insuredSymbol","insuranceAddress","insuranceABI","uniswapInsuranceAddress","uniswapInsuranceABI","insuredDecimals","insuredBalance","insuredApr","pricePerInsurance","tokenPrice","sCrvBalance","register","bind"],"mappings":"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","sourcesContent":["import config from \"../config\";\nimport { config as rewardconfig } from \"../config/example.config.extension\";\nimport async from 'async';\nimport {\n  ERROR,\n  GET_BALANCES,\n  BALANCES_RETURNED,\n  GET_BALANCES_LIGHT,\n  BALANCES_LIGHT_RETURNED,\n  GET_VAULT_BALANCES_FULL,\n  VAULT_BALANCES_FULL_RETURNED,\n  INVEST,\n  INVEST_RETURNED,\n  REDEEM,\n  REDEEM_RETURNED,\n  REBALANCE,\n  REBALANCE_RETURNED,\n  DONATE,\n  DONATE_RETURNED,\n  GET_AGGREGATED_YIELD,\n  GET_AGGREGATED_YIELD_RETURNED,\n  GET_CONTRACT_EVENTS,\n  GET_CONTRACT_EVENTS_RETURNED,\n  ZAP,\n  ZAP_RETURNED,\n  IDAI,\n  IDAI_RETURNED,\n  SWAP,\n  SWAP_RETURNED,\n  TRADE,\n  TRADE_RETURNED,\n  GET_CURV_BALANCE,\n  GET_CURV_BALANCE_RETURNED,\n  GET_BEST_PRICE,\n  GET_BEST_PRICE_RETURNED,\n  GET_VAULT_BALANCES,\n  VAULT_BALANCES_RETURNED,\n  DEPOSIT_VAULT,\n  DEPOSIT_VAULT_RETURNED,\n  DEPOSIT_ALL_VAULT,\n  DEPOSIT_ALL_VAULT_RETURNED,\n  WITHDRAW_VAULT,\n  WITHDRAW_VAULT_RETURNED,\n  WITHDRAW_ALL_VAULT,\n  WITHDRAW_ALL_VAULT_RETURNED,\n  GET_DASHBOARD_SNAPSHOT,\n  DASHBOARD_SNAPSHOT_RETURNED,\n  USD_PRICE_RETURNED,\n  GET_STATISTICS,\n  STATISTICS_RETURNED,\n  EXPERIMENTAL_VAULT_BALANCES_FULL_RETURNED,\n  DEPOSIT_EXPERIMENTAL_VAULT,\n  DEPOSIT_EXPERIMENTAL_VAULT_RETURNED,\n  DEPOSIT_ALL_EXPERIMENTAL_VAULT,\n  DEPOSIT_ALL_EXPERIMENTAL_VAULT_RETURNED,\n  CLAIM_EXPERIMENTAL_VAULT,\n  CLAIM_EXPERIMENTAL_VAULT_RETURNED,\n  ZAP_EXPERIMENTAL_VAULT,\n  ZAP_EXPERIMENTAL_VAULT_RETURNED\n} from '../constants';\nimport Web3 from 'web3';\n\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  ledger,\n  trezor,\n  frame,\n  fortmatic,\n  portis,\n  squarelink,\n  torus,\n  authereum\n} from \"./connectors\";\nimport {StoreExtension} from \"./store-extension\";\nimport Decimal from \"decimal.js\";\n\nconst rp = require('request-promise');\nconst ethers = require('ethers');\n\nconst Dispatcher = require('flux').Dispatcher;\nconst Emitter = require('events').EventEmitter;\n\nconst dispatcher = new Dispatcher();\nconst emitter = new Emitter();\n\nconst totalAFIReward = 202021;\nclass Store {\n  constructor() {\n\n    this.store = {\n      farmingDashBoard: {\n        depositsInAries: 0,\n        marketCap: 0,\n        AFIPrice:0,\n        AFIStakingAPY:0,\n        AFIStaked:0,\n        AFIPooled:0,\n      },\n      statistics: [],\n      universalGasPrice: '60',\n      ethPrice: 0,\n      dashboard: this._getDefaultValues().dashboard,\n      aprs: this._getDefaultValues().aprs,\n      assets: this._getDefaultValues().assets,\n      vaultAssets: this._getDefaultValues().vaultAssets,\n      usdPrices: null,\n      account: {},\n      web3: null,\n      pricePerFullShare: 0,\n      yields: [],\n      aggregatedYields: [],\n      aggregatedHeaders: [],\n      uniswapYields: [],\n      uniswapLiquidity: [],\n      events: [],\n      connectorsByName: {\n        MetaMask: injected,\n        TrustWallet: injected,\n        WalletConnect: walletconnect,\n        WalletLink: walletlink,\n        Ledger: ledger,\n        Trezor: trezor,\n        Frame: frame,\n        Fortmatic: fortmatic,\n        Portis: portis,\n        Squarelink: squarelink,\n        Torus: torus,\n        Authereum: authereum\n      },\n      web3context: null,\n      curvBalance: 0,\n      curveContracts: [\n        {\n          id: 'crvV1',\n          symbol: 'compound.curve.fi',\n          version: 1,\n          erc20address: '0x3740fb63ab7a09891d7c0d4299442a551d06f5fd',\n          decimals: 18,\n          balance: 0\n        },\n        {\n          id: 'crvV2',\n          symbol: 'usdt.curve.fi',\n          version: 2,\n          erc20address: '0x9fc689ccada600b6df723d9e47d84d76664a1f23',\n          decimals: 18,\n          balance: 0\n        },\n        {\n          id: 'crvV3',\n          symbol: 'y.curve.fi',\n          version: 3,\n          erc20address: '0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8',\n          decimals: 18,\n          balance: 0\n        },\n        {\n          id: 'crvV4',\n          symbol: 'busd.curve.fi',\n          version: 4,\n          erc20address: '0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B',\n          decimals: 18,\n          balance: 0\n        }\n      ],\n      insuranceAssets: [\n        {\n          id: 'oCurve.fi',\n          symbol: '$Curve.fi',\n          insuredSymbol: 'oCRV',\n          name: 'oCurve.fi',\n          description: 'yDAI/yUSDC/yUSDT/yTUSD',\n          erc20address: '0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8',\n          insuranceAddress: '0x4BA8C6Ce0e855C051e65DfC37883360efAf7c82B',\n          insuranceABI:  config.insuranceABI,\n          uniswapInsuranceAddress: '0x21f5e9d4ec20571402a5396084b1634314a68c97',\n          uniswapInsuranceABI: config.uniswapInsuranceABI,\n          decimals: 18,\n          insuredDecimals: 15,\n          balance: 0,\n          insuredBalance: 0,\n          apr: 0,\n          insuredApr: 0,\n          pricePerInsurance: 0,\n          tokenPrice: 0\n        }\n      ],\n      ethBalance: 0,\n      sCrvBalance:  0\n    }\n\n    dispatcher.register(\n        function (payload) {\n          // console.log(payload, \"payload ==\");\n          switch (payload.type) {\n            case GET_BALANCES_LIGHT:\n              this.getBalancesLight(payload);\n              break;\n            case GET_BALANCES:\n              this.getBalances(payload);\n              break;\n            case INVEST:\n              this.invest(payload)\n              break;\n            case REDEEM:\n              this.redeem(payload)\n              break;\n            case REBALANCE:\n              this.rebalance(payload)\n              break;\n            case DONATE:\n              this.donate(payload)\n              break;\n            case GET_AGGREGATED_YIELD:\n              this.getAPR(payload)\n              break;\n            case GET_CONTRACT_EVENTS:\n              this.getContractEvents(payload)\n              break;\n            case ZAP:\n              this.zap(payload)\n              break;\n            case IDAI:\n              this.idai(payload)\n              break;\n            case SWAP:\n              this.swap(payload)\n              break;\n            case TRADE:\n              this.trade(payload)\n              break;\n            case GET_CURV_BALANCE:\n              this.getCurveBalances(payload)\n              break;\n            case GET_BEST_PRICE:\n              this.getBestPrice(payload)\n              break;\n            case GET_VAULT_BALANCES:\n              this.getVaultBalances(payload);\n              break;\n            case GET_VAULT_BALANCES_FULL:\n              this.getVaultBalancesFull(payload);\n              break;\n            case DEPOSIT_VAULT:\n              this.depositVault(payload)\n              break;\n            case DEPOSIT_ALL_VAULT:\n              this.depositAllVault(payload)\n              break;\n            case WITHDRAW_VAULT:\n              this.withdrawVault(payload)\n              break;\n            case WITHDRAW_ALL_VAULT:\n              this.withdrawAllVault(payload)\n              break;\n            case GET_DASHBOARD_SNAPSHOT:\n              this.getDashboardSnapshot()\n              break;\n            case GET_STATISTICS:\n              this.getStatistics(payload)\n              break;\n            case DEPOSIT_EXPERIMENTAL_VAULT:\n              this.depositExperimentalVault(payload)\n              break;\n            case DEPOSIT_ALL_EXPERIMENTAL_VAULT:\n              this.depositAllExperimentalVault(payload)\n              break;\n            case CLAIM_EXPERIMENTAL_VAULT:\n              this.claimExperimentalVault(payload)\n              break;\n            case ZAP_EXPERIMENTAL_VAULT:\n              this.zapExperimentalVault(payload)\n              break;\n            default:\n              // console.log(\"Do nothing\", \"==\");\n          }\n        }.bind(this)\n    );\n  }\n\n  getStore(index) {\n    return(this.store[index]);\n  };\n\n  setStore(obj) {\n    this.store = {...this.store, ...obj}\n    // console.log(this.store)\n    return emitter.emit('StoreUpdated');\n  };\n\n  _getDefaultValues = () => {\n    return {\n      assets: [\n        {\n          id: 'DAIv3',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          investSymbol: 'yDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0xa3Aa4a71dBb17EBF2108A75b0BB7eFd9955463EF',\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          decimals: 18,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'dai'\n        },\n        {\n          id: 'USDCv3',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          investSymbol: 'yUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          iEarnContract: '0x82Ac4e3A35dd64dD3574bF5BD5029fd90ABc2A86',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'usd-coin'\n        },\n        {\n          id: 'USDTv3',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          investSymbol: 'yUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          iEarnContract: '0x6C77dF12c39CAE90C4c46E5C19177679b7235CFa',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'tether'\n        },\n        {\n          id: 'BUSDv3',\n          name: 'BUSD',\n          symbol: 'BUSD',\n          description: 'Binance USD',\n          investSymbol: 'yBUSD',\n          erc20address: '0x4fabb145d64652a948d72533023f6e7a623c7c53',\n          iEarnContract: '0xb912F2D756b9fF4a8af9844E2C66949997289940',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 3,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'binance-usd'\n        },\n        {\n          id: 'DAIv2',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          investSymbol: 'yDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0xa3Aa4a71dBb17EBF2108A75b0BB7eFd9955463EF',\n          lastMeasurement: 9465912,\n          measurement: 1000037230456849197,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          decimals: 18,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'dai'\n        },\n        {\n          id: 'USDCv2',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          investSymbol: 'yUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          iEarnContract: '0x82Ac4e3A35dd64dD3574bF5BD5029fd90ABc2A86',\n          lastMeasurement: 9465880,\n          measurement: 1139534904703193728,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'usd-coin'\n        },\n        {\n          id: 'USDTv2',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          investSymbol: 'yUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          iEarnContract: '0x6C77dF12c39CAE90C4c46E5C19177679b7235CFa',\n          lastMeasurement: 9465880,\n          measurement: 1000030025124779312,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'tether',\n        },\n        {\n          id: 'TUSDv2',\n          name: 'TUSD',\n          symbol: 'TUSD',\n          description: 'TrueUSD',\n          investSymbol: 'yTUSD',\n          erc20address: '0x0000000000085d4780B73119b644AE5ecd22b376',\n          iEarnContract: '0xe96F3621F5eF085f79Bd0Cc87b6e43378cFA6a60',\n          lastMeasurement: 9479531,\n          measurement: 1000197346651007837 ,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'true-usd',\n        },\n        {\n          id: 'SUSDv2',\n          name: 'SUSD',\n          symbol: 'SUSD',\n          description: 'Synth sUSD',\n          investSymbol: 'ySUSD',\n          erc20address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\n          iEarnContract: '0x2af196bE403659C871b361d87b1B80568E7dd862',\n          lastMeasurement: 9465880,\n          measurement: 1000021451644065970,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'nusd',\n        },\n        {\n          id: 'wBTCv2',\n          name: 'wBTC',\n          symbol: 'wBTC',\n          description: 'Wrapped BTC',\n          investSymbol: 'yWBTC',\n          erc20address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n          iEarnContract: '0x095BD1484d5fd59cA9a63eACaAf3a30344543f97',\n          lastMeasurement: 9465880,\n          measurement: 999998358212140782,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 8,\n          poolValue: 0,\n          abi: config.IEarnErc20ABIv2,\n          version: 2,\n          disabled: false,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: false,\n          price_id: 'wrapped-bitcoin',\n        },\n        {\n          id: 'DAIv1',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          investSymbol: 'yDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0xa3Aa4a71dBb17EBF2108A75b0BB7eFd9955463EF',\n          lastMeasurement: 9400732,\n          measurement: 1000848185112260412,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          decimals: 18,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'dai',\n        },\n        {\n          id: 'USDCv1',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          investSymbol: 'yUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          iEarnContract: '0x82Ac4e3A35dd64dD3574bF5BD5029fd90ABc2A86',\n          lastMeasurement: 9400732,\n          measurement: 1001761741440856097,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'usd-coin',\n        },\n        {\n          id: 'USDTv1',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          investSymbol: 'yUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          iEarnContract: '0x6C77dF12c39CAE90C4c46E5C19177679b7235CFa',\n          lastMeasurement: 9400732,\n          measurement: 1085531657202472310,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 6,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'tether',\n        },\n        {\n          id: 'SUSDv1',\n          name: 'SUSD',\n          symbol: 'SUSD',\n          description: 'Synth sUSD',\n          investSymbol: 'ySUSD',\n          erc20address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\n          iEarnContract: '0x2af196bE403659C871b361d87b1B80568E7dd862',\n          lastMeasurement: 9400732,\n          measurement: 1029186724259834543,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'nusd',\n        },\n        {\n          id: 'wBTCv1',\n          name: 'wBTC',\n          symbol: 'wBTC',\n          tokenSymbol: 'wBTC',\n          description: 'Wrapped BTC',\n          investSymbol: 'yBTC',\n          erc20address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n          iEarnContract: '0x095BD1484d5fd59cA9a63eACaAf3a30344543f97',\n          lastMeasurement: 9427488,\n          measurement: 2000175540087812685,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 8,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'wrapped-bitcoin',\n        },\n        {\n          id: 'CRVv1',\n          name: 'cDAI/cUSDC',\n          symbol: 'CRV',\n          tokenSymbol: 'DAI',\n          description: 'Curve.fi cDAI/cUSDC',\n          investSymbol: 'yCRV',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          iEarnContract: '0x9Ce551A9D2B1A4Ec0cc6eB0E0CC12977F6ED306C',\n          lastMeasurement: 9414437,\n          measurement: 1008192205495361668,\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.IEarnERC20ABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          curve: false,\n          price_id: 'dai',\n        },\n        {\n          id: 'ETHv1',\n          name: 'ETH',\n          symbol: 'ETH',\n          description: 'Ethereum',\n          investSymbol: 'iETH',\n          erc20address: 'Ethereum',\n          iEarnContract: '0x9Dde7cdd09dbed542fC422d18d89A589fA9fD4C0',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          decimals: 18,\n          investedBalance: 0,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          price_id: 'ethereum',\n        },\n        {\n          id: 'iDAIv1',\n          name: 'Fulcrum DAI iToken',\n          symbol: 'iDAI',\n          description: 'Fulcrum DAI iToken',\n          erc20address: '0x493c57c4763932315a328269e1adad09653b9081',\n          iEarnContract: null,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          version: 2,\n          disabled: true,\n          idai: true,\n          price_id: 'dai',\n        },\n      ],\n      vaultAssets: [\n        {\n          id: 'DAI',\n          name: 'DAI',\n          symbol: 'DAI',\n          description: 'DAI Stablecoin',\n          pool_identifier: \"afiDAI Pool\",\n          vaultSymbol: 'afiDAI',\n          erc20address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n          vaultContractAddress: '0xfE170Dd8F4C0f335326dF1892D75de47c8d2CBC1',\n          vaultContractABI: config.vaultContractV3ABI,\n          balance: 0,\n          vaultBalance: 0,\n          rewardBalance: 0,\n          ariesAPY: 0,\n          stakedBalance: 0,\n          afiPrice: 0,\n          liquidityLock: 0,\n          rewardAvailable: 0,\n          rewardDecimals: 18,\n          decimals: 18,\n          deposit: true,\n          depositAll: true,\n          withdraw: true,\n          withdrawAll: true,\n          lastMeasurement: 10650116,\n          measurement: 1e18,\n          price_id: 'dai',\n          rewardsAddress: rewardconfig.afidaipoolAddress,\n          rewardsABI: rewardconfig.afidaipoolABI,\n        },\n        {\n          id: 'USDC',\n          name: 'USD Coin',\n          symbol: 'USDC',\n          description: 'USD Coin',\n          pool_identifier: \"afiUSDC Pool\",\n          vaultSymbol: 'afUSDC',\n          erc20address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          vaultContractAddress: '0xfC64d0bF54351d4383713172090F070836748590',\n          vaultContractABI: config.vaultContractABI,\n          balance: 0,\n          vaultBalance: 0,\n          rewardBalance: 0,\n          ariesAPY: 0,\n          stakedBalance: 0,\n          afiPrice: 0,\n          liquidityLock: 0,\n          rewardAvailable: 0,\n          rewardDecimals: 18,\n          decimals: 6,\n          deposit: true,\n          depositAll: false,\n          withdraw: true,\n          withdrawAll: false,\n          lastMeasurement: 10532708,\n          measurement: 1e18,\n          price_id: 'usd-coin',\n          rewardsAddress: rewardconfig.afusdcpoolAddress,\n          rewardsABI: rewardconfig.afusdcpoolABI,\n        },\n        {\n          id: 'USDT',\n          name: 'USDT',\n          symbol: 'USDT',\n          description: 'Tether USD',\n          pool_identifier: \"afiUSDT Pool\",\n          vaultSymbol: 'afUSDT',\n          erc20address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n          vaultContractAddress: '0x0Ea9f8C451f472e9f9463d76097b8D0821CF1A55',\n          vaultContractABI: config.vaultContractV3ABI,\n          balance: 0,\n          vaultBalance: 0,\n          rewardBalance: 0,\n          ariesAPY: 0,\n          stakedBalance: 0,\n          afiPrice: 0,\n          liquidityLock: 0,\n          rewardAvailable: 0,\n          rewardDecimals: 18,\n          decimals: 6,\n          deposit: true,\n          depositAll: true,\n          withdraw: true,\n          withdrawAll: true,\n          lastMeasurement: 10651402,\n          measurement: 1e18,\n          price_id: 'tether',\n          rewardsAddress: rewardconfig.afusdtpoolAddress,\n          rewardsABI: rewardconfig.afusdtpoolABI,\n        },\n      ],\n      aprs: [{\n        token: 'DAI',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        earnAddress: '0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01',\n        lastMeasurement: 9465912,\n        measurement: 1000037230456849197,\n        mod: 1,\n        decimals: 18\n      },{\n        token: 'TUSD',\n        address: '0x0000000000085d4780B73119b644AE5ecd22b376',\n        earnAddress: '0x6e53F8fa0D17eDA0412cBBcA8f7732D5ED28c9f8',\n        lastMeasurement: 9479531,\n        measurement: 1000197346651007837 ,\n        created: 0,\n        mod: 1,\n        decimals: 18\n      },{\n        token: 'USDC',\n        address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n        earnAddress: '0xa2609B2b43AC0F5EbE27deB944d2a399C201E3dA',\n        lastMeasurement: 9400732,\n        measurement: 1001761741440856097,\n        mod: 1,\n        decimals: 6\n      },{\n        token: 'USDT',\n        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        earnAddress: '0x83f798e925BcD4017Eb265844FDDAbb448f1707D',\n        lastMeasurement: 9465880,\n        measurement: 1000030025124779312,\n        mod: 1,\n        decimals: 6\n      },{\n        token: 'SUSD',\n        address: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',\n        earnAddress: '0x36324b8168f960A12a8fD01406C9C78143d41380',\n        lastMeasurement: 9400732,\n        measurement: 1029186724259834543,\n        mod: 1,\n        decimals: 18\n      },{\n        token: 'BAT',\n        address: '0x0D8775F648430679A709E98d2b0Cb6250d2887EF',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'ETH',\n        address: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'LINK',\n        address: '0x514910771AF9Ca656af840dff83E8264EcF986CA',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'KNC',\n        address: '0xdd974D5C2e2928deA5F71b9825b8b646686BD200',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'REP',\n        address: '0x1985365e9f78359a9B6AD760e32412f4a445E862',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'MKR',\n        address: '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'ZRX',\n        address: '0xE41d2489571d322189246DaFA5ebDe1F4699F498',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'SNX',\n        address: '0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F',\n        created: 0,\n        mod: 1,\n        earnAddress: '',\n        decimals: 18\n      },{\n        token: 'wBTC',\n        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n        earnAddress: '0x04EF8121aD039ff41d10029c91EA1694432514e9',\n        lastMeasurement: 9427488,\n        measurement: 2000175540087812685,\n        mod: 1,\n        decimals: 18\n      },\n      ],\n      dashboard: {\n        vault_balance_usd: 0,\n        vault_growth_usd_daily: 0,\n        vault_growth_usd_weekly: 0,\n        vault_growth_usd_yearly: 0,\n        vault_growth_usd_daily_perc: 0,\n        vault_growth_usd_weekly_perc: 0,\n        vault_growth_usd_yearly_perc: 0,\n\n        vault_balance_eth: 0,\n        vault_growth_eth_daily: 0,\n        vault_growth_eth_weekly: 0,\n        vault_growth_eth_yearly: 0,\n        vault_growth_eth_daily_perc: 0,\n        vault_growth_eth_weekly_perc: 0,\n        vault_growth_eth_yearly_perc: 0,\n\n\n        earn_balance_usd: 0,\n        earn_growth_usd_daily: 0,\n        earn_growth_usd_weekly: 0,\n        earn_growth_usd_yearly: 0,\n        earn_growth_usd_daily_perc: 0,\n        earn_growth_usd_weekly_perc: 0,\n        earn_growth_usd_yearly_perc: 0,\n\n        earn_balance_eth: 0,\n        earn_growth_eth_daily: 0,\n        earn_growth_eth_weekly: 0,\n        earn_growth_eth_yearly: 0,\n        earn_growth_eth_daily_perc: 0,\n        earn_growth_eth_weekly_perc: 0,\n        earn_growth_eth_yearly_perc: 0,\n\n        portfolio_balance_usd: 0,\n        portfolio_growth_usd_daily: 0,\n        portfolio_growth_usd_weekly: 0,\n        portfolio_growth_usd_yearly: 0,\n        portfolio_growth_usd_daily_perc: 0,\n        portfolio_growth_usd_weekly_perc: 0,\n        portfolio_growth_usd_yearly_perc: 0,\n\n        portfolio_balance_eth: 0,\n        portfolio_growth_eth_daily: 0,\n        portfolio_growth_eth_weekly: 0,\n        portfolio_growth_eth_yearly: 0,\n        portfolio_growth_eth_daily_perc: 0,\n        portfolio_growth_eth_weekly_perc: 0,\n        portfolio_growth_eth_yearly_perc: 0,\n      }\n    }\n  }\n\n  invest = (payload) => {\n    const account = store.getStore('account')\n    const { asset, amount } = payload.content\n\n    if(asset.erc20address !== 'Ethereum') {\n      this._checkApproval(asset, account, amount, asset.iEarnContract, (err) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callInvest(asset, account, amount, (err, investResult) => {\n          if(err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(INVEST_RETURNED, investResult)\n        })\n      })\n    } else {\n      this._callInvest(asset, account, amount, (err, investResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(INVEST_RETURNED, investResult)\n      })\n    }\n  }\n\n  _checkApprovalForProxy = async (asset, account, amount, contract, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    const vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n    try {\n      const allowance = await vaultContract.methods.allowance(account.address, contract).call({ from: account.address })\n\n      const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n\n      if(parseFloat(ethAllowance) < parseFloat(amount)) {\n        await vaultContract.methods.approve(contract, web3.utils.toWei('999999999999', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        callback()\n      } else {\n        callback()\n      }\n    } catch(error) {\n      if(error.message) {\n        return callback(error.message)\n      }\n      callback(error)\n    }\n  }\n\n  _checkCurveMintApproval = async (asset, account, contract, callback) => {\n    try {\n\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      const curveContracts = new web3.eth.Contract(asset.minterContractABI, asset.minterContractAddress)\n\n      const allowedToMintFor = await curveContracts.methods.allowed_to_mint_for(contract, account.address).call({ from: account.address })\n\n      if(allowedToMintFor) {\n        return callback()\n      } else {\n        await curveContracts.methods.toggle_approve_mint(contract).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        callback()\n      }\n\n    } catch(error) {\n      if(error.message) {\n        return callback(error.message)\n      }\n      callback(error)\n    }\n  }\n\n  _checkApproval = async (asset, account, amount, contract, callback) => {\n\n    if(asset.erc20address === 'Ethereum') {\n      return callback()\n    }\n\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    try {\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n\n      let ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n      if (asset.decimals !== 18) {\n        ethAllowance = (allowance*10**asset.decimals).toFixed(0);\n      }\n\n      var amountToSend = web3.utils.toWei('999999999', \"ether\")\n      if (asset.decimals !== 18) {\n        amountToSend = (999999999*10**asset.decimals).toFixed(0);\n      }\n\n      if(parseFloat(ethAllowance) < parseFloat(amount)) {\n        /*\n          code to accomodate for \"assert _value == 0 or self.allowances[msg.sender][_spender] == 0\" in contract\n          We check to see if the allowance is > 0. If > 0 set to 0 before we set it to the correct amount.\n        */\n        if(['crvV1', 'crvV2', 'crvV3', 'crvV4', 'USDTv1', 'USDTv2', 'USDTv3', 'USDT', 'sCRV'].includes(asset.id) && ethAllowance > 0) {\n          await erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        }\n\n        await erc20Contract.methods.approve(contract, amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        callback()\n      } else {\n        callback()\n      }\n    } catch(error) {\n      if(error.message) {\n        return callback(error.message)\n      }\n      callback(error)\n    }\n  }\n\n  _checkApprovalWaitForConfirmation = async (asset, account, amount, contract, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n\n    const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n\n    if(parseFloat(ethAllowance) < parseFloat(amount)) {\n      if(['crvV1', 'crvV2', 'crvV3', 'crvV4', 'USDTv1', 'USDTv2', 'USDTv3', 'sCRV'].includes(asset.id) && ethAllowance > 0) {\n        erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n            .on('transactionHash', async function(hash){\n              erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n                  .on('transactionHash', function(hash){\n                    callback()\n                  })\n                  .on('error', function(error) {\n                    if (!error.toString().includes(\"-32601\")) {\n                      if(error.message) {\n                        return callback(error.message)\n                      }\n                      callback(error)\n                    }\n                  })\n            })\n            .on('error', function(error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if(error.message) {\n                  return callback(error.message)\n                }\n                callback(error)\n              }\n            })\n      } else {\n        erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n            .on('transactionHash', function(hash){\n              callback()\n            })\n            .on('error', function(error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if(error.message) {\n                  return callback(error.message)\n                }\n                callback(error)\n              }\n            })\n      }\n    } else {\n      callback()\n    }\n  }\n\n  _callInvest = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract)\n    if(asset.erc20address === 'Ethereum') {\n      iEarnContract.methods[asset.invest]().send({ from: account.address, value: web3.utils.toWei(amount, \"ether\"), gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', function(hash){\n            // console.log(hash)\n            callback(null, hash)\n          })\n          .on('confirmation', function(confirmationNumber, receipt){\n            // console.log(confirmationNumber, receipt);\n          })\n          .on('receipt', function(receipt){\n            // console.log(receipt);\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n          .catch((error) => {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n    } else {\n      var amountToSend = web3.utils.toWei(amount, \"ether\")\n      if (asset.decimals !== 18) {\n        amountToSend = amount*10**asset.decimals;\n      }\n      iEarnContract.methods[asset.invest](amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', function(hash){\n            // console.log(hash)\n            callback(null, hash)\n          })\n          .on('confirmation', function(confirmationNumber, receipt){\n            // console.log(confirmationNumber, receipt);\n          })\n          .on('receipt', function(receipt){\n            // console.log(receipt);\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n          .catch((error) => {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n    }\n  }\n\n  rebalance = (payload) => {\n    const account = store.getStore('account')\n    const { asset } = payload.content\n\n    this._callRebalance(asset, account, (err, result) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      return emitter.emit(REBALANCE_RETURNED, result)\n    })\n  }\n\n  _callRebalance = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let iEarnContract = new web3.eth.Contract(config.IEarnERC20ABI, asset.iEarnContract)\n\n    iEarnContract.methods.rebalance().send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          // console.log(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  donate = (payload) => {\n    const account = store.getStore('account')\n    const { asset, amount } = payload.content\n\n    this._callDonate(asset, account, amount, (err, result) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      return emitter.emit(DONATE_RETURNED, result)\n    })\n  }\n\n  _callDonate = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let iEarnContract = new web3.eth.Contract(config.IEarnERC20ABI, asset.erc20address)\n\n    var amountSend = web3.utils.toWei(amount, \"ether\")\n    if (asset.decimals !== 18) {\n      amountSend = Math.round(amount*10**asset.decimals);\n    }\n\n    iEarnContract.methods.transfer(asset.iEarnContract, amountSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          // console.log(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  redeem = (payload) => {\n    const account = store.getStore('account')\n    const { asset, amount } = payload.content\n\n    this._callRedeem(asset, account, amount, (err, redeemResult) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n      return emitter.emit(REDEEM_RETURNED, redeemResult)\n    })\n  }\n\n  _callRedeem = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract)\n\n    var amountSend = web3.utils.toWei(amount, \"ether\")\n    if (asset.decimals !== 18) {\n      amountSend = Math.round(amount*10**asset.decimals);\n    }\n\n    iEarnContract.methods[asset.redeem](amountSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          // console.log(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  getBalancesLight = async () => {\n    const account = store.getStore('account')\n\n    const assets = store.getStore('assets')\n\n    if(!account || !account.address) {\n      return false\n    }\n\n    const web3 = await this._getWeb3Provider();\n    if(!web3) {\n      return null\n    }\n\n    async.map(assets, (asset, callback) => {\n      async.parallel([\n        (callbackInner) => { this._getERC20Balance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getInvestedBalance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getPoolPrice(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getMaxAPR(web3, asset, account, callbackInner) },\n      ], (err, data) => {\n        asset.balance = data[0]\n        asset.investedBalance = data[1]\n        asset.price = data[2]\n        asset.maxApr = data[3]\n\n        callback(null, asset)\n      })\n    }, (err, assets) => {\n      if(err) {\n        return emitter.emit(ERROR, err)\n      }\n\n      store.setStore({ assets: assets })\n      return emitter.emit(BALANCES_LIGHT_RETURNED, assets)\n    })\n  }\n\n  _getStakedBalance = async (web3, asset, account, callback) => {\n    try{\n      let erc20Contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n\n      let balance = await erc20Contract.methods.balanceOf(account.address)\n          .call({ from: account.address });\n      // console.log(balance, parseFloat(balance)/10**asset.decimals, new Decimal(balance).toFixed(12), \"_stakedBalance ==\");\n      callback(null, parseFloat(balance)/10**asset.decimals);\n    }catch (e) {\n      callback(null, 0);\n    }\n  };\n\n  _getAriesAPY = async (ariesAPY, asset, callback) => {\n    const propertyName = \"apy\";\n\n    const result = ariesAPY.data.filter((value) => {\n      return value.pool_identifier === asset.pool_identifier;\n    });\n\n    const toReturn = result.length > 0 && result[0][propertyName] ? result[0][propertyName] : 0;\n\n    callback(null, toReturn);\n  };\n\n  _getLiquidityLock = async (ariesAPY, asset, callback) => {\n    const propertyName = \"liquidity_lock\";\n\n    const result = ariesAPY.data.filter((value) => {\n      return value.pool_identifier === asset.pool_identifier;\n    });\n\n    const toReturn = result.length > 0 && result[0][propertyName] ? result[0][propertyName] : 0;\n\n    callback(null, toReturn);\n  };\n\n  /**\n   farmingDashBoard: {\n      depositsInAries: 0,\n      marketCap: 0,\n      AFIPrice:0,\n      AFIStakingAPY:0,\n      AFIStaked:0,\n      AFIPooled:0,\n    },\n\n   Deposits in Aries:  liquidity_lock sum except AFI + liquidity_lock of AFI*price\n   Market cap: AFI price * 18,000,000\n\n   AFI price: AFI price\n   AFI staking APY:  AFI staking APY\n   AFI staked: AFI liquidity_lock /( total AFI reward )%\n   AFI pooled: ( UniLP_AFI_USDC Pool liquidity_lock / (2*AFI price)  )/ total AFI reward  %\n\n   * */\n  _setDataIntoFarmingDashBoard = (ariesAPY, afiPrice) => {\n    store.setStore({\n      farmingDashBoard: {\n        depositsInAries: 0,\n        marketCap: 0,\n        AFIPrice: 0,\n        AFIStakingAPY: 0,\n        AFIStaked: 0,\n        AFIPooled: 0,\n      }\n    });\n    const farmingDashBoard = store.getStore(\"farmingDashBoard\");\n    const poolsInfo = ariesAPY.data;\n    console.log(\"== FarmingDashBoard - before\", farmingDashBoard, ariesAPY, afiPrice)\n\n    poolsInfo.forEach((value, index, arr) => {\n      if(value.pool_identifier === \"AFI Governance Pool\") {\n        farmingDashBoard.depositsInAries += value.liquidity_lock*1;\n        farmingDashBoard.AFIStakingAPY = value.apy;\n        farmingDashBoard.AFIStaked += value.liquidity_lock/(totalAFIReward*afiPrice);\n      } else if(value.pool_identifier === \"UniLP_AFI_USDC Pool\") {\n        farmingDashBoard.depositsInAries += value.liquidity_lock*1;\n        farmingDashBoard.AFIPooled += value.liquidity_lock/(afiPrice*2*totalAFIReward);\n      } else {\n        farmingDashBoard.depositsInAries += value.liquidity_lock*1;\n      }\n    });\n    farmingDashBoard.marketCap = afiPrice * 18000000;\n    farmingDashBoard.AFIPrice = afiPrice;\n\n    console.log(\"== FarmingDashBoard - after\", farmingDashBoard, ariesAPY, afiPrice)\n  };\n\n  /**\n   {\n      \"code\": \"0\",\n      \"mesg\": \"ok\",\n      \"data\": [\n          {\n              \"pool_identifier\": \"AFI Governance Pool\",\n              \"liquidity_lock\": \"36618.52919\",\n              \"apy\": \"44102.552\"\n          },\n          {\n              \"pool_identifier\": \"UniLP_AFI_USDC Pool\",\n              \"liquidity_lock\": \"5575\",\n              \"apy\": \"318555.138304\"\n          },\n          {\n              \"pool_identifier\": \"afiUSDC Pool\",\n              \"liquidity_lock\": \"94219.97928\",\n              \"apy\": \"2792.07968\"\n          },\n          {\n              \"pool_identifier\": \"afiUSDT Pool\",\n              \"liquidity_lock\": \"57866.19095\",\n              \"apy\": \"4560.973664\"\n          },\n          {\n              \"pool_identifier\": \"afiDAI Pool\",\n              \"liquidity_lock\": \"62931.47018\",\n              \"apy\": \"5309.72182\"\n          }\n      ]\n  }\n   * */\n  _getAriesAPYs = async () => {\n    const response = await fetch(`${config.apiURLProvider}pools`)\n        .then(r=>r.json());\n    return response;\n  };\n\n  /**\n   {\n       \"code\": \"0\",\n       \"mesg\": \"ok\",\n       \"data\": {\n           \"price\": 893.54249,\n           \"totalLiquidity\": 5576,\n           \"totalValueLocked\": 0,\n           \"weeklyROI\": 0,\n           \"apy\": 0\n       }\n   }\n   * */\n  _getAriesPrice = async () => {\n    const response = await fetch(`${config.apiURLProvider}afidata`)\n        .then(r=>r.json());\n        \n    const price = response.data.price || 0;\n    \n    //const price = 0;\n    // console.log(price, \"_getAriesPrice ==\");\n    return price;\n  };\n\n  _getRewards = async (web3, asset, account, callback) => {\n    try{\n      let contract = new web3.eth.Contract(asset.rewardsABI, asset.rewardsAddress);\n\n      let balance = await contract.methods.earned(account.address)\n          .call({ from: account.address });\n      callback(null, new Decimal(parseFloat(balance)/10**asset.rewardDecimals).toFixed());\n    }catch (e) {\n      callback(null, 0);\n    }\n  };\n\n  getBalances = async () => {\n    const account = store.getStore('account')\n\n    const assets = store.getStore('assets')\n\n    if(!account || !account.address) {\n      return false\n    }\n\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    //todo: afi price\n    const afiPrice = await this._getAriesPrice();\n    const ariesAPY = await this._getAriesAPYs();\n\n    this._setDataIntoFarmingDashBoard(ariesAPY, afiPrice);\n\n    async.map(assets, (asset, callback) => {\n      async.parallel([\n          //0\n        (callbackInner) => { this._getERC20Balance(web3, asset, account, callbackInner) },\n          //1\n        (callbackInner) => { this._getInvestedBalance(web3, asset, account, callbackInner) },\n          //2\n        (callbackInner) => { this._getPoolPrice(web3, asset, account, callbackInner) },\n          //3\n        (callbackInner) => { this._getMaxAPR(web3, asset, account, callbackInner) },\n          //4\n        (callbackInner) => { this._getPoolValue(web3, asset, account, callbackInner) },\n          //5\n        (callbackInner) => { this._getAPY(web3, asset, account, callbackInner) },\n          //6\n        (callbackInner) => { this._getCurrentLender(web3, asset, account, callbackInner) },\n          //7\n        (callbackInner) => { this._getRecommendedLender(web3, asset, account, callbackInner) },\n          //8\n        (callbackInner) => { this._getBalance(web3, asset, account, callbackInner) },\n          //9\n        (callbackInner) => { this._getStakedBalance(web3, asset, account, callbackInner) },\n          //10\n        (callbackInner) => { this._getAriesAPY(ariesAPY, asset, callbackInner) },\n          //11\n        (callbackInner) => { this._getRewards(web3, asset, account, callbackInner) },\n        //12\n        (callbackInner) => { this._getLiquidityLock(ariesAPY, asset, callbackInner) },\n      ], (err, data) => {\n        asset.balance = data[0]\n        asset.investedBalance = data[1]\n        asset.price = data[2]\n        asset.maxApr = data[3]\n        asset.poolValue = data[4]\n        asset.apy = data[5]\n        asset.current = data[6]\n        asset.recommended = data[7]\n        asset.tokenBalance = data[8]\n\n        asset.stakedBalance = data[9];\n        asset.ariesAPY = data[10];\n        asset.rewardAvailable = data[11];\n        asset.liquidityLock = data[12];\n        asset.afiPrice = afiPrice;\n        // console.log(asset, \"==test\");\n        callback(null, asset)\n      })\n    }, (err, assets) => {\n      if(err) {\n        return emitter.emit(ERROR, err)\n      }\n\n      store.setStore({ assets: assets })\n      return emitter.emit(BALANCES_RETURNED, assets)\n    })\n  }\n\n  _getERC20Balance = async (web3, asset, account, callback) => {\n\n    if(asset.erc20address === 'Ethereum') {\n      try {\n        const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(account.address), \"ether\");\n        callback(null, parseFloat(eth_balance))\n      } catch(ex) {\n        // console.log(ex)\n        return callback(ex)\n      }\n    } else {\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n\n      try {\n        var balance = await erc20Contract.methods.balanceOf(account.address).call({ from: account.address });\n        balance = parseFloat(balance)/10**asset.decimals\n        callback(null, parseFloat(balance))\n      } catch(ex) {\n        // console.log(ex)\n        return callback(ex)\n      }\n    }\n  }\n\n  _getBalance = async (web3, asset, account, callback) => {\n\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n\n    if(asset.erc20address === 'Ethereum') {\n      try {\n        const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(asset.iEarnContract), \"ether\");\n        callback(null, parseFloat(eth_balance))\n      } catch(ex) {\n        // console.log(ex)\n        return callback(ex)\n      }\n    } else {\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n\n      try {\n        var balance = await erc20Contract.methods.balanceOf(asset.iEarnContract).call({ from: account.address });\n        balance = parseFloat(balance)/10**asset.decimals\n        callback(null, parseFloat(balance))\n      } catch(ex) {\n        // console.log(ex)\n        return callback(ex)\n      }\n    }\n  }\n\n  _getAPY = async (web3, asset, account, callback) => {\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n    if (asset.measurement == null) {\n      return callback(null, 0)\n    }\n    try {\n      let block = await web3.eth.getBlockNumber();\n      let earn = new web3.eth.Contract(config.IEarnABI, asset.iEarnContract);\n      let balance = await earn.methods.getPricePerFullShare().call();\n\n      balance = balance - asset.measurement;\n      balance = balance / 1e18;\n      let diff = block - asset.lastMeasurement;\n\n      balance = balance / diff;\n      balance = balance * 2425846;\n\n      callback(null, parseFloat(balance))\n    } catch (e) {\n      // console.log(e)\n      callback(null, 0)\n    }\n  }\n\n  _getCurrentLender = async (web3, asset, account, callback) => {\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n\n    try {\n      let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract)\n      let value = 0\n\n      if(asset.erc20address === 'Ethereum' || asset.id === 'CRVv1') {\n        value = 0;\n      } else {\n        value = await iEarnContract.methods.provider().call({ from: account.address });\n      }\n      callback(null, parseFloat(value))\n    } catch (e) {\n      // console.log(e)\n      callback(null, 0)\n    }\n  }\n\n  _getRecommendedLender = async (web3, asset, account, callback) => {\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n\n    try {\n      let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract)\n      let value = 0\n\n      if(asset.erc20address === 'Ethereum' || asset.id === 'CRVv1') {\n        value = 0;\n      } else {\n        value = await iEarnContract.methods.recommend().call({ from: account.address });\n      }\n      callback(null, parseFloat(value))\n    } catch (e) {\n      //console.log(asset)\n      //console.log(e)\n      callback(null, 0)\n    }\n  }\n\n  _getPoolValue = async (web3, asset, account, callback) => {\n\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n\n    try {\n      let iEarnContract = new web3.eth.Contract(asset.abi, asset.iEarnContract)\n      let value = 0\n\n      if(asset.erc20address === 'Ethereum') {\n        value = web3.utils.fromWei(await iEarnContract.methods.calcPoolValueInETH().call({ from: account.address }), 'ether');\n      } else {\n        value = await iEarnContract.methods.calcPoolValueInToken().call({ from: account.address });\n        if (asset.decimals === 18) {\n          value = web3.utils.fromWei(value, 'ether');\n        } else {\n          value = value / (10 ** asset.decimals);\n        }\n      }\n      callback(null, parseFloat(value))\n    } catch (e) {\n      //console.log(e)\n      callback(null, 0)\n    }\n\n  }\n\n  _getPoolPrice = async (web3, asset, account, callback) => {\n\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n\n    let iEarnContract = new web3.eth.Contract(config.IEarnABI, asset.iEarnContract)\n    const balance = web3.utils.fromWei(await iEarnContract.methods.getPricePerFullShare().call({ from: account.address }), 'ether');\n    callback(null, parseFloat(balance))\n  }\n\n  _getInvestedBalance = async (web3, asset, account, callback) => {\n\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n\n    let iEarnContract = new web3.eth.Contract(config.IEarnABI, asset.iEarnContract)\n    var  balance = await iEarnContract.methods.balanceOf(account.address).call({ from: account.address });\n    balance = parseFloat(balance)/10**asset.decimals\n    callback(null, parseFloat(balance))\n  }\n\n  _getMaxAPR = async (web3, asset, account, callback) => {\n\n    if(asset.iEarnContract === null) {\n      return callback(null, 0)\n    }\n    if (asset.symbol === 'CRV') {\n      let aprContract = new web3.eth.Contract(config.crvContractABI, config.crvAddress)\n      const call = 'crvapr'\n      const aprs = await aprContract.methods[call]().call();\n      return callback(null, web3.utils.fromWei(parseFloat(aprs).toFixed(0), 'ether'))\n    }\n\n    let aprContract = new web3.eth.Contract(config.aggregatedContractABI, config.aggregatedContractAddress)\n\n    var call = 'getAPROptions';//+asset.symbol\n    var address = asset.erc20address\n    var aprs = 0;\n    if (asset.erc20address === 'Ethereum') {\n      call = 'getETH';\n      aprs = await aprContract.methods[call]().call();\n    } else {\n      aprs = await aprContract.methods[call](address).call();\n    }\n\n\n    const keys = Object.keys(aprs)\n    const workKeys = keys.filter((key) => {\n      return isNaN(key)\n    })\n    const maxApr = Math.max.apply(Math, workKeys.map(function(o) {\n      if(o === 'uniapr' || o === 'unicapr' || o === \"iapr\") {\n        return aprs[o]-100000000000000000000\n      }\n      return aprs[o];\n    }))\n\n    callback(null, web3.utils.fromWei(maxApr.toFixed(0), 'ether'))\n  }\n\n  getAPR = (payload) => {\n    var value = 0;\n    if (payload.content&&payload.content.amount) {\n      value = payload.content.amount;\n    }\n    const web3 = new Web3(new Web3.providers.HttpProvider(config.infuraProvider));\n\n    async.map(store.getStore('aprs'), (apr, callback) => {\n      apr.value = value.toString();\n      this._getAPR(web3, apr, callback)\n    }, (err, yields) => {\n      if(err) {\n        return emitter.emit(ERROR, err)\n      }\n      //get all headers\n      if(yields && yields.length > 0 && yields[0].apr) {\n        const headers = Object.keys(yields[0].apr)\n        store.setStore({ aggregatedYields: yields, aggregatedHeaders: headers })\n      }\n      return emitter.emit(GET_AGGREGATED_YIELD_RETURNED, yields)\n    })\n  }\n\n  _getAPR = async (web3, apr, callback) => {\n    let contract = new web3.eth.Contract(config.aprContractABI, config.aprContractAddress)\n    var value = apr.value;\n    if (apr.decimals === 6) {\n      value = web3.utils.toWei(apr.value, 'picoether');\n    } else {\n      value = web3.utils.toWei(apr.value, 'ether');\n    }\n    try {\n      const val = await contract.methods['getAPROptionsAdjusted'](apr.address, value).call()\n      const keys = Object.keys(val)\n\n      const vals = keys.filter((key) => {\n        return isNaN(key)\n      }).map((key) => {\n        const obj = {}\n        obj[key] = web3.utils.fromWei(val[key].toString(), 'ether');\n        return obj\n      })\n\n      let output = {}\n\n      for(let i = 0; i < vals.length; i++) {\n        const keys = Object.keys(vals[i])\n        if (keys[0] === '_unifulcrum'||keys[0] === '_uniaave'||keys[0] === '_unicompound'||keys[0] === '_uniswap') {\n          // skip\n        } else {\n          output[keys[0]] = vals[i][keys[0]]\n        }\n      }\n\n      let iearn = 0;\n      if (apr.earnAddress !== '') {\n        let block = await web3.eth.getBlockNumber();\n        let earn = new web3.eth.Contract(config.IEarnABI, apr.earnAddress);\n        let balance = await earn.methods.getPricePerFullShare().call();\n\n        balance = balance - apr.measurement;\n        balance = balance / 1e18;\n        let diff = block - apr.lastMeasurement;\n\n        balance = balance / diff;\n        balance = balance * 2425846;\n        iearn = balance;\n      }\n      output[\"iearn.finance \\n(APY)\"] = iearn;\n      apr.apr = output\n\n      callback(null, apr)\n    } catch(ex) {\n      //console.log(ex);\n      // return callback(ex)\n      callback(null, false)\n    }\n  }\n\n  _getAggregatedYield = async (web3, call, callback) => {\n    let uniswapContract = new web3.eth.Contract(config.aggregatedContractABI, config.aggregatedContractAddress)\n\n    try {\n\n      const val = await uniswapContract.methods[call.name]().call()\n\n      const keys = Object.keys(val)\n\n      const vals = keys.filter((key) => {\n        return isNaN(key)\n      }).map((key) => {\n        const obj = {}\n        obj[key] = web3.utils.fromWei(val[key].toString(), 'ether');\n        return obj\n      })\n\n      let output = {}\n\n      for(let i = 0; i < vals.length; i++) {\n        const keys = Object.keys(vals[i])\n        output[keys[0]] = vals[i][keys[0]]\n      }\n\n      call.token = call.name.replace('get', '')\n      call.apr = output\n\n      callback(null, call)\n    } catch(ex) {\n      //// console.log(ex)\n      // return callback(ex)\n      callback(null, false)\n    }\n  }\n\n  getContractEvents = (payload) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let iEarnContract = new web3.eth.Contract(config.IEarnABI, config.iEarnContract)\n\n    iEarnContract.getPastEvents('allEvents', { fromBlock: 1, toBlock: 'latest' })\n        .then((res) => {\n\n          const sorted = res.sort((a, b) => {\n            return parseFloat(a.blockNumber) - parseFloat(b.blockNumber)\n          }).filter((tx) => {\n            if(tx.event !== 'Transfer') {\n              return false\n            }\n\n            if(!tx.returnValues.value || tx.returnValues.value === 0) {\n              return false\n            }\n\n            if(tx.returnValues.from !== '0x0000000000000000000000000000000000000000') {\n              return false\n            }\n\n            return true\n          }).map(async (tx) => {\n            const rawTx = await this._getTransaction(web3, tx.transactionHash)\n\n            return {\n              blockNumber: tx.blockNumber,\n              transactionHash: tx.transactionHash,\n              eth: web3.utils.fromWei(rawTx.value, 'ether'),\n              iEth: web3.utils.fromWei(tx.returnValues.value, 'ether'),\n              ethRatio: tx.returnValues.value*100/rawTx.value,\n              address: rawTx.from\n            }\n          })\n\n          Promise.all(sorted).then(async (transactions) => {\n            const pricePerFullShare = await this._getPricePerFullShare(web3, iEarnContract)\n\n            const trxs = transactions.map(async (tx) => {\n              ////console.log(tx.address)\n              const balance = await this._getIEthBalance(web3, iEarnContract, tx.address)\n\n              tx.ethRedeem = (parseFloat(pricePerFullShare)*parseFloat(balance))\n              tx.growth = (parseFloat(tx.ethRedeem)*100/parseFloat(tx.eth))\n              return tx\n            })\n\n            Promise.all(trxs).then(async (txs) => {\n              store.setStore({ events: txs })\n              return emitter.emit(GET_CONTRACT_EVENTS_RETURNED, txs)\n            })\n          })\n        })\n  }\n\n  _getTransaction = async (web3, hash) => {\n    const rawTx = await web3.eth.getTransaction(hash)\n    return rawTx\n  }\n\n  _getPricePerFullShare = async (web3, iEarnContract) => {\n    const balance = web3.utils.fromWei(await iEarnContract.methods.getPricePerFullShare().call({ }), 'ether');\n    return balance\n  }\n\n  _getIEthBalance = async (web3, iEarnContract, address) => {\n    const balance = web3.utils.fromWei(await iEarnContract.methods.balanceOf(address).call({ }), 'ether');\n    return balance\n  }\n\n  swap = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, amount } = payload.content\n\n    let yCurveZapSwapContract = config.yCurveZapSwapAddress\n    if (sendAsset.id === 'crvV3') {\n      yCurveZapSwapContract = config.yCurveZapSwapV4Address\n    }\n\n    this._checkApproval(sendAsset, account, amount, yCurveZapSwapContract, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callSwap(sendAsset, account, amount, (err, swapResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(SWAP_RETURNED, swapResult)\n      })\n    })\n  }\n\n  _callSwap = async (sendAsset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    var amountToSend = web3.utils.toWei(amount, \"ether\")\n    if (sendAsset.decimals !== 18) {\n      amountToSend = amount*10**sendAsset.decimals;\n    }\n\n    let call = ''\n\n    switch (sendAsset.id) {\n      case 'crvV1':\n        call = 'swapv1tov3'\n        break;\n      case 'crvV2':\n        call = 'swapv2tov3'\n        break;\n      case 'crvV3':\n        call = 'swapv3tov4'\n        break;\n      default:\n    }\n\n    let yCurveZapSwapContract = new web3.eth.Contract(config.yCurveZapSwapABI, config.yCurveZapSwapAddress)\n    if (sendAsset.id === 'crvV3') {\n      yCurveZapSwapContract = new web3.eth.Contract(config.yCurveZapSwapV4ABI, config.yCurveZapSwapV4Address)\n    }\n    yCurveZapSwapContract.methods[call](amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          //console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          //console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          //console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  getBestPrice = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, receiveAsset, amount } = payload.content\n\n    this._getBestPrice(sendAsset, receiveAsset, account, amount, (err, price) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      return emitter.emit(GET_BEST_PRICE_RETURNED, price)\n    })\n  }\n\n  _getBestPrice = async (sendAsset, receiveAsset, account, amount, callback) => {\n    try {\n      const url = 'https://api-v2.dex.ag/price?from='+sendAsset.symbol.toLowerCase()+'&to='+receiveAsset.symbol.toLowerCase()+'&fromAmount='+amount+'&dex=ag&tradable=true'\n      let price = await rp(url);\n      callback(null, JSON.parse(price));\n    } catch(e) {\n      callback(null, {})\n    }\n  }\n\n  trade = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, receiveAsset, amount } = payload.content\n\n    this._callTrade(sendAsset, receiveAsset, account, amount, (err, tradeResult) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      return emitter.emit(TRADE_RETURNED, tradeResult)\n    })\n  }\n\n  _callTrade = async (sendAsset, receiveAsset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let trade = await this._getDexAgTrade(sendAsset, receiveAsset, account, amount);\n    // await this._approveToken(trade.metadata.input.address, trade.metadata.input.spender, trade.metadata.input.amount, account, web3);\n\n    try {\n      const tx = await this._sendTrade(trade, account, web3);\n      return callback(null, tx.transactionHash)\n    } catch(ex) {\n      return callback(ex.message)\n    }\n  }\n\n  _getDexAgTrade = async (sendAsset, receiveAsset, account, amount) => {\n    const url = 'https://api-v2.dex.ag/trade?from='+sendAsset.symbol.toLowerCase()+'&to='+receiveAsset.symbol.toLowerCase()+'&fromAmount='+amount+'&dex=ag'\n    let trade = await rp(url);\n    return JSON.parse(trade);\n  }\n\n  _approveToken = async (token, spender, amount, account, web3) => {\n    // First 4 bytes of the hash of \"fee()\" for the sighash selector\n    let funcHash = ethers.utils.hexDataSlice(ethers.utils.id('approve(address,uint256)'), 0, 4);\n\n    let abi = new ethers.utils.AbiCoder();\n    let inputs = [{\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'amount',\n      type: 'uint256'\n    }];\n\n    let params = [spender, amount];\n    let bytes = abi.encode(inputs, params).substr(2);\n\n    // construct approval data from function hash and parameters\n    let inputData = `${funcHash}${bytes}`;\n\n    // let nonce = await infuraProvider.getTransactionCount(ethersWallet.address);\n    let nonce = await web3.eth.getTransactionCount(account.address)\n\n    // You will want to get the real gas price from https://ethgasstation.info/json/ethgasAPI.json\n    let gasPrice = web3.utils.toWei(await this._getGasPrice(), 'gwei');\n\n    let transaction = {\n      to: token,\n      nonce: nonce,\n      gasLimit: 500000, // You will want to use estimateGas instead for real apps\n      gasPrice: gasPrice,\n      data: inputData,\n      from: account.address\n    }\n\n    // let tx = await ethersWallet.sendTransaction(transaction);\n    let tx = await web3.eth.sendTransaction(transaction)\n    //console.log(tx);\n  }\n\n  _sendTrade = async (trade, account, web3) => {\n    // let nonce = await infuraProvider.getTransactionCount(ethersWallet.address);\n    let nonce = await web3.eth.getTransactionCount(account.address)\n\n    // You will want to get the real gas price from https://ethgasstation.info/json/ethgasAPI.json\n    let gasPrice = web3.utils.toWei(await this._getGasPrice(), 'gwei');\n\n    let transaction = trade.trade;\n    transaction.nonce = nonce;\n    transaction.gasPrice = Number(gasPrice);\n    transaction.gasLimit = 500000; // You will want to use estimateGas instead for real apps\n    transaction.value = Number(transaction.value);\n    transaction.from = account.address\n    // let tx = await ethersWallet.sendTransaction(transaction);\n    let tx = await web3.eth.sendTransaction(transaction)\n    return tx\n  }\n\n  zap = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, receiveAsset, amount } = payload.content\n\n    let contractAddress = ''\n\n    if(receiveAsset.id === 'crvV3') {\n      contractAddress = config.yCurveZapAddress\n    }\n    if(receiveAsset.id === 'crvV4') {\n      contractAddress = config.yCurveZapV4Address\n    }\n    if(sendAsset.id === 'crvV3') {\n      contractAddress = config.yCurveZapOutAddress\n    }\n    if(sendAsset.id === 'crvV4') {\n      contractAddress = config.yCurveZapOutV4Address\n    }\n\n    this._checkApproval(sendAsset, account, amount, contractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callZap(sendAsset, receiveAsset, account, amount, (err, zapResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(ZAP_RETURNED, zapResult)\n      })\n    })\n  }\n\n  _callZap = async (sendAsset, receiveAsset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    var amountToSend = web3.utils.toWei(amount, \"ether\")\n    if (sendAsset.decimals !== 18) {\n      amountToSend = amount*10**sendAsset.decimals;\n    }\n\n    let yCurveZapContract = null\n    if(receiveAsset.id === 'crvV3') {\n      yCurveZapContract = new web3.eth.Contract(config.yCurveZapABI, config.yCurveZapAddress)\n    } else if(receiveAsset.id === 'crvV4') {\n      yCurveZapContract = new web3.eth.Contract(config.yCurveZapV4ABI, config.yCurveZapV4Address)\n    } else if(sendAsset.id === 'crvV3') {\n      yCurveZapContract = new web3.eth.Contract(config.yCurveZapOutABI, config.yCurveZapOutAddress)\n    } else if(sendAsset.id === 'crvV4') {\n      yCurveZapContract = new web3.eth.Contract(config.yCurveZapOutV4ABI, config.yCurveZapOutV4Address)\n    }\n    let call = ''\n\n    switch (sendAsset.id) {\n      case 'DAIv2':\n      case 'DAIv3':\n        call = 'depositDAI'\n        break;\n      case 'USDCv2':\n      case 'USDCv3':\n        call = 'depositUSDC'\n        break;\n      case 'USDTv2':\n      case 'USDTv3':\n        call = 'depositUSDT'\n        break;\n      case 'TUSDv2':\n        call = 'depositTUSD'\n        break;\n      case 'BUSDv3':\n        call = 'depositBUSD'\n        break;\n      case 'crvV3':\n      case 'crvV4':\n        switch (receiveAsset.id) {\n          case 'DAIv2':\n          case 'DAIv3':\n            call = 'withdrawDAI'\n            break;\n          case 'USDCv2':\n          case 'USDCv3':\n            call = 'withdrawUSDC'\n            break;\n          case 'USDTv2':\n          case 'USDTv3':\n            call = 'withdrawUSDT'\n            break;\n          case 'TUSDv2':\n            call = 'withdrawTUSD'\n            break;\n          case 'BUSDv3':\n            call = 'withdrawBUSD'\n            break;\n          default:\n\n        }\n        break;\n      default:\n    }\n\n    yCurveZapContract.methods[call](amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  idai = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, receiveAsset, amount } = payload.content\n\n    this._checkApproval(sendAsset, account, amount, config.iDAIZapSwapAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callIDAI(sendAsset, receiveAsset, account, amount, (err, zapResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(IDAI_RETURNED, zapResult)\n      })\n    })\n  }\n\n  _callIDAI = async (sendAsset, receiveAsset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    var amountToSend = web3.utils.toWei(amount, \"ether\")\n    if (sendAsset.decimals !== 18) {\n      amountToSend = amount*10**sendAsset.decimals;\n    }\n\n    let call = 'swapiDAItoyDAI'\n\n    let iDAIZapSwapContract = new web3.eth.Contract(config.iDAIZapSwapABI, config.iDAIZapSwapAddress)\n    iDAIZapSwapContract.methods[call](amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  getCurveBalances = (payload) => {\n    const account = store.getStore('account')\n\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    const curveContracts = store.getStore('curveContracts')\n\n    async.map(curveContracts, (curv, callback) => {\n\n      this._getERC20Balance(web3, curv, account, (err, balance) => {\n        if(err) {\n          return callback(err)\n        }\n        curv.balance = balance\n\n        callback(null, curv)\n      })\n    }, (err, result) => {\n\n      store.setStore({ curveContracts: result })\n\n      return emitter.emit(GET_CURV_BALANCE_RETURNED, result)\n    })\n  }\n\n  getVaultBalancesFull = async () => {\n    const account = store.getStore('account');\n    const assets = store.getStore('vaultAssets');\n\n    if(!account || !account.address) {\n      return false\n    }\n\n    const web3 = await this._getWeb3Provider();\n    if(!web3) {\n      return null\n    }\n\n    const vaultStatistics = await this._getStatistics();\n    const addressStatistics = await this._getAddressStatistics(account.address);\n    const addressTXHitory = await this._getAddressTxHistory(account.address);\n\n    const usdPrices = await this._getUSDPrices();\n\n    //todo: afi price\n    const afiPrice = await this._getAriesPrice();\n    const ariesAPY = await this._getAriesAPYs();\n\n    this._setDataIntoFarmingDashBoard(ariesAPY, afiPrice);\n\n    async.map(assets, (asset, callback) => {\n      async.parallel([\n        (callbackInner) => { this._getERC20Balance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getVaultBalance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getStrategy(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getStatsAPY(vaultStatistics, asset, callbackInner) },\n        (callbackInner) => { this._getVaultHoldings(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getAssetUSDPrices(web3, asset, account, usdPrices, callbackInner) },\n        (callbackInner) => { this._getVaultAPY(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getAddressStats(addressStatistics, asset, callbackInner) },\n        (callbackInner) => { this._getAddressTransactions(addressTXHitory, asset, callbackInner) },\n        //9\n        (callbackInner) => { this._getStakedBalance(web3, asset, account, callbackInner) },\n        //10\n        (callbackInner) => { this._getAriesAPY(ariesAPY, asset, callbackInner) },\n        //11\n        (callbackInner) => { this._getRewards(web3, asset, account, callbackInner) },\n        //12\n        (callbackInner) => { this._getLiquidityLock(ariesAPY, asset, callbackInner) },\n      ], (err, data) => {\n        if(err) {\n          return callback(err)\n        }\n        asset.balance = data[0]\n        asset.vaultBalance = data[1]\n        asset.strategy = data[2].strategy\n        asset.strategyHoldings = data[2].holdings\n        asset.strategyName = data[2].name\n        asset.stats = data[3]\n        asset.vaultHoldings = data[4]\n        asset.pricePerFullShare = data[5].pricePerFullShare\n        asset.usdPrice = data[5].usdPrice\n        asset.pricePerFullShare = data[6].pricePerFullShare\n        asset.apy = data[6].apy\n        asset.addressStatistics = data[7]\n        asset.addressTransactions = data[8]\n\n        asset.stakedBalance = data[9];\n        asset.ariesAPY = data[10];\n        asset.rewardAvailable = data[11];\n        asset.liquidityLock = data[12];\n        asset.afiPrice = afiPrice;\n\n        // console.log(asset, \"==test\");\n        callback(null, asset)\n      })\n    }, (err, assets) => {\n      if(err) {\n        console.error(err);\n        return emitter.emit(ERROR, err)\n      }\n\n      store.setStore({ vaultAssets: assets })\n      return emitter.emit(VAULT_BALANCES_FULL_RETURNED, assets)\n    })\n  }\n\n  _getAssetUSDPrices = async (web3, asset, account, usdPrices, callback) => {\n    try {\n      const vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n      const pricePerFullShare = await vaultContract.methods.getPricePerFullShare().call({ from: account.address })\n\n      const usdPrice = usdPrices[asset.price_id]\n\n      const returnObj = {\n        pricePerFullShare: pricePerFullShare/1e18,\n        usdPrice: usdPrice.usd\n      }\n\n      callback(null, returnObj)\n\n    } catch (ex) {\n      callback(null, {})\n    }\n  }\n\n  _getStrategy = async (web3, asset, account, callback) => {\n\n    if(['LINK'].includes(asset.id) ) {\n      return callback(null, {\n        strategy: '',\n        name: '',\n        holdings: 0\n      })\n    }\n\n    try {\n      const url = config.statsProvider + 'vaults'\n      const vaultsApiResultString = await rp(url);\n      const vaults = JSON.parse(vaultsApiResultString)\n      const vault = vaults.find((vault) => vault.address.toLowerCase() === asset.vaultContractAddress.toLowerCase())\n\n      if(!vault)throw false;\n      const strategyAddress = vault[\"strategyAddress\"]\n      const strategyName = vault[\"strategyName\"].replace(/^Strategy/, '')\n\n      const strategyContract = new web3.eth.Contract(config.vaultStrategyABI, strategyAddress)\n      const holdings = await strategyContract.methods.balanceOf().call({ from: account.address })\n\n      callback(null, {\n        strategy: strategyAddress,\n        name: strategyName,\n        holdings: holdings/(10**(asset.id === 'aLINK' ? 6 : asset.decimals))\n      })\n    } catch (ex) {\n      if(ex) console.error(ex);\n      callback(null, {\n        strategy: '',\n        name: '',\n        holdings: 0\n      })\n    }\n  }\n\n  _getStatsAPY = (vaultStatistics, asset, callback) => {\n    try {\n\n      if(asset.erc20address === 'Ethereum') {\n        asset.erc20address = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n      }\n\n      const vault = vaultStatistics.filter((stats) => {\n        return stats.tokenAddress.toLowerCase() === asset.erc20address.toLowerCase()\n      })\n\n      if(vault.length === 0) {\n        return callback(null, {})\n      }\n\n      callback(null, vault[0])\n    } catch(ex) {\n      callback(null, {})\n    }\n  }\n\n  _getAddressStats = (addressStatistics, asset, callback) => {\n    try {\n      if(asset.erc20address === 'Ethereum') {\n        asset.erc20address = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n      }\n\n      const vault = addressStatistics.filter((stats) => {\n        return stats.vaultAddress.toLowerCase() === asset.vaultContractAddress.toLowerCase()\n      })\n\n      if(vault.length === 0) {\n        return callback(null, null)\n      }\n\n      callback(null, vault[0])\n    } catch(ex) {\n      callback(null, {})\n    }\n  }\n\n  _getAddressTransactions = (addressTXHitory, asset, callback) => {\n    try {\n\n      if(asset.erc20address === 'Ethereum') {\n        asset.erc20address = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n      }\n\n      const vault = addressTXHitory.filter((stats) => {\n        return stats.vaultAddress.toLowerCase() === asset.vaultContractAddress.toLowerCase()\n      })\n\n      if(vault.length === 0) {\n        return callback(null, {})\n      }\n\n      callback(null, vault[0])\n    } catch(ex) {\n      callback(null, {})\n    }\n  }\n\n  _getVaultHoldings = async (web3, asset, account, callback) => {\n    try {\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n      var balance = await vaultContract.methods.balance().call({ from: account.address });\n      balance = parseFloat(balance)/10**asset.decimals\n      callback(null, parseFloat(balance))\n    } catch(ex) {\n      callback(null, 0)\n    }\n  }\n\n  getVaultBalances = async () => {\n    const account = store.getStore('account')\n\n    const assets = store.getStore('vaultAssets')\n\n    if(!account || !account.address) {\n      return false\n    }\n\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    async.map(assets, (asset, callback) => {\n      async.parallel([\n        (callbackInner) => { this._getERC20Balance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getVaultBalance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getVaultAPY(web3, asset, account, callbackInner) }\n      ], (err, data) => {\n        if(err) {\n          return callback(err)\n        }\n\n        asset.balance = data[0]\n        asset.vaultBalance = data[1]\n        asset.pricePerFullShare = data[2].pricePerFullShare\n        asset.apy = data[2].apy\n\n        callback(null, asset)\n      })\n    }, (err, assets) => {\n      if(err) {\n        return emitter.emit(ERROR, err)\n      }\n\n      store.setStore({ vaultAssets: assets })\n      return emitter.emit(VAULT_BALANCES_RETURNED, assets)\n    })\n  }\n\n  _getVaultBalance = async (web3, asset, account, callback) => {\n    if(asset.vaultContractAddress === null) {\n      return callback(null, 0)\n    }\n\n    try {\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n      var  balance = await vaultContract.methods.balanceOf(account.address).call({ from: account.address });\n      balance = parseFloat(balance)/10**asset.decimals\n      callback(null, parseFloat(balance))\n    } catch(ex) {\n      callback(null, 0)\n    }\n  }\n\n  _getVaultPricePerShare = async (web3, asset, account, callback) => {\n    if(asset.vaultContractAddress === null) {\n      return callback(null, 0)\n    }\n\n    try {\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n      var price = await vaultContract.methods.getPricePerFullShare().call({ from: account.address });\n      price = parseFloat(price)/10**18\n      callback(null, parseFloat(price))\n    } catch(ex) {\n      console.error(ex)\n      callback(null, 0)\n    }\n  }\n\n  depositVault = (payload) => {\n    const account = store.getStore('account');\n    const { asset, amount } = payload.content;\n\n    this._checkApproval(asset, account, amount, asset.vaultContractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callDepositVault(asset, account, amount, (err, depositResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(DEPOSIT_VAULT_RETURNED, depositResult)\n      })\n    })\n  }\n\n  _checkIfApprovalIsNeeded = async (asset, account, amount, contract, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n\n    const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n    if(parseFloat(ethAllowance) < parseFloat(amount)) {\n      asset.amount = amount\n      callback(null, asset)\n    } else {\n      callback(null, false)\n    }\n  }\n\n  _callApproval = async (asset, account, amount, contract, last, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    try {\n      if(['crvV1', 'crvV2', 'crvV3', 'crvV4', 'USDTv1', 'USDTv2', 'USDTv3', 'USDT'].includes(asset.id)) {\n        const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n        const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n        if(ethAllowance > 0) {\n          erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n              .on('transactionHash', function(hash){\n                //success...\n              })\n              .on('error', function(error) {\n                if (!error.toString().includes(\"-32601\")) {\n                  if(error.message) {\n                    return callback(error.message)\n                  }\n                  callback(error)\n                }\n              })\n        }\n      }\n\n      if(last) {\n        await erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        callback()\n      } else {\n        erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n            .on('transactionHash', function(hash){\n              callback()\n            })\n            .on('error', function(error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if(error.message) {\n                  return callback(error.message)\n                }\n                callback(error)\n              }\n            })\n      }\n    } catch(error) {\n      if(error.message) {\n        return callback(error.message)\n      }\n      callback(error)\n    }\n  }\n\n  _callDepositVault = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    var amountToSend = web3.utils.toWei(amount, \"ether\")\n    if (asset.decimals !== 18) {\n      amountToSend = amount*10**asset.decimals;\n    }\n\n    if(asset.erc20address === 'Ethereum') {\n      vaultContract.methods.depositETH().send({ from: account.address, value: amountToSend, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', function(hash){\n            // console.log(hash)\n            callback(null, hash)\n          })\n          .on('confirmation', function(confirmationNumber, receipt){\n            // console.log(confirmationNumber, receipt);\n          })\n          .on('receipt', function(receipt){\n            // console.log(receipt);\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n          .catch((error) => {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n    } else {\n      vaultContract.methods.deposit(amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', function(hash){\n            // console.log(hash)\n            callback(null, hash)\n          })\n          .on('confirmation', function(confirmationNumber, receipt){\n            // console.log(confirmationNumber, receipt);\n          })\n          .on('receipt', function(receipt){\n            // console.log(receipt);\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n          .catch((error) => {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n    }\n  }\n\n  depositAllVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset } = payload.content\n\n    this._checkApproval(asset, account, asset.balance, asset.vaultContractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callDepositAllVault(asset, account, (err, depositResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(DEPOSIT_ALL_VAULT_RETURNED, depositResult)\n      })\n    })\n  }\n\n  _callDepositAllVault = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    vaultContract.methods.depositAll().send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  withdrawVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset, amount } = payload.content\n\n\n    if(asset.yVaultCheckAddress && !asset.yVaultCheckDisabled) {\n      this._checkApprovalForProxy(asset, account, amount, asset.yVaultCheckAddress, (err) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callWithdrawVaultProxy(asset, account, amount, (err, withdrawResult) => {\n          if(err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(WITHDRAW_VAULT_RETURNED, withdrawResult)\n        })\n      })\n    } else {\n      this._callWithdrawVault(asset, account, amount, (err, withdrawResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n        return emitter.emit(WITHDRAW_VAULT_RETURNED, withdrawResult)\n      })\n    }\n  }\n\n  _callWithdrawVaultProxy = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let yVaultCheckContract = new web3.eth.Contract(config.yVaultCheckABI, asset.yVaultCheckAddress)\n\n    var amountSend = web3.utils.toWei(amount, \"ether\")\n    if (asset.decimals !== 18) {\n      amountSend = Math.round(amount*10**asset.decimals);\n    }\n\n    yVaultCheckContract.methods.withdraw(amountSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          console.error(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  _callWithdrawVault = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    var amountSend = web3.utils.toWei(amount, \"ether\")\n    if (asset.decimals !== 18) {\n      amountSend = Math.round(amount*10**asset.decimals);\n    }\n\n    let functionCall = vaultContract.methods.withdraw(amountSend)\n    if(asset.erc20address === 'Ethereum') {\n      functionCall = vaultContract.methods.withdrawETH(amountSend)\n    }\n\n    functionCall.send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          console.error(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  withdrawAllVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset } = payload.content\n\n    if(asset.yVaultCheckAddress && !asset.yVaultCheckDisabled) {\n      this._checkApprovalForProxy(asset, account, asset.vaultBalance, asset.yVaultCheckAddress, (err) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callWithdrawAllVaultProxy(asset, account, (err, withdrawResult) => {\n          if(err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(WITHDRAW_ALL_VAULT_RETURNED, withdrawResult)\n        })\n      })\n    } else {\n      this._callWithdrawAllVault(asset, account, (err, withdrawResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n        return emitter.emit(WITHDRAW_ALL_VAULT_RETURNED, withdrawResult)\n      })\n    }\n  }\n\n  _callWithdrawAllVaultProxy = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(config.yVaultCheckABI, asset.yVaultCheckAddress)\n\n    vaultContract.methods.withdrawAll().send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          console.error(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  _callWithdrawAllVault = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    let functionCall = vaultContract.methods.withdrawAll()\n    if(asset.erc20address === 'Ethereum') {\n      functionCall = vaultContract.methods.withdrawAllETH()\n    }\n\n    functionCall.send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          console.error(error);\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  _getVaultAPY = async (web3, asset, account, callback) => {\n    try {\n      if(asset.vaultContractAddress === null) {\n        return callback(null, {\n          pricePerFullShare: 0,\n          apy: 0\n        })\n      }\n\n      const block = await web3.eth.getBlockNumber();\n      const contract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress);\n      let pricePerFullShare = await contract.methods.getPricePerFullShare().call();\n\n      let balance = pricePerFullShare - asset.measurement;\n      balance = balance / 1e18;\n      let diff = block - asset.lastMeasurement;\n\n      if(diff === 0) {\n        return callback(null, {\n          pricePerFullShare: 0,\n          apy: 0\n        })\n      }\n\n      balance = balance / diff;\n      balance = balance * 242584600;\n\n      const returnObj = {\n        pricePerFullShare: parseFloat(pricePerFullShare)/10**18,\n        apy: parseFloat(balance)\n      }\n\n      callback(null, returnObj)\n    } catch (e) {\n      console.error(e)\n      callback(null, {\n        pricePerFullShare: 0,\n        apy: 0\n      })\n    }\n  }\n\n  getUSDPrices = async () => {\n    try {\n      const priceJSON = await this._getUSDPrices()\n\n      store.setStore({ usdPrices: priceJSON })\n      return emitter.emit(USD_PRICE_RETURNED, priceJSON)\n\n    } catch(e) {\n      console.error(e)\n    }\n  }\n\n  _getUSDPrices = async () => {\n    try {\n      const url = 'https://api.coingecko.com/api/v3/simple/price?ids=usd-coin,dai,true-usd,tether,usd-coin,chainlink,yearn-finance,binance-usd,wrapped-bitcoin,ethereum,nusd,chainlink,aave-link,lp-sbtc-curve,lp-bcurve,curve-fi-ydai-yusdc-yusdt-ytusd,lp-3pool-curve,gemini-dollar,curve-dao-token&vs_currencies=usd,eth'\n      const priceString = await rp(url);\n      const priceJSON = JSON.parse(priceString)\n\n      return priceJSON\n    } catch(e) {\n      console.error(e)\n      return null\n    }\n  }\n\n  getDashboardSnapshot = () => {\n    console.log(\"getDashboardSnapshot ==\");\n    emitter.on(VAULT_BALANCES_FULL_RETURNED, this._calculateDashboard)\n    emitter.on(BALANCES_LIGHT_RETURNED, this._calculateDashboard)\n    emitter.on(USD_PRICE_RETURNED, this._calculateDashboard)\n    emitter.on(STATISTICS_RETURNED, this._calculateDashboard)\n\n    this.getVaultBalancesFull()\n    this.getBalancesLight()\n    this.getUSDPrices()\n    this.getStatistics()\n  }\n\n  _calculateDashboard = () => {\n    console.log(\"_calculateDashboard ==\");\n    const vaults = store.getStore('vaultAssets')\n    const assets = store.getStore('assets')\n    const prices = store.getStore('usdPrices')\n    const statistics = store.getStore('statistics')\n\n    if(vaults && vaults.length > 0 && assets && assets.length > 0 && prices !== null && statistics && statistics.length > 0) {\n      let basedOn = localStorage.getItem('yearn.finance-dashboard-basedon')\n\n      if(!basedOn) {\n        basedOn = '1'\n      }\n\n      // FILTER USED VAULTS AND CALCULATE VAULT ASSET BALANCES\n      const vaultsInUse = vaults.filter((vault) => {\n        if(vault.id === 'ETH') {\n          return false\n        }\n\n        return vault.vaultBalance > 0.0001\n      }).map((vault) => {\n\n        let apy = 0\n\n        const vaultStats = statistics.filter((stats) => {\n          return stats.tokenAddress.toLowerCase() === vault.erc20address.toLowerCase()\n        })\n\n        if(vaultStats.length === 0) {\n          apy = vault.apy\n        } else {\n          switch (basedOn) {\n            case '1':\n              apy = vaultStats[0].apyOneWeekSample\n              break;\n            case '2':\n              apy = vaultStats[0].apyOneMonthSample\n              break;\n            case '3':\n              apy = vaultStats[0].apyInceptionSample\n              break;\n            default:\n              apy = vault.apy\n          }\n        }\n\n        const price = prices[vault.price_id]\n        vault.prices = price\n        vault.usdBalance = vault.vaultBalance * vault.pricePerFullShare * vault.prices.usd\n        vault.vaultGrowth_daily_usd = vault.vaultBalance * vault.pricePerFullShare * (apy/36500) * vault.prices.usd\n        vault.vaultGrowth_weekly_usd = vault.vaultBalance * vault.pricePerFullShare * (apy/5200) * vault.prices.usd\n        vault.vaultGrowth_yearly_usd = vault.vaultBalance * vault.pricePerFullShare * apy/100 * vault.prices.usd\n\n        vault.ethBalance = vault.vaultBalance * vault.pricePerFullShare * vault.prices.eth\n        vault.vaultGrowth_daily_eth = vault.vaultBalance * vault.pricePerFullShare * (apy/36500) * vault.prices.eth\n        vault.vaultGrowth_weekly_eth = vault.vaultBalance * vault.pricePerFullShare * (apy/5200) * vault.prices.eth\n        vault.vaultGrowth_yearly_eth = vault.vaultBalance * vault.pricePerFullShare * apy/100 * vault.prices.eth\n\n        return vault\n      })\n\n      // CALCULATE VAULT BALANCES AND DAILY GROWTH\n      const vaultBalances = vaultsInUse.reduce((accumulator, vault) => {\n        accumulator.vaultBalance_usd = accumulator.vaultBalance_usd + vault.usdBalance\n        accumulator.vaultGrowth_daily_usd = accumulator.vaultGrowth_daily_usd + vault.vaultGrowth_daily_usd\n        accumulator.vaultGrowth_weekly_usd = accumulator.vaultGrowth_weekly_usd + vault.vaultGrowth_weekly_usd\n        accumulator.vaultGrowth_yearly_usd = accumulator.vaultGrowth_yearly_usd + vault.vaultGrowth_yearly_usd\n\n        accumulator.vaultBalance_eth = accumulator.vaultBalance_eth + vault.ethBalance\n        accumulator.vaultGrowth_daily_eth = accumulator.vaultGrowth_daily_eth + vault.vaultGrowth_daily_eth\n        accumulator.vaultGrowth_weekly_eth = accumulator.vaultGrowth_weekly_eth + vault.vaultGrowth_weekly_eth\n        accumulator.vaultGrowth_yearly_eth = accumulator.vaultGrowth_yearly_eth + vault.vaultGrowth_yearly_eth\n        return accumulator\n      }, {\n        vaultBalance_usd: 0,\n        vaultGrowth_daily_usd: 0,\n        vaultGrowth_weekly_usd: 0,\n        vaultGrowth_yearly_usd: 0,\n        vaultBalance_eth: 0,\n        vaultGrowth_daily_eth: 0,\n        vaultGrowth_weekly_eth: 0,\n        vaultGrowth_yearly_eth: 0\n      })\n\n      // CALCULATE VAULT GROWth PERCENTAGES\n      const vaultGrowthDailyPerc_usd = vaultBalances.vaultGrowth_daily_usd * 100 / vaultBalances.vaultBalance_usd\n      const vaultGrowthWeeklyPerc_usd = vaultBalances.vaultGrowth_weekly_usd * 100 / vaultBalances.vaultBalance_usd\n      const vaultGrowthYearlyPerc_usd = vaultBalances.vaultGrowth_yearly_usd * 100 / vaultBalances.vaultBalance_usd\n\n      const vaultGrowthDailyPerc_eth = vaultBalances.vaultGrowth_daily_eth * 100 / vaultBalances.vaultBalance_eth\n      const vaultGrowthWeeklyPerc_eth = vaultBalances.vaultGrowth_weekly_eth * 100 / vaultBalances.vaultBalance_eth\n      const vaultGrowthYearlyPerc_eth = vaultBalances.vaultGrowth_yearly_eth * 100 / vaultBalances.vaultBalance_eth\n\n\n      // FILTER USED EARN AND CALCULATE EARN ASSET BALANCES\n      const assetsInUse = assets.filter((asset) => {\n        return asset.investedBalance > 0.0001\n      }).map((asset) => {\n        const price = prices[asset.price_id]\n        if(price == null) {\n          // console.log(asset.price_id)\n        }\n        asset.prices = price\n        asset.usdBalance = asset.investedBalance * asset.price * asset.prices.usd\n        asset.earnGrowth_daily_usd = asset.investedBalance * asset.price * (asset.maxApr/36500) * asset.prices.usd\n        asset.earnGrowth_weekly_usd = asset.investedBalance * asset.price * (asset.maxApr/5200) * asset.prices.usd\n        asset.earnGrowth_yearly_usd = asset.investedBalance * asset.price * asset.maxApr/100 * asset.prices.usd\n\n        asset.ethBalance = asset.investedBalance * asset.price * asset.prices.eth\n        asset.earnGrowth_daily_eth = asset.investedBalance * asset.price * (asset.maxApr/36500) * asset.prices.eth\n        asset.earnGrowth_weekly_eth = asset.investedBalance * asset.price * (asset.maxApr/5200) * asset.prices.eth\n        asset.earnGrowth_yearly_eth = asset.investedBalance * asset.price * asset.maxApr/100 * asset.prices.eth\n        return asset\n      })\n\n\n      // CALCULATE EARN BALANCES AND DAILY GROWTH\n      const earnBalances = assetsInUse.reduce((accumulator, asset) => {\n        accumulator.earnBalance_usd = accumulator.earnBalance_usd + asset.usdBalance\n        accumulator.earnGrowth_daily_usd = accumulator.earnGrowth_daily_usd + asset.earnGrowth_daily_usd\n        accumulator.earnGrowth_weekly_usd = accumulator.earnGrowth_weekly_usd + asset.earnGrowth_weekly_usd\n        accumulator.earnGrowth_yearly_usd = accumulator.earnGrowth_yearly_usd + asset.earnGrowth_yearly_usd\n\n        accumulator.earnBalance_eth = accumulator.earnBalance_eth + asset.ethBalance\n        accumulator.earnGrowth_daily_eth = accumulator.earnGrowth_daily_eth + asset.earnGrowth_daily_eth\n        accumulator.earnGrowth_weekly_eth = accumulator.earnGrowth_weekly_eth + asset.earnGrowth_weekly_eth\n        accumulator.earnGrowth_yearly_eth = accumulator.earnGrowth_yearly_eth + asset.earnGrowth_yearly_eth\n        return accumulator\n      }, {\n        earnBalance_usd: 0,\n        earnGrowth_daily_usd: 0,\n        earnGrowth_weekly_usd: 0,\n        earnGrowth_yearly_usd: 0,\n        earnBalance_eth: 0,\n        earnGrowth_daily_eth: 0,\n        earnGrowth_weekly_eth: 0,\n        earnGrowth_yearly_eth: 0\n      })\n\n      // CALCULATE EARN GROWth PERCENTAGES\n      const earnGrowthDailyPerc_usd = earnBalances.earnGrowth_daily_usd * 100 / earnBalances.earnBalance_usd\n      const earnGrowthWeeklyPerc_usd = earnBalances.earnGrowth_weekly_usd * 100 / earnBalances.earnBalance_usd\n      const earnGrowthYearlyPerc_usd = earnBalances.earnGrowth_yearly_usd * 100 / earnBalances.earnBalance_usd\n\n      const earnGrowthDailyPerc_eth = earnBalances.earnGrowth_daily_eth * 100 / earnBalances.earnBalance_eth\n      const earnGrowthWeeklyPerc_eth = earnBalances.earnGrowth_weekly_eth * 100 / earnBalances.earnBalance_eth\n      const earnGrowthYearlyPerc_eth = earnBalances.earnGrowth_yearly_eth * 100 / earnBalances.earnBalance_eth\n\n\n\n\n      // CALCULATE PORTFOLIO (earn + vault) BALANCES\n      const portfolioBalance_usd = vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd\n      const portfolioGrowthDaily_usd = vaultBalances.vaultGrowth_daily_usd + earnBalances.earnGrowth_daily_usd\n      const portfolioGrowthWeekly_usd = vaultBalances.vaultGrowth_weekly_usd + earnBalances.earnGrowth_weekly_usd\n      const portfolioGrowthYearly_usd = vaultBalances.vaultGrowth_yearly_usd + earnBalances.earnGrowth_yearly_usd\n      const portfolioGrowthDailyPerc_usd = (vaultBalances.vaultGrowth_daily_usd + earnBalances.earnGrowth_daily_usd) * 100 / (vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd)\n      const portfolioGrowthWeeklyPerc_usd = (vaultBalances.vaultGrowth_weekly_usd + earnBalances.earnGrowth_weekly_usd) * 100 / (vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd)\n      const portfolioGrowthYearlyPerc_usd = (vaultBalances.vaultGrowth_yearly_usd + earnBalances.earnGrowth_yearly_usd) * 100 / (vaultBalances.vaultBalance_usd + earnBalances.earnBalance_usd)\n\n\n      const portfolioBalance_eth = vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth\n      const portfolioGrowthDaily_eth = vaultBalances.vaultGrowth_daily_eth + earnBalances.earnGrowth_daily_eth\n      const portfolioGrowthWeekly_eth = vaultBalances.vaultGrowth_weekly_eth + earnBalances.earnGrowth_weekly_eth\n      const portfolioGrowthYearly_eth = vaultBalances.vaultGrowth_yearly_eth + earnBalances.earnGrowth_yearly_eth\n      const portfolioGrowthDailyPerc_eth = (vaultBalances.vaultGrowth_daily_eth + earnBalances.earnGrowth_daily_eth) * 100 / (vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth)\n      const portfolioGrowthWeeklyPerc_eth = (vaultBalances.vaultGrowth_weekly_eth + earnBalances.earnGrowth_weekly_eth) * 100 / (vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth)\n      const portfolioGrowthYearlyPerc_eth = (vaultBalances.vaultGrowth_yearly_eth + earnBalances.earnGrowth_yearly_eth) * 100 / (vaultBalances.vaultBalance_eth + earnBalances.earnBalance_eth)\n\n\n      let dashboard = {\n        vault_balance_usd: vaultBalances.vaultBalance_usd,\n        vault_growth_usd_daily: vaultBalances.vaultGrowth_daily_usd,\n        vault_growth_usd_weekly: vaultBalances.vaultGrowth_weekly_usd,\n        vault_growth_usd_yearly: vaultBalances.vaultGrowth_yearly_usd,\n        vault_growth_usd_daily_perc: vaultGrowthDailyPerc_usd,\n        vault_growth_usd_weekly_perc: vaultGrowthWeeklyPerc_usd,\n        vault_growth_usd_yearly_perc: vaultGrowthYearlyPerc_usd,\n\n        vault_balance_eth: vaultBalances.vaultBalance_eth,\n        vault_growth_eth_daily: vaultBalances.vaultGrowth_daily_eth,\n        vault_growth_eth_weekly: vaultBalances.vaultGrowth_weekly_eth,\n        vault_growth_eth_yearly: vaultBalances.vaultGrowth_yearly_eth,\n        vault_growth_eth_daily_perc: vaultGrowthDailyPerc_eth,\n        vault_growth_eth_weekly_perc: vaultGrowthWeeklyPerc_eth,\n        vault_growth_eth_yearly_perc: vaultGrowthYearlyPerc_eth,\n\n\n        earn_balance_usd: earnBalances.earnBalance_usd,\n        earn_growth_usd_daily: earnBalances.earnGrowth_daily_usd,\n        earn_growth_usd_weekly: earnBalances.earnGrowth_weekly_usd,\n        earn_growth_usd_yearly: earnBalances.earnGrowth_yearly_usd,\n        earn_growth_usd_daily_perc: earnGrowthDailyPerc_usd,\n        earn_growth_usd_weekly_perc: earnGrowthWeeklyPerc_usd,\n        earn_growth_usd_yearly_perc: earnGrowthYearlyPerc_usd,\n\n        earn_balance_eth: earnBalances.earnBalance_eth,\n        earn_growth_eth_daily: earnBalances.earnGrowth_daily_eth,\n        earn_growth_eth_weekly: earnBalances.earnGrowth_weekly_eth,\n        earn_growth_eth_yearly: earnBalances.earnGrowth_yearly_eth,\n        earn_growth_eth_daily_perc: earnGrowthDailyPerc_eth,\n        earn_growth_eth_weekly_perc: earnGrowthWeeklyPerc_eth,\n        earn_growth_eth_yearly_perc: earnGrowthYearlyPerc_eth,\n\n        portfolio_balance_usd: portfolioBalance_usd,\n        portfolio_growth_usd_daily: portfolioGrowthDaily_usd,\n        portfolio_growth_usd_weekly: portfolioGrowthWeekly_usd,\n        portfolio_growth_usd_yearly: portfolioGrowthYearly_usd,\n        portfolio_growth_usd_daily_perc: portfolioGrowthDailyPerc_usd,\n        portfolio_growth_usd_weekly_perc: portfolioGrowthWeeklyPerc_usd,\n        portfolio_growth_usd_yearly_perc: portfolioGrowthYearlyPerc_usd,\n\n        portfolio_balance_eth: portfolioBalance_eth,\n        portfolio_growth_eth_daily: portfolioGrowthDaily_eth,\n        portfolio_growth_eth_weekly: portfolioGrowthWeekly_eth,\n        portfolio_growth_eth_yearly: portfolioGrowthYearly_eth,\n        portfolio_growth_eth_daily_perc: portfolioGrowthDailyPerc_eth,\n        portfolio_growth_eth_weekly_perc: portfolioGrowthWeeklyPerc_eth,\n        portfolio_growth_eth_yearly_perc: portfolioGrowthYearlyPerc_eth,\n\n        vaults: vaultsInUse,\n        assets: assetsInUse,\n        statistics: statistics\n      }\n\n      store.setStore({ dashboard: dashboard })\n      emitter.emit(DASHBOARD_SNAPSHOT_RETURNED, dashboard)\n\n    }\n  }\n\n  getStatistics = async () => {\n    try {\n      const statistics = await this._getStatistics()\n\n      store.setStore({ statistics: statistics })\n      emitter.emit(STATISTICS_RETURNED, statistics)\n    } catch(e) {\n      console.error(e)\n      return store.getStore('universalGasPrice')\n    }\n  }\n\n  _getStatistics = async () => {\n    try {\n      const url = config.statsProvider+'vaults/apy'\n      const statisticsString = await rp(url);\n      const statistics = JSON.parse(statisticsString)\n\n      return statistics\n    } catch(e) {\n      console.error(e)\n      return store.getStore('universalGasPrice')\n    }\n  }\n\n  _getAddressStatistics = async (address) => {\n    try {\n      const url = config.statsProvider+'user/'+address+'/vaults/statistics'\n      const statisticsString = await rp(url);\n      const statistics = JSON.parse(statisticsString)\n\n      return statistics\n    } catch(e) {\n      console.error(e)\n      return store.getStore('universalGasPrice')\n    }\n  }\n\n  _getAddressTxHistory = async (address) => {\n    try {\n      const url = config.statsProvider+'user/'+address+'/vaults/transactions'\n      const statisticsString = await rp(url);\n      const statistics = JSON.parse(statisticsString)\n\n      return statistics\n    } catch(e) {\n      console.error(e)\n      return store.getStore('universalGasPrice')\n    }\n  }\n\n  _getGasPrice = async () => {\n    try {\n      const url = \"https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=SQDE7E4HMPT3J4DECSY4IZ3HP1PC4MANB7\";\n      // const url = 'https://gasprice.poa.network/'\n      const priceString = await rp(url);\n      const priceJSON = JSON.parse(priceString)\n      if(priceJSON) {\n        return priceJSON.SafeGasPrice.toFixed(0)\n      }\n      return store.getStore('universalGasPrice')\n    } catch(e) {\n      console.error(e)\n      return store.getStore('universalGasPrice')\n    }\n  }\n\n  _getWeb3Provider = async () => {\n    const web3context = store.getStore('web3context')\n    if(!web3context) {\n      return null\n    }\n    const provider = web3context.library.provider\n    if(!provider) {\n      return null\n    }\n\n    const web3 = new Web3(provider);\n\n    // const web3 = createAlchemyWeb3(config.infuraProvider, { writeProvider: provider });\n\n    return web3\n  }\n\n  _getExperimentalVaultClaimable = async (web3, asset, account, callback) => {\n    try {\n      let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n      let balance = await vaultContract.methods.claimable(account.address).call({ from: account.address });\n      balance = parseFloat(balance)/10**asset.decimals\n      callback(null, parseFloat(balance))\n    } catch(ex) {\n      callback(null, 0)\n    }\n  }\n\n  _getExperimentalVaultVested = async (web3, asset, account, callback) => {\n    try {\n      let vaultContract = new web3.eth.Contract(asset.vestingContractABI, asset.vestingContractAddress)\n      let balance = await vaultContract.methods.balanceOf(account.address).call({ from: account.address });\n      balance = parseFloat(balance)/10**asset.decimals\n      callback(null, parseFloat(balance))\n    } catch(ex) {\n      callback(null, 0)\n    }\n  }\n\n  _getExperimentalVaultGauges = async (web3, asset, account, callback) => {\n    const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n    try {\n      const curveRegistryContract = new web3.eth.Contract(config.curveRegistryContractABI, config.curveRegistryContractAddress)\n\n      const poolCount = await curveRegistryContract.methods.pool_count().call()\n      // console.log(poolCount)\n      const pools = await Promise.all([...Array(parseInt(poolCount)).keys()].map(\n          i => curveRegistryContract.methods.pool_list(i).call()\n      ))\n      // console.log(pools)\n      const resp = await Promise.all(pools.map(\n          pool => curveRegistryContract.methods.get_gauges(pool).call()\n      ))\n      // console.log(resp)\n      let gauges = []\n      for (let x of resp) gauges.push(...x[0])\n      gauges = gauges.filter(gauge => gauge !== ZERO_ADDRESS)\n\n      let balances = await Promise.all(gauges.map(this._gagueClaimable))\n      let userGauges = gauges.filter((gauge, i) => { return balances[i] > 0 })\n      while (userGauges.length < 20) userGauges.push(ZERO_ADDRESS)\n      const gaugeBalance = balances.reduce((prev, curr) => { return curr + prev })\n\n      // console.log(gaugeBalance)\n      // console.log(userGauges)\n      callback(null, { gaugeBalance: gaugeBalance, userGauges: userGauges })\n    } catch(ex) {\n      console.error(ex)\n      const emptyGauges = []\n      while (emptyGauges.length < 20) emptyGauges.push(ZERO_ADDRESS)\n      callback(null, { gaugeBalance: 0, userGauges: emptyGauges })\n    }\n  }\n\n  _gagueClaimable = async (gauge) => {\n    const web3 = await this._getWeb3Provider()\n    const account = store.getStore('account')\n\n    const contract = new web3.eth.Contract(config.curveGaugeContractABI, gauge)\n    let balance = await contract.methods.claimable_tokens(account.address).call()\n    return parseFloat(web3.utils.fromWei(balance, \"ether\"))\n  }\n\n  depositExperimentalVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset, amount } = payload.content\n\n    this._checkApproval(asset, account, amount, asset.vaultContractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callDepositExperimentalVault(asset, account, amount, (err, depositResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(DEPOSIT_EXPERIMENTAL_VAULT_RETURNED, depositResult)\n      })\n    })\n  }\n\n  _callDepositExperimentalVault = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    var amountToSend = web3.utils.toWei(amount, \"ether\")\n    if (asset.decimals !== 18) {\n      amountToSend = amount*10**asset.decimals;\n    }\n\n    vaultContract.methods.deposit(amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  depositAllExperimentalVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset } = payload.content\n\n    this._checkApproval(asset, account, asset.balance, asset.vaultContractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callDepositAllExperimentalVault(asset, account, (err, depositResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(DEPOSIT_ALL_EXPERIMENTAL_VAULT_RETURNED, depositResult)\n      })\n    })\n  }\n\n  _callDepositAllExperimentalVault = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    vaultContract.methods.depositAll().send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  claimExperimentalVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset } = payload.content\n\n    this._callClaimExperimentalVault(asset, account, (err, claimResult) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      return emitter.emit(CLAIM_EXPERIMENTAL_VAULT_RETURNED, claimResult)\n    })\n  }\n\n  _callClaimExperimentalVault = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let vaultContract = new web3.eth.Contract(asset.vaultContractABI, asset.vaultContractAddress)\n\n    vaultContract.methods.claim().send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n\n  zapExperimentalVault = (payload) => {\n    const account = store.getStore('account')\n    const { asset } = payload.content\n\n    this._checkApproval(asset, account, asset.balance, asset.zapContractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._checkCurveMintApproval(asset, account, asset.zapContractAddress, (err) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callZapExperimentalVault(asset, account, (err, depositResult) => {\n          if(err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(ZAP_EXPERIMENTAL_VAULT_RETURNED, depositResult)\n        })\n      })\n    })\n  }\n\n  _callZapExperimentalVault = async (asset, account, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let zapContract = new web3.eth.Contract(asset.zapContractABI, asset.zapContractAddress)\n\n    // console.log(asset.gauges)\n\n    zapContract.methods.zap(asset.gauges).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          // console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          // console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          // console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n  }\n}\n\nconst store = StoreExtension(new Store(), dispatcher);\n// const store = new Store();\n\nexport default {\n  store: store,\n  dispatcher: dispatcher,\n  emitter: emitter\n};\n"]},"metadata":{},"sourceType":"module"}